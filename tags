!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
ARRAY	nodeAttribute.h	/^    ARRAY$/;"	e	enum:__anon1
ARRAY_ID	header.h	/^    ARRAY_ID, \/\/ID_NODE->child = dim$/;"	e	enum:IDENTIFIER_KIND
ARRAY_SIZE_NEGATIVE	semanticAnalysis.c	/^    ARRAY_SIZE_NEGATIVE,$/;"	e	enum:ErrorMsgKind	file:
ARRAY_SIZE_NOT_INT	semanticAnalysis.c	/^    ARRAY_SIZE_NOT_INT,$/;"	e	enum:ErrorMsgKind	file:
ARRAY_SUBSCRIPT_NOT_INT	semanticAnalysis.c	/^    ARRAY_SUBSCRIPT_NOT_INT,$/;"	e	enum:ErrorMsgKind	file:
ARRAY_TYPE_DESCRIPTOR	symbolTable.h	/^    ARRAY_TYPE_DESCRIPTOR,$/;"	e	enum:TypeDescriptorKind
ASSIGN_STMT	header.h	/^    ASSIGN_STMT, \/\/TODO:for simpler implementation, assign_expr also uses this$/;"	e	enum:STMT_KIND
AST_NODE	header.h	/^struct AST_NODE {$/;"	s
AST_NODE	header.h	/^typedef struct AST_NODE AST_NODE;$/;"	t	typeref:struct:AST_NODE
AST_TYPE	header.h	/^typedef enum AST_TYPE$/;"	g
AST_TYPE	header.h	/^} AST_TYPE;$/;"	t	typeref:enum:AST_TYPE
AST_TYPE_string	functions.c	/^char *AST_TYPE_string[] = {"PROGRAM", "GLOBAL_DECL_LIST", "GLOBAL_DECL", "DECL_LIST", "FUNCTION_DECL", "PARAM_LIST", "PARAM", "DIM_FN", "DIMFN1", "EXPR_NULL", "BLOCK", "DECL", "TYPE_DECL", "VAR_DECL",$/;"	v
Allocate	alloc.c	/^AST_NODE *Allocate(AST_TYPE type){$/;"	f
ArrayProperties	nodeAttribute.h	/^typedef struct ArrayProperties$/;"	s
ArrayProperties	nodeAttribute.h	/^} ArrayProperties;$/;"	t	typeref:struct:ArrayProperties
ArrayProperties	symbolTable.h	/^typedef struct ArrayProperties$/;"	s
ArrayProperties	symbolTable.h	/^} ArrayProperties;$/;"	t	typeref:struct:ArrayProperties
BEGIN	lex.yy.c	125;"	d	file:
BINARY_OPERATION	header.h	/^    BINARY_OPERATION,$/;"	e	enum:EXPR_KIND
BINARY_OPERATOR	header.h	/^typedef enum BINARY_OPERATOR$/;"	g
BINARY_OPERATOR	header.h	/^} BINARY_OPERATOR;$/;"	t	typeref:enum:BINARY_OPERATOR
BINARY_OP_ADD	header.h	/^    BINARY_OP_ADD,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_AND	header.h	/^    BINARY_OP_AND,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_DIV	header.h	/^    BINARY_OP_DIV,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_EQ	header.h	/^    BINARY_OP_EQ,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_GE	header.h	/^    BINARY_OP_GE,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_GT	header.h	/^    BINARY_OP_GT,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_LE	header.h	/^    BINARY_OP_LE,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_LT	header.h	/^    BINARY_OP_LT,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_MUL	header.h	/^    BINARY_OP_MUL,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_NE	header.h	/^    BINARY_OP_NE,$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_OR	header.h	/^    BINARY_OP_OR$/;"	e	enum:BINARY_OPERATOR
BINARY_OP_SUB	header.h	/^    BINARY_OP_SUB,$/;"	e	enum:BINARY_OPERATOR
BLOCK_NODE	header.h	/^    BLOCK_NODE,$/;"	e	enum:AST_TYPE
CC	Makefile	/^CC = gcc -g$/;"	m
CONST	parser.tab.c	/^     CONST = 259,$/;"	e	enum:yytokentype	file:
CONST	parser.tab.h	/^     CONST = 259,$/;"	e	enum:yytokentype
CONST_STRING_TYPE	header.h	/^    CONST_STRING_TYPE,\/\/for "const string"$/;"	e	enum:DATA_TYPE
CONST_VALUE_NODE	header.h	/^    CONST_VALUE_NODE, \/\/ex:1, 2, "constant string"$/;"	e	enum:AST_TYPE
CON_Type	header.h	/^typedef struct CON_Type{$/;"	s
CON_Type	header.h	/^} CON_Type;$/;"	t	typeref:struct:CON_Type
C_type	header.h	/^typedef enum C_type {INTEGERC,FLOATC,STRINGC} C_type;$/;"	g
C_type	header.h	/^typedef enum C_type {INTEGERC,FLOATC,STRINGC} C_type;$/;"	t	typeref:enum:C_type
DATA_TYPE	header.h	/^typedef enum DATA_TYPE$/;"	g
DATA_TYPE	header.h	/^} DATA_TYPE;$/;"	t	typeref:enum:DATA_TYPE
DATA_TYPE	nodeAttribute.h	/^} DATA_TYPE;$/;"	t	typeref:enum:__anon1
DECLARATION_NODE	header.h	/^    DECLARATION_NODE,$/;"	e	enum:AST_TYPE
DECLSemanticValue	header.h	/^typedef struct DECLSemanticValue$/;"	s
DECLSemanticValue	header.h	/^} DECLSemanticValue;$/;"	t	typeref:struct:DECLSemanticValue
DECL_KIND	header.h	/^typedef enum DECL_KIND$/;"	g
DECL_KIND	header.h	/^} DECL_KIND;$/;"	t	typeref:enum:DECL_KIND
DataTypeDescriptor	nodeAttribute.h	/^typedef struct DataTypeDescriptor$/;"	s
DataTypeDescriptor	nodeAttribute.h	/^} DataTypeDescriptor;$/;"	t	typeref:struct:DataTypeDescriptor
Disassembly	Test/a.s	/^Disassembly of section .fini:$/;"	l
Disassembly	Test/a.s	/^Disassembly of section .init:$/;"	l
Disassembly	Test/a.s	/^Disassembly of section .text:$/;"	l
Disassembly	Test/a.s	/^Disassembly of section __libc_freeres_fn:$/;"	l
Disassembly	Test/a.s	/^Disassembly of section __libc_thread_freeres_fn:$/;"	l
Disassembly	Test/s.s	/^Disassembly of section .text:$/;"	l
ECHO	lex.yy.c	619;"	d	file:
ELSE	parser.tab.c	/^     ELSE = 264,$/;"	e	enum:yytokentype	file:
ELSE	parser.tab.h	/^     ELSE = 264,$/;"	e	enum:yytokentype
EOB_ACT_CONTINUE_SCAN	lex.yy.c	168;"	d	file:
EOB_ACT_END_OF_FILE	lex.yy.c	169;"	d	file:
EOB_ACT_LAST_MATCH	lex.yy.c	170;"	d	file:
ERROR	parser.tab.c	/^     ERROR = 291,$/;"	e	enum:yytokentype	file:
ERROR	parser.tab.h	/^     ERROR = 291,$/;"	e	enum:yytokentype
ERROR_TYPE	header.h	/^    ERROR_TYPE$/;"	e	enum:DATA_TYPE
EXCESSIVE_ARRAY_DIM_DECLARATION	semanticAnalysis.c	/^    EXCESSIVE_ARRAY_DIM_DECLARATION,$/;"	e	enum:ErrorMsgKind	file:
EXIT_SUCCESS	parser.tab.c	408;"	d	file:
EXIT_SUCCESS	parser.tab.c	436;"	d	file:
EXPRSemanticValue	header.h	/^typedef struct EXPRSemanticValue$/;"	s
EXPRSemanticValue	header.h	/^} EXPRSemanticValue;$/;"	t	typeref:struct:EXPRSemanticValue
EXPR_KIND	header.h	/^typedef enum EXPR_KIND$/;"	g
EXPR_KIND	header.h	/^} EXPR_KIND;$/;"	t	typeref:enum:EXPR_KIND
EXPR_NODE	header.h	/^    EXPR_NODE,$/;"	e	enum:AST_TYPE
ElementTypeDescriptor	nodeAttribute.h	/^typedef struct DataTypeDescriptor ElementTypeDescriptor;$/;"	t	typeref:struct:DataTypeDescriptor
ErrorMsgKind	semanticAnalysis.c	/^typedef enum ErrorMsgKind$/;"	g	file:
ErrorMsgKind	semanticAnalysis.c	/^} ErrorMsgKind;$/;"	t	typeref:enum:ErrorMsgKind	file:
FLEXINT_H	lex.yy.c	29;"	d	file:
FLEX_BETA	lex.yy.c	13;"	d	file:
FLEX_SCANNER	lex.yy.c	8;"	d	file:
FLOAT	Test/pattern/assign.c	/^typedef float FLOAT;$/;"	t	file:
FLOAT	nodeAttribute.h	/^    FLOAT,$/;"	e	enum:__anon1
FLOAT	parser.tab.c	/^     FLOAT = 262,$/;"	e	enum:yytokentype	file:
FLOAT	parser.tab.h	/^     FLOAT = 262,$/;"	e	enum:yytokentype
FLOATA	Test/pattern/assign.c	/^typedef float FLOATA[2];$/;"	t	file:
FLOATC	header.h	/^typedef enum C_type {INTEGERC,FLOATC,STRINGC} C_type;$/;"	e	enum:C_type
FLOAT_PTR_TYPE	header.h	/^    FLOAT_PTR_TYPE,\/\/for parameter passing$/;"	e	enum:DATA_TYPE
FLOAT_REG	myRegister.h	/^    FLOAT_REG$/;"	e	enum:ProcessorType
FLOAT_REGISTER_COUNT	myRegister.h	8;"	d
FLOAT_TYPE	header.h	/^    FLOAT_TYPE,$/;"	e	enum:DATA_TYPE
FLOAT_WORK_REGISTER_COUNT	myRegister.h	9;"	d
FOR	parser.tab.c	/^     FOR = 266,$/;"	e	enum:yytokentype	file:
FOR	parser.tab.h	/^     FOR = 266,$/;"	e	enum:yytokentype
FOR_STMT	header.h	/^    FOR_STMT,$/;"	e	enum:STMT_KIND
FUNCTION_CALL_STMT	header.h	/^    FUNCTION_CALL_STMT,$/;"	e	enum:STMT_KIND
FUNCTION_DECL	header.h	/^    FUNCTION_DECL,$/;"	e	enum:DECL_KIND
FUNCTION_PARAMETER_DECL	header.h	/^    FUNCTION_PARAMETER_DECL$/;"	e	enum:DECL_KIND
FUNCTION_SIGNATURE	symbolTable.h	/^    FUNCTION_SIGNATURE$/;"	e	enum:SymbolAttributeKind
FloatRegisterTable	myRegister.h	/^typedef struct FloatRegisterTable$/;"	s
FloatRegisterTable	myRegister.h	/^} FloatRegisterTable;$/;"	t	typeref:struct:FloatRegisterTable
FunctionSignature	nodeAttribute.h	/^typedef struct FunctionSignature$/;"	s
FunctionSignature	nodeAttribute.h	/^} FunctionSignature;$/;"	t	typeref:struct:FunctionSignature
FunctionSignature	symbolTable.h	/^typedef struct FunctionSignature$/;"	s
FunctionSignature	symbolTable.h	/^} FunctionSignature;$/;"	t	typeref:struct:FunctionSignature
HASH	symbolTable.c	/^int HASH(char * str) {$/;"	f
HASH_TABLE_SIZE	symbolTable.h	12;"	d
ID	parser.tab.c	/^     ID = 258,$/;"	e	enum:yytokentype	file:
ID	parser.tab.h	/^     ID = 258,$/;"	e	enum:yytokentype
IDENTIFIER_KIND	header.h	/^typedef enum IDENTIFIER_KIND$/;"	g
IDENTIFIER_KIND	header.h	/^} IDENTIFIER_KIND;$/;"	t	typeref:enum:IDENTIFIER_KIND
IDENTIFIER_NODE	header.h	/^    IDENTIFIER_NODE,$/;"	e	enum:AST_TYPE
IF	parser.tab.c	/^     IF = 263,$/;"	e	enum:yytokentype	file:
IF	parser.tab.h	/^     IF = 263,$/;"	e	enum:yytokentype
IF_STMT	header.h	/^    IF_STMT,$/;"	e	enum:STMT_KIND
INCOMPATIBLE_ARRAY_DIMENSION	semanticAnalysis.c	/^    INCOMPATIBLE_ARRAY_DIMENSION,$/;"	e	enum:ErrorMsgKind	file:
INITIAL	lex.yy.c	527;"	d	file:
INT	Test/pattern/assign.c	/^typedef int INT;$/;"	t	file:
INT	nodeAttribute.h	/^    INT,$/;"	e	enum:__anon1
INT	parser.tab.c	/^     INT = 261,$/;"	e	enum:yytokentype	file:
INT	parser.tab.h	/^     INT = 261,$/;"	e	enum:yytokentype
INT16_MAX	lex.yy.c	71;"	d	file:
INT16_MIN	lex.yy.c	62;"	d	file:
INT32_MAX	lex.yy.c	74;"	d	file:
INT32_MIN	lex.yy.c	65;"	d	file:
INT8_MAX	lex.yy.c	68;"	d	file:
INT8_MIN	lex.yy.c	59;"	d	file:
INTA	Test/pattern/assign.c	/^typedef int INTA[2];$/;"	t	file:
INTEGERC	header.h	/^typedef enum C_type {INTEGERC,FLOATC,STRINGC} C_type;$/;"	e	enum:C_type
INT_PTR_TYPE	header.h	/^    INT_PTR_TYPE,\/\/for parameter passing$/;"	e	enum:DATA_TYPE
INT_REG	myRegister.h	/^    INT_REG,$/;"	e	enum:ProcessorType
INT_REGISTER_COUNT	myRegister.h	6;"	d
INT_TYPE	header.h	/^    INT_TYPE,$/;"	e	enum:DATA_TYPE
INT_WORK_REGISTER_COUNT	myRegister.h	7;"	d
IS_FUNCTION_NOT_VARIABLE	semanticAnalysis.c	/^    IS_FUNCTION_NOT_VARIABLE,$/;"	e	enum:ErrorMsgKind	file:
IS_TYPE_NOT_VARIABLE	semanticAnalysis.c	/^    IS_TYPE_NOT_VARIABLE,$/;"	e	enum:ErrorMsgKind	file:
IdentifierSemanticValue	header.h	/^typedef struct IdentifierSemanticValue$/;"	s
IdentifierSemanticValue	header.h	/^} IdentifierSemanticValue;$/;"	t	typeref:struct:IdentifierSemanticValue
IntRegisterTable	myRegister.h	/^typedef struct IntRegisterTable$/;"	s
IntRegisterTable	myRegister.h	/^} IntRegisterTable;$/;"	t	typeref:struct:IntRegisterTable
LEX	Makefile	/^LEX = flex$/;"	m
LIBS	Makefile	/^LIBS = -lfl $/;"	m
MAIN	Test/float.c	/^int MAIN(){$/;"	f
MAIN	Test/logic.c	/^int MAIN(){$/;"	f
MAIN	Test/pattern/control.c	/^int MAIN() {$/;"	f
MAIN	Test/pattern/expr.c	/^int MAIN() {$/;"	f
MAIN	Test/pattern/func.c	/^int MAIN() {$/;"	f
MAIN	Test/pattern/io.c	/^int MAIN() {$/;"	f
MAIN	Test/recursive.c	/^int MAIN()$/;"	f
MAIN	Test/s.S	/^MAIN:$/;"	l
MAIN	Test/simple.c	/^int MAIN(){$/;"	f
MAIN	Test/while.c	/^int MAIN(){$/;"	f
MAX_ARRAY_DIMENSION	header.h	4;"	d
MAX_ARRAY_DIMENSION	nodeAttribute.h	4;"	d
MAX_CODE_LINE_COUNT	printSourceFile.h	7;"	d
MAX_LINE_LENGTH	printSourceFile.h	6;"	d
MK_COMMA	parser.tab.c	/^     MK_COMMA = 288,$/;"	e	enum:yytokentype	file:
MK_COMMA	parser.tab.h	/^     MK_COMMA = 288,$/;"	e	enum:yytokentype
MK_DOT	parser.tab.c	/^     MK_DOT = 290,$/;"	e	enum:yytokentype	file:
MK_DOT	parser.tab.h	/^     MK_DOT = 290,$/;"	e	enum:yytokentype
MK_LB	parser.tab.c	/^     MK_LB = 282,$/;"	e	enum:yytokentype	file:
MK_LB	parser.tab.h	/^     MK_LB = 282,$/;"	e	enum:yytokentype
MK_LBRACE	parser.tab.c	/^     MK_LBRACE = 286,$/;"	e	enum:yytokentype	file:
MK_LBRACE	parser.tab.h	/^     MK_LBRACE = 286,$/;"	e	enum:yytokentype
MK_LPAREN	parser.tab.c	/^     MK_LPAREN = 284,$/;"	e	enum:yytokentype	file:
MK_LPAREN	parser.tab.h	/^     MK_LPAREN = 284,$/;"	e	enum:yytokentype
MK_RB	parser.tab.c	/^     MK_RB = 283,$/;"	e	enum:yytokentype	file:
MK_RB	parser.tab.h	/^     MK_RB = 283,$/;"	e	enum:yytokentype
MK_RBRACE	parser.tab.c	/^     MK_RBRACE = 287,$/;"	e	enum:yytokentype	file:
MK_RBRACE	parser.tab.h	/^     MK_RBRACE = 287,$/;"	e	enum:yytokentype
MK_RPAREN	parser.tab.c	/^     MK_RPAREN = 285,$/;"	e	enum:yytokentype	file:
MK_RPAREN	parser.tab.h	/^     MK_RPAREN = 285,$/;"	e	enum:yytokentype
MK_SEMICOLON	parser.tab.c	/^     MK_SEMICOLON = 289,$/;"	e	enum:yytokentype	file:
MK_SEMICOLON	parser.tab.h	/^     MK_SEMICOLON = 289,$/;"	e	enum:yytokentype
MyIntVector	myIntVector.h	/^typedef struct MyIntVector$/;"	s
MyIntVector	myIntVector.h	/^} MyIntVector;$/;"	t	typeref:struct:MyIntVector
NONEMPTY_ASSIGN_EXPR_LIST_NODE	header.h	/^    NONEMPTY_ASSIGN_EXPR_LIST_NODE,$/;"	e	enum:AST_TYPE
NONEMPTY_RELOP_EXPR_LIST_NODE	header.h	/^    NONEMPTY_RELOP_EXPR_LIST_NODE$/;"	e	enum:AST_TYPE
NONE_TYPE	header.h	/^    NONE_TYPE,\/\/for nodes like PROGRAM_NODE which has no type$/;"	e	enum:DATA_TYPE
NORMAL_ID	header.h	/^    NORMAL_ID, \/\/function Name, uninitialized scalar variable$/;"	e	enum:IDENTIFIER_KIND
NOT_ARRAY	semanticAnalysis.c	/^    NOT_ARRAY,$/;"	e	enum:ErrorMsgKind	file:
NOT_ASSIGNABLE	semanticAnalysis.c	/^    NOT_ASSIGNABLE,$/;"	e	enum:ErrorMsgKind	file:
NOT_FUNCTION_NAME	semanticAnalysis.c	/^    NOT_FUNCTION_NAME,$/;"	e	enum:ErrorMsgKind	file:
NUL_NODE	header.h	/^    NUL_NODE,$/;"	e	enum:AST_TYPE
OBJECT	Makefile	/^OBJECT = parser.tab.h parser.tab.c parser.tab.o lex.yy.c alloc.o functions.o codeGeneration.o semanticAnalysis.o printSourceFile.o myRegister.o offsetInAR.o symbolTable.o myIntVector.o$/;"	m
OP_AND	parser.tab.c	/^     OP_AND = 270,$/;"	e	enum:yytokentype	file:
OP_AND	parser.tab.h	/^     OP_AND = 270,$/;"	e	enum:yytokentype
OP_ASSIGN	parser.tab.c	/^     OP_ASSIGN = 268,$/;"	e	enum:yytokentype	file:
OP_ASSIGN	parser.tab.h	/^     OP_ASSIGN = 268,$/;"	e	enum:yytokentype
OP_DIVIDE	parser.tab.c	/^     OP_DIVIDE = 281,$/;"	e	enum:yytokentype	file:
OP_DIVIDE	parser.tab.h	/^     OP_DIVIDE = 281,$/;"	e	enum:yytokentype
OP_EQ	parser.tab.c	/^     OP_EQ = 272,$/;"	e	enum:yytokentype	file:
OP_EQ	parser.tab.h	/^     OP_EQ = 272,$/;"	e	enum:yytokentype
OP_GE	parser.tab.c	/^     OP_GE = 276,$/;"	e	enum:yytokentype	file:
OP_GE	parser.tab.h	/^     OP_GE = 276,$/;"	e	enum:yytokentype
OP_GT	parser.tab.c	/^     OP_GT = 274,$/;"	e	enum:yytokentype	file:
OP_GT	parser.tab.h	/^     OP_GT = 274,$/;"	e	enum:yytokentype
OP_LE	parser.tab.c	/^     OP_LE = 277,$/;"	e	enum:yytokentype	file:
OP_LE	parser.tab.h	/^     OP_LE = 277,$/;"	e	enum:yytokentype
OP_LT	parser.tab.c	/^     OP_LT = 275,$/;"	e	enum:yytokentype	file:
OP_LT	parser.tab.h	/^     OP_LT = 275,$/;"	e	enum:yytokentype
OP_MINUS	parser.tab.c	/^     OP_MINUS = 279,$/;"	e	enum:yytokentype	file:
OP_MINUS	parser.tab.h	/^     OP_MINUS = 279,$/;"	e	enum:yytokentype
OP_NE	parser.tab.c	/^     OP_NE = 273,$/;"	e	enum:yytokentype	file:
OP_NE	parser.tab.h	/^     OP_NE = 273,$/;"	e	enum:yytokentype
OP_NOT	parser.tab.c	/^     OP_NOT = 271,$/;"	e	enum:yytokentype	file:
OP_NOT	parser.tab.h	/^     OP_NOT = 271,$/;"	e	enum:yytokentype
OP_OR	parser.tab.c	/^     OP_OR = 269,$/;"	e	enum:yytokentype	file:
OP_OR	parser.tab.h	/^     OP_OR = 269,$/;"	e	enum:yytokentype
OP_PLUS	parser.tab.c	/^     OP_PLUS = 278,$/;"	e	enum:yytokentype	file:
OP_PLUS	parser.tab.h	/^     OP_PLUS = 278,$/;"	e	enum:yytokentype
OP_TIMES	parser.tab.c	/^     OP_TIMES = 280,$/;"	e	enum:yytokentype	file:
OP_TIMES	parser.tab.h	/^     OP_TIMES = 280,$/;"	e	enum:yytokentype
PARAMETER_TYPE_UNMATCH	semanticAnalysis.c	/^    PARAMETER_TYPE_UNMATCH,$/;"	e	enum:ErrorMsgKind	file:
PARAM_LIST_NODE	header.h	/^    PARAM_LIST_NODE,$/;"	e	enum:AST_TYPE
PASS_ARRAY_TO_SCALAR	semanticAnalysis.c	/^    PASS_ARRAY_TO_SCALAR,$/;"	e	enum:ErrorMsgKind	file:
PASS_SCALAR_TO_ARRAY	semanticAnalysis.c	/^    PASS_SCALAR_TO_ARRAY$/;"	e	enum:ErrorMsgKind	file:
PROGRAM_NODE	header.h	/^    PROGRAM_NODE,$/;"	e	enum:AST_TYPE
Parameter	nodeAttribute.h	/^typedef struct Parameter$/;"	s
Parameter	nodeAttribute.h	/^} Parameter;$/;"	t	typeref:struct:Parameter
Parameter	symbolTable.h	/^typedef struct Parameter$/;"	s
Parameter	symbolTable.h	/^} Parameter;$/;"	t	typeref:struct:Parameter
ParameterList	nodeAttribute.h	/^typedef struct ParameterList ParameterList;$/;"	t	typeref:struct:ParameterList
ParameterList	nodeAttribute.h	/^typedef struct ParameterList$/;"	s
ParameterList	nodeAttribute.h	/^} ParameterList;$/;"	t	typeref:struct:ParameterList
ProcessorType	myRegister.h	/^typedef enum ProcessorType$/;"	g
ProcessorType	myRegister.h	/^} ProcessorType;$/;"	t	typeref:enum:ProcessorType
PseudoRegisterTable	myRegister.h	/^typedef struct PseudoRegisterTable$/;"	s
PseudoRegisterTable	myRegister.h	/^} PseudoRegisterTable;$/;"	t	typeref:struct:PseudoRegisterTable
REJECT	lex.yy.c	517;"	d	file:
RETURN	parser.tab.c	/^     RETURN = 292$/;"	e	enum:yytokentype	file:
RETURN	parser.tab.h	/^     RETURN = 292$/;"	e	enum:yytokentype
RETURN_ARRAY	semanticAnalysis.c	/^    RETURN_ARRAY,$/;"	e	enum:ErrorMsgKind	file:
RETURN_STMT	header.h	/^    RETURN_STMT,$/;"	e	enum:STMT_KIND
RETURN_TYPE_UNMATCH	semanticAnalysis.c	/^    RETURN_TYPE_UNMATCH,$/;"	e	enum:ErrorMsgKind	file:
ReturnTypeDescriptor	nodeAttribute.h	/^typedef struct TypeDescriptor ReturnTypeDescriptor;$/;"	t	typeref:struct:TypeDescriptor
SCALAR_TYPE_DESCRIPTOR	symbolTable.h	/^    SCALAR_TYPE_DESCRIPTOR,$/;"	e	enum:TypeDescriptorKind
STMTSemanticValue	header.h	/^typedef struct STMTSemanticValue$/;"	s
STMTSemanticValue	header.h	/^} STMTSemanticValue;$/;"	t	typeref:struct:STMTSemanticValue
STMT_KIND	header.h	/^typedef enum STMT_KIND$/;"	g
STMT_KIND	header.h	/^} STMT_KIND;$/;"	t	typeref:enum:STMT_KIND
STMT_LIST_NODE	header.h	/^    STMT_LIST_NODE,$/;"	e	enum:AST_TYPE
STMT_NODE	header.h	/^    STMT_NODE,$/;"	e	enum:AST_TYPE
STRINGC	header.h	/^typedef enum C_type {INTEGERC,FLOATC,STRINGC} C_type;$/;"	e	enum:C_type
STRING_OPERATION	semanticAnalysis.c	/^    STRING_OPERATION,$/;"	e	enum:ErrorMsgKind	file:
SYMBOL_IS_NOT_TYPE	semanticAnalysis.c	/^    SYMBOL_IS_NOT_TYPE,$/;"	e	enum:ErrorMsgKind	file:
SYMBOL_REDECLARE	semanticAnalysis.c	/^    SYMBOL_REDECLARE,$/;"	e	enum:ErrorMsgKind	file:
SYMBOL_TABLE_FLOAT_NAME	symbolTable.h	8;"	d
SYMBOL_TABLE_INT_NAME	symbolTable.h	7;"	d
SYMBOL_TABLE_SYS_LIB_FREAD	symbolTable.h	11;"	d
SYMBOL_TABLE_SYS_LIB_READ	symbolTable.h	10;"	d
SYMBOL_TABLE_VOID_NAME	symbolTable.h	9;"	d
SYMBOL_UNDECLARED	semanticAnalysis.c	/^    SYMBOL_UNDECLARED,$/;"	e	enum:ErrorMsgKind	file:
SymbolAttribute	symbolTable.h	/^typedef struct SymbolAttribute$/;"	s
SymbolAttribute	symbolTable.h	/^} SymbolAttribute;$/;"	t	typeref:struct:SymbolAttribute
SymbolAttributeKind	symbolTable.h	/^typedef enum SymbolAttributeKind$/;"	g
SymbolAttributeKind	symbolTable.h	/^} SymbolAttributeKind;$/;"	t	typeref:enum:SymbolAttributeKind
SymbolTable	symbolTable.h	/^typedef struct SymbolTable$/;"	s
SymbolTable	symbolTable.h	/^} SymbolTable;$/;"	t	typeref:struct:SymbolTable
SymbolTableEntry	symbolTable.h	/^typedef struct SymbolTableEntry$/;"	s
SymbolTableEntry	symbolTable.h	/^} SymbolTableEntry;$/;"	t	typeref:struct:SymbolTableEntry
TARGET	Makefile	/^TARGET = parser$/;"	m
TOO_FEW_ARGUMENTS	semanticAnalysis.c	/^    TOO_FEW_ARGUMENTS,$/;"	e	enum:ErrorMsgKind	file:
TOO_MANY_ARGUMENTS	semanticAnalysis.c	/^    TOO_MANY_ARGUMENTS,$/;"	e	enum:ErrorMsgKind	file:
TRY_TO_INIT_ARRAY	semanticAnalysis.c	/^    TRY_TO_INIT_ARRAY,$/;"	e	enum:ErrorMsgKind	file:
TYPEDEF	parser.tab.c	/^     TYPEDEF = 267,$/;"	e	enum:yytokentype	file:
TYPEDEF	parser.tab.h	/^     TYPEDEF = 267,$/;"	e	enum:yytokentype
TYPEDEF_VOID_ARRAY	semanticAnalysis.c	/^    TYPEDEF_VOID_ARRAY,$/;"	e	enum:ErrorMsgKind	file:
TYPE_ATTRIBUTE	symbolTable.h	/^    TYPE_ATTRIBUTE,$/;"	e	enum:SymbolAttributeKind
TYPE_DECL	header.h	/^    TYPE_DECL,$/;"	e	enum:DECL_KIND
TypeDescriptor	symbolTable.h	/^typedef struct TypeDescriptor$/;"	s
TypeDescriptor	symbolTable.h	/^} TypeDescriptor;$/;"	t	typeref:struct:TypeDescriptor
TypeDescriptorKind	symbolTable.h	/^typedef enum TypeDescriptorKind$/;"	g
TypeDescriptorKind	symbolTable.h	/^} TypeDescriptorKind;$/;"	t	typeref:enum:TypeDescriptorKind
TypeSpecSemanticValue	header.h	/^typedef struct TypeSpecSemanticValue$/;"	s
TypeSpecSemanticValue	header.h	/^} TypeSpecSemanticValue;$/;"	t	typeref:struct:TypeSpecSemanticValue
UINT16_MAX	lex.yy.c	80;"	d	file:
UINT32_MAX	lex.yy.c	83;"	d	file:
UINT8_MAX	lex.yy.c	77;"	d	file:
UNARY_OPERATION	header.h	/^    UNARY_OPERATION$/;"	e	enum:EXPR_KIND
UNARY_OPERATOR	header.h	/^typedef enum UNARY_OPERATOR$/;"	g
UNARY_OPERATOR	header.h	/^} UNARY_OPERATOR;$/;"	t	typeref:enum:UNARY_OPERATOR
UNARY_OP_LOGICAL_NEGATION	header.h	/^    UNARY_OP_LOGICAL_NEGATION$/;"	e	enum:UNARY_OPERATOR
UNARY_OP_NEGATIVE	header.h	/^    UNARY_OP_NEGATIVE,$/;"	e	enum:UNARY_OPERATOR
UNARY_OP_POSITIVE	header.h	/^    UNARY_OP_POSITIVE,$/;"	e	enum:UNARY_OPERATOR
VARIABLE_ATTRIBUTE	symbolTable.h	/^    VARIABLE_ATTRIBUTE,$/;"	e	enum:SymbolAttributeKind
VARIABLE_DECL	header.h	/^    VARIABLE_DECL,$/;"	e	enum:DECL_KIND
VARIABLE_DECL_LIST_NODE	header.h	/^    VARIABLE_DECL_LIST_NODE,$/;"	e	enum:AST_TYPE
VOID	parser.tab.c	/^     VOID = 260,$/;"	e	enum:yytokentype	file:
VOID	parser.tab.h	/^     VOID = 260,$/;"	e	enum:yytokentype
VOID_TYPE	header.h	/^    VOID_TYPE,$/;"	e	enum:DATA_TYPE
VOID_VARIABLE	semanticAnalysis.c	/^    VOID_VARIABLE,$/;"	e	enum:ErrorMsgKind	file:
WHILE	parser.tab.c	/^     WHILE = 265,$/;"	e	enum:yytokentype	file:
WHILE	parser.tab.h	/^     WHILE = 265,$/;"	e	enum:yytokentype
WHILE_STMT	header.h	/^    WHILE_STMT,$/;"	e	enum:STMT_KIND
WITH_INIT_ID	header.h	/^    WITH_INIT_ID, \/\/ID_NODE->child = initial value$/;"	e	enum:IDENTIFIER_KIND
YACC	Makefile	/^YACC = bison -v$/;"	m
YACCFLAG	Makefile	/^YACCFLAG = -d$/;"	m
YYABORT	parser.tab.c	897;"	d	file:
YYACCEPT	parser.tab.c	896;"	d	file:
YYBACKUP	parser.tab.c	918;"	d	file:
YYBISON	parser.tab.c	44;"	d	file:
YYBISON_VERSION	parser.tab.c	47;"	d	file:
YYCASE_	parser.tab.c	1322;"	d	file:
YYCASE_	parser.tab.c	1332;"	d	file:
YYCOPY	parser.tab.c	502;"	d	file:
YYCOPY	parser.tab.c	505;"	d	file:
YYCOPY_NEEDED	parser.tab.c	477;"	d	file:
YYDEBUG	parser.tab.c	200;"	d	file:
YYDEBUG	parser.tab.h	37;"	d
YYDPRINTF	parser.tab.c	1108;"	d	file:
YYDPRINTF	parser.tab.c	961;"	d	file:
YYEMPTY	parser.tab.c	893;"	d	file:
YYEOF	parser.tab.c	894;"	d	file:
YYERRCODE	parser.tab.c	937;"	d	file:
YYERROR	parser.tab.c	898;"	d	file:
YYERROR_VERBOSE	parser.tab.c	188;"	d	file:
YYERROR_VERBOSE	parser.tab.c	189;"	d	file:
YYERROR_VERBOSE	parser.tab.c	191;"	d	file:
YYFAIL	parser.tab.c	908;"	d	file:
YYFINAL	parser.tab.c	518;"	d	file:
YYFPRINTF	parser.tab.c	958;"	d	file:
YYFREE	parser.tab.c	447;"	d	file:
YYID	parser.tab.c	/^YYID (int yyi)$/;"	f	file:
YYID	parser.tab.c	370;"	d	file:
YYINITDEPTH	parser.tab.c	1117;"	d	file:
YYLAST	parser.tab.c	520;"	d	file:
YYLEX	parser.tab.c	948;"	d	file:
YYLEX	parser.tab.c	950;"	d	file:
YYMALLOC	parser.tab.c	440;"	d	file:
YYMAXDEPTH	parser.tab.c	1128;"	d	file:
YYMAXUTOK	parser.tab.c	533;"	d	file:
YYNNTS	parser.tab.c	525;"	d	file:
YYNRULES	parser.tab.c	527;"	d	file:
YYNSTATES	parser.tab.c	529;"	d	file:
YYNTOKENS	parser.tab.c	523;"	d	file:
YYPACT_NINF	parser.tab.c	760;"	d	file:
YYPOPSTACK	parser.tab.c	1485;"	d	file:
YYPULL	parser.tab.c	59;"	d	file:
YYPURE	parser.tab.c	53;"	d	file:
YYPUSH	parser.tab.c	56;"	d	file:
YYRECOVERING	parser.tab.c	916;"	d	file:
YYSIZE_MAXIMUM	parser.tab.c	338;"	d	file:
YYSIZE_T	parser.tab.c	326;"	d	file:
YYSIZE_T	parser.tab.c	328;"	d	file:
YYSIZE_T	parser.tab.c	332;"	d	file:
YYSIZE_T	parser.tab.c	334;"	d	file:
YYSKELETON_NAME	parser.tab.c	50;"	d	file:
YYSTACK_ALLOC	parser.tab.c	393;"	d	file:
YYSTACK_ALLOC	parser.tab.c	397;"	d	file:
YYSTACK_ALLOC	parser.tab.c	402;"	d	file:
YYSTACK_ALLOC	parser.tab.c	426;"	d	file:
YYSTACK_ALLOC_MAXIMUM	parser.tab.c	423;"	d	file:
YYSTACK_ALLOC_MAXIMUM	parser.tab.c	429;"	d	file:
YYSTACK_BYTES	parser.tab.c	473;"	d	file:
YYSTACK_FREE	parser.tab.c	417;"	d	file:
YYSTACK_FREE	parser.tab.c	427;"	d	file:
YYSTACK_GAP_MAXIMUM	parser.tab.c	469;"	d	file:
YYSTACK_RELOCATE	parser.tab.c	484;"	d	file:
YYSTATE	lex.yy.c	132;"	d	file:
YYSTYPE	parser.tab.c	/^typedef union YYSTYPE$/;"	u	file:
YYSTYPE	parser.tab.c	/^} YYSTYPE;$/;"	t	typeref:union:YYSTYPE	file:
YYSTYPE	parser.tab.h	/^typedef union YYSTYPE$/;"	u
YYSTYPE	parser.tab.h	/^} YYSTYPE;$/;"	t	typeref:union:YYSTYPE
YYSTYPE_IS_DECLARED	parser.tab.c	267;"	d	file:
YYSTYPE_IS_DECLARED	parser.tab.h	104;"	d
YYSTYPE_IS_TRIVIAL	parser.tab.c	265;"	d	file:
YYSTYPE_IS_TRIVIAL	parser.tab.h	102;"	d
YYTABLES_NAME	lex.yy.c	2036;"	d	file:
YYTABLE_NINF	parser.tab.c	799;"	d	file:
YYTERROR	parser.tab.c	936;"	d	file:
YYTOKENTYPE	parser.tab.c	208;"	d	file:
YYTOKENTYPE	parser.tab.h	45;"	d
YYTRANSLATE	parser.tab.c	535;"	d	file:
YYUNDEFTOK	parser.tab.c	532;"	d	file:
YYUSE	parser.tab.c	362;"	d	file:
YYUSE	parser.tab.c	364;"	d	file:
YY_	parser.tab.c	344;"	d	file:
YY_	parser.tab.c	348;"	d	file:
YY_AT_BOL	lex.yy.c	339;"	d	file:
YY_BREAK	lex.yy.c	698;"	d	file:
YY_BUFFER_EOF_PENDING	lex.yy.c	255;"	d	file:
YY_BUFFER_NEW	lex.yy.c	243;"	d	file:
YY_BUFFER_NORMAL	lex.yy.c	244;"	d	file:
YY_BUFFER_STATE	lex.yy.c	/^typedef struct yy_buffer_state *YY_BUFFER_STATE;$/;"	t	typeref:struct:yy_buffer_state	file:
YY_BUF_SIZE	lex.yy.c	149;"	d	file:
YY_BUF_SIZE	lex.yy.c	151;"	d	file:
YY_CHAR	lex.yy.c	/^typedef unsigned char YY_CHAR;$/;"	t	file:
YY_CURRENT_BUFFER	lex.yy.c	271;"	d	file:
YY_CURRENT_BUFFER_LVALUE	lex.yy.c	278;"	d	file:
YY_DECL	lex.yy.c	686;"	d	file:
YY_DECL_IS_OURS	lex.yy.c	682;"	d	file:
YY_DO_BEFORE_ACTION	lex.yy.c	364;"	d	file:
YY_END_OF_BUFFER	lex.yy.c	372;"	d	file:
YY_END_OF_BUFFER_CHAR	lex.yy.c	140;"	d	file:
YY_EXIT_FAILURE	lex.yy.c	1834;"	d	file:
YY_EXTRA_TYPE	lex.yy.c	538;"	d	file:
YY_FATAL_ERROR	lex.yy.c	673;"	d	file:
YY_FLEX_MAJOR_VERSION	lex.yy.c	9;"	d	file:
YY_FLEX_MINOR_VERSION	lex.yy.c	10;"	d	file:
YY_FLEX_SUBMINOR_VERSION	lex.yy.c	11;"	d	file:
YY_FLUSH_BUFFER	lex.yy.c	307;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	parser.tab.c	1407;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	parser.tab.c	1408;"	d	file:
YY_INITIAL_VALUE	parser.tab.c	1411;"	d	file:
YY_INPUT	lex.yy.c	626;"	d	file:
YY_INT_ALIGNED	lex.yy.c	4;"	d	file:
YY_LESS_LINENO	lex.yy.c	172;"	d	file:
YY_LOCATION_PRINT	parser.tab.c	942;"	d	file:
YY_MORE_ADJ	lex.yy.c	519;"	d	file:
YY_NEW_FILE	lex.yy.c	138;"	d	file:
YY_NULL	lex.yy.c	112;"	d	file:
YY_NULL	parser.tab.c	180;"	d	file:
YY_NULL	parser.tab.c	182;"	d	file:
YY_NUM_RULES	lex.yy.c	371;"	d	file:
YY_READ_BUF_SIZE	lex.yy.c	608;"	d	file:
YY_READ_BUF_SIZE	lex.yy.c	610;"	d	file:
YY_REDUCE_PRINT	parser.tab.c	1098;"	d	file:
YY_REDUCE_PRINT	parser.tab.c	1111;"	d	file:
YY_RESTORE_YY_MORE_OFFSET	lex.yy.c	520;"	d	file:
YY_RULE_SETUP	lex.yy.c	701;"	d	file:
YY_SC_TO_UI	lex.yy.c	119;"	d	file:
YY_STACK_PRINT	parser.tab.c	1060;"	d	file:
YY_STACK_PRINT	parser.tab.c	1110;"	d	file:
YY_START	lex.yy.c	131;"	d	file:
YY_START_STACK_INCR	lex.yy.c	668;"	d	file:
YY_STATE_BUF_SIZE	lex.yy.c	157;"	d	file:
YY_STATE_EOF	lex.yy.c	135;"	d	file:
YY_STRUCT_YY_BUFFER_STATE	lex.yy.c	196;"	d	file:
YY_SYMBOL_PRINT	parser.tab.c	1109;"	d	file:
YY_SYMBOL_PRINT	parser.tab.c	967;"	d	file:
YY_TYPEDEF_YY_BUFFER_STATE	lex.yy.c	160;"	d	file:
YY_TYPEDEF_YY_SIZE_T	lex.yy.c	191;"	d	file:
YY_USER_ACTION	lex.yy.c	693;"	d	file:
YY_USE_CONST	lex.yy.c	100;"	d	file:
YY_USE_CONST	lex.yy.c	93;"	d	file:
YY_YY_PARSER_TAB_H_INCLUDED	parser.tab.c	197;"	d	file:
YY_YY_PARSER_TAB_H_INCLUDED	parser.tab.h	34;"	d
_CONSTANT_0	Test/Susceed/s1.s	/^_CONSTANT_0: .word 10000$/;"	l
_CONSTANT_0	Test/can_linking_can_work/output.s	/^_CONSTANT_0: .word 41$/;"	l
_CONSTANT_0	Test/factotio_mips.s	/^_CONSTANT_0: .word 1$/;"	l
_CONSTANT_0	Test/output.s	/^_CONSTANT_0: .word 1$/;"	l
_CONSTANT_1	Test/can_linking_can_work/output.s	/^_CONSTANT_1: .word 4$/;"	l
_CONSTANT_1	Test/output.s	/^_CONSTANT_1: .word 0$/;"	l
_CONSTANT_10	Test/output.s	/^_CONSTANT_10: .ascii "correct\\n"$/;"	l
_CONSTANT_12	Test/output.s	/^_CONSTANT_12: .ascii "correct\\n"$/;"	l
_CONSTANT_13	Test/output.s	/^_CONSTANT_13: .ascii "wrong\\n"$/;"	l
_CONSTANT_14	Test/output.s	/^_CONSTANT_14: .float 1.000000$/;"	l
_CONSTANT_15	Test/output.s	/^_CONSTANT_15: .float 0.000000$/;"	l
_CONSTANT_17	Test/output.s	/^_CONSTANT_17: .ascii "correct\\n"$/;"	l
_CONSTANT_18	Test/output.s	/^_CONSTANT_18: .ascii "wrong\\n"$/;"	l
_CONSTANT_2	Test/can_linking_can_work/output.s	/^_CONSTANT_2: .word 3$/;"	l
_CONSTANT_2	Test/factotio_mips.s	/^_CONSTANT_2: .word 1$/;"	l
_CONSTANT_20	Test/output.s	/^_CONSTANT_20: .ascii "wrong\\n"$/;"	l
_CONSTANT_21	Test/output.s	/^_CONSTANT_21: .ascii "correct\\n"$/;"	l
_CONSTANT_23	Test/output.s	/^_CONSTANT_23: .ascii "correct\\n"$/;"	l
_CONSTANT_24	Test/output.s	/^_CONSTANT_24: .ascii "wrong\\n"$/;"	l
_CONSTANT_26	Test/output.s	/^_CONSTANT_26: .ascii "wrong\\n"$/;"	l
_CONSTANT_28	Test/output.s	/^_CONSTANT_28: .ascii "correct\\n"$/;"	l
_CONSTANT_29	Test/output.s	/^_CONSTANT_29: .word 0$/;"	l
_CONSTANT_3	Test/can_linking_can_work/output.s	/^_CONSTANT_3: .word 2$/;"	l
_CONSTANT_3	Test/factotio_mips.s	/^_CONSTANT_3: .asciiz "Enter a number:"$/;"	l
_CONSTANT_3	Test/output.s	/^_CONSTANT_3: .ascii "correct\\n"$/;"	l
_CONSTANT_31	Test/output.s	/^_CONSTANT_31: .word 10$/;"	l
_CONSTANT_32	Test/output.s	/^_CONSTANT_32: .ascii "correct: "$/;"	l
_CONSTANT_33	Test/output.s	/^_CONSTANT_33: .ascii "\\n"$/;"	l
_CONSTANT_34	Test/output.s	/^_CONSTANT_34: .word 1$/;"	l
_CONSTANT_36	Test/output.s	/^_CONSTANT_36: .word 10$/;"	l
_CONSTANT_37	Test/output.s	/^_CONSTANT_37: .ascii "correct\\n"$/;"	l
_CONSTANT_38	Test/output.s	/^_CONSTANT_38: .word 0$/;"	l
_CONSTANT_4	Test/output.s	/^_CONSTANT_4: .ascii "wrong\\n"$/;"	l
_CONSTANT_5	Test/factotio_mips.s	/^_CONSTANT_5: .word 1$/;"	l
_CONSTANT_6	Test/factotio_mips.s	/^_CONSTANT_6: .word 1$/;"	l
_CONSTANT_6	Test/output.s	/^_CONSTANT_6: .ascii "wrong\\n"$/;"	l
_CONSTANT_7	Test/factotio_mips.s	/^_CONSTANT_7: .asciiz "The factorial is "$/;"	l
_CONSTANT_7	Test/output.s	/^_CONSTANT_7: .ascii "correct\\n"$/;"	l
_CONSTANT_8	Test/factotio_mips.s	/^_CONSTANT_8: .asciiz "\\n"$/;"	l
_CONSTANT_9	Test/factotio_mips.s	/^_CONSTANT_9: .word 0$/;"	l
_CONSTANT_9	Test/output.s	/^_CONSTANT_9: .ascii "wrong\\n"$/;"	l
__HEADER_H__	header.h	2;"	d
__MY_INT_VECTOR_H__	myIntVector.h	2;"	d
__MY_REGISTER_H__	myRegister.h	2;"	d
__NODE_ARRTIBUTE_H__	nodeAttribute.h	2;"	d
__OFFSET_IN_AR_H___	offsetInAR.h	2;"	d
__PRINT_SOURCE_FILE_H__	printSourceFile.h	2;"	d
__STDC_LIMIT_MACROS	lex.yy.c	39;"	d	file:
__SYMBOL_TABLE_H__	symbolTable.h	2;"	d
__attribute__	parser.tab.c	356;"	d	file:
_elseLabel_1	Test/factotio_mips.s	/^_elseLabel_1:$/;"	l
_elseLabel_11	Test/output.s	/^_elseLabel_11:$/;"	l
_elseLabel_16	Test/output.s	/^_elseLabel_16:$/;"	l
_elseLabel_19	Test/output.s	/^_elseLabel_19:$/;"	l
_elseLabel_2	Test/output.s	/^_elseLabel_2:$/;"	l
_elseLabel_22	Test/output.s	/^_elseLabel_22:$/;"	l
_elseLabel_25	Test/output.s	/^_elseLabel_25:$/;"	l
_elseLabel_27	Test/output.s	/^_elseLabel_27:$/;"	l
_elseLabel_35	Test/output.s	/^_elseLabel_35:$/;"	l
_elseLabel_4	Test/factotio_mips.s	/^_elseLabel_4:$/;"	l
_elseLabel_5	Test/output.s	/^_elseLabel_5:$/;"	l
_elseLabel_8	Test/output.s	/^_elseLabel_8:$/;"	l
_end_MAIN	Test/can_linking_can_work/output.s	/^_end_MAIN:$/;"	l
_end_MAIN	Test/output.s	/^_end_MAIN:$/;"	l
_end_f	Test/can_linking_can_work/output.s	/^_end_f:$/;"	l
_end_fact	Test/factotio_mips.s	/^_end_fact:$/;"	l
_end_main	Test/factotio_mips.s	/^_end_main:$/;"	l
_frameSize_MAIN	Test/can_linking_can_work/output.s	/^_frameSize_MAIN: .word 72$/;"	l
_frameSize_MAIN	Test/output.s	/^_frameSize_MAIN: .word 80$/;"	l
_frameSize_f	Test/can_linking_can_work/output.s	/^_frameSize_f: .word 64$/;"	l
_frameSize_fact	Test/factotio_mips.s	/^_frameSize_fact: .word 64$/;"	l
_frameSize_main	Test/factotio_mips.s	/^_frameSize_main: .word 64$/;"	l
_g_c	Test/can_linking_can_work/output.s	/^_g_c: .word 0$/;"	l
_g_n	Test/factotio_mips.s	/^_g_n: .word 0$/;"	l
_g_result	Test/factotio_mips.s	/^_g_result: .word 0$/;"	l
_ifExitLabel_1	Test/factotio_mips.s	/^_ifExitLabel_1:$/;"	l
_ifExitLabel_11	Test/output.s	/^_ifExitLabel_11:$/;"	l
_ifExitLabel_16	Test/output.s	/^_ifExitLabel_16:$/;"	l
_ifExitLabel_19	Test/output.s	/^_ifExitLabel_19:$/;"	l
_ifExitLabel_2	Test/output.s	/^_ifExitLabel_2:$/;"	l
_ifExitLabel_22	Test/output.s	/^_ifExitLabel_22:$/;"	l
_ifExitLabel_25	Test/output.s	/^_ifExitLabel_25:$/;"	l
_ifExitLabel_27	Test/output.s	/^_ifExitLabel_27:$/;"	l
_ifExitLabel_35	Test/output.s	/^_ifExitLabel_35:$/;"	l
_ifExitLabel_4	Test/factotio_mips.s	/^_ifExitLabel_4:$/;"	l
_ifExitLabel_5	Test/output.s	/^_ifExitLabel_5:$/;"	l
_ifExitLabel_8	Test/output.s	/^_ifExitLabel_8:$/;"	l
_start_MAIN	Test/Susceed/s1.s	/^_start_MAIN:$/;"	l
_start_MAIN	Test/can_linking_can_work/output.s	/^_start_MAIN:$/;"	l
_start_MAIN	Test/output.s	/^_start_MAIN:$/;"	l
_start_f	Test/can_linking_can_work/output.s	/^_start_f:$/;"	l
_start_fact	Test/factotio_mips.s	/^_start_fact:$/;"	l
_whileExitLabel_30	Test/output.s	/^_whileExitLabel_30:$/;"	l
_whileTestLabel_30	Test/output.s	/^_whileTestLabel_30:$/;"	l
a	Test/global_init.S	/^a:$/;"	l
a	Test/global_init.c	/^int a=3;$/;"	v
a	Test/s.s	/^   a:	bf00      	nop$/;"	l
a000	Test/a.s	/^    a000:	e1a00006 	mov	r0, r6$/;"	l
a004	Test/a.s	/^    a004:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
a008	Test/a.s	/^    a008:	e3a02001 	mov	r2, #1$/;"	l
a00c	Test/a.s	/^    a00c:	e3a03000 	mov	r3, #0$/;"	l
a010	Test/a.s	/^    a010:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
a014	Test/a.s	/^    a014:	ef000000 	svc	0x00000000$/;"	l
a018	Test/a.s	/^    a018:	eaffffd9 	b	9f84 <flush_cleanup+0x80>$/;"	l
a01c	Test/a.s	/^    a01c:	0008d2b8 	.word	0x0008d2b8$/;"	l
a020	Test/a.s	/^    a020:	0008d2c4 	.word	0x0008d2c4$/;"	l
a024	Test/a.s	/^    a024:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
a028	Test/a.s	/^    a028:	e5903030 	ldr	r3, [r0, #48]	; 0x30$/;"	l
a02c	Test/a.s	/^    a02c:	e590a00c 	ldr	sl, [r0, #12]$/;"	l
a030	Test/a.s	/^    a030:	e3530000 	cmp	r3, #0$/;"	l
a034	Test/a.s	/^    a034:	e24dd00c 	sub	sp, sp, #12$/;"	l
a038	Test/a.s	/^    a038:	e1a06000 	mov	r6, r0$/;"	l
a03c	Test/a.s	/^    a03c:	e1a08001 	mov	r8, r1$/;"	l
a040	Test/a.s	/^    a040:	e06a5001 	rsb	r5, sl, r1$/;"	l
a044	Test/a.s	/^    a044:	0a000041 	beq	a150 <save_for_backup+0x12c>$/;"	l
a048	Test/a.s	/^    a048:	e1a04005 	mov	r4, r5$/;"	l
a04c	Test/a.s	/^    a04c:	e1a0c003 	mov	ip, r3$/;"	l
a050	Test/a.s	/^    a050:	e59c2008 	ldr	r2, [ip, #8]$/;"	l
a054	Test/a.s	/^    a054:	e59cc000 	ldr	ip, [ip]$/;"	l
a058	Test/a.s	/^    a058:	e1540002 	cmp	r4, r2$/;"	l
a05c	Test/a.s	/^    a05c:	a1a04002 	movge	r4, r2$/;"	l
a060	Test/a.s	/^    a060:	e35c0000 	cmp	ip, #0$/;"	l
a064	Test/a.s	/^    a064:	1afffff9 	bne	a050 <save_for_backup+0x2c>$/;"	l
a068	Test/a.s	/^    a068:	e596b02c 	ldr	fp, [r6, #44]	; 0x2c$/;"	l
a06c	Test/a.s	/^    a06c:	e5960024 	ldr	r0, [r6, #36]	; 0x24$/;"	l
a070	Test/a.s	/^    a070:	e0647005 	rsb	r7, r4, r5$/;"	l
a074	Test/a.s	/^    a074:	e060200b 	rsb	r2, r0, fp$/;"	l
a078	Test/a.s	/^    a078:	e1570002 	cmp	r7, r2$/;"	l
a07c	Test/a.s	/^    a07c:	8a000011 	bhi	a0c8 <save_for_backup+0xa4>$/;"	l
a080	Test/a.s	/^    a080:	e3540000 	cmp	r4, #0$/;"	l
a084	Test/a.s	/^    a084:	e0679002 	rsb	r9, r7, r2$/;"	l
a088	Test/a.s	/^    a088:	ba000036 	blt	a168 <save_for_backup+0x144>$/;"	l
a08c	Test/a.s	/^    a08c:	e3570000 	cmp	r7, #0$/;"	l
a090	Test/a.s	/^    a090:	1a000025 	bne	a12c <save_for_backup+0x108>$/;"	l
a094	Test/a.s	/^    a094:	e0809009 	add	r9, r0, r9$/;"	l
a098	Test/a.s	/^    a098:	e3530000 	cmp	r3, #0$/;"	l
a09c	Test/a.s	/^    a09c:	e5869028 	str	r9, [r6, #40]	; 0x28$/;"	l
a0a0	Test/a.s	/^    a0a0:	0a000005 	beq	a0bc <save_for_backup+0x98>$/;"	l
a0a4	Test/a.s	/^    a0a4:	e5932008 	ldr	r2, [r3, #8]$/;"	l
a0a8	Test/a.s	/^    a0a8:	e0652002 	rsb	r2, r5, r2$/;"	l
a0ac	Test/a.s	/^    a0ac:	e5832008 	str	r2, [r3, #8]$/;"	l
a0b0	Test/a.s	/^    a0b0:	e5933000 	ldr	r3, [r3]$/;"	l
a0b4	Test/a.s	/^    a0b4:	e3530000 	cmp	r3, #0$/;"	l
a0b8	Test/a.s	/^    a0b8:	1afffff9 	bne	a0a4 <save_for_backup+0x80>$/;"	l
a0bc	Test/a.s	/^    a0bc:	e3a00000 	mov	r0, #0$/;"	l
a0c0	Test/a.s	/^    a0c0:	e28dd00c 	add	sp, sp, #12$/;"	l
a0c4	Test/a.s	/^    a0c4:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}$/;"	l
a0c8	Test/a.s	/^    a0c8:	e2875064 	add	r5, r7, #100	; 0x64$/;"	l
a0cc	Test/a.s	/^    a0cc:	e1a00005 	mov	r0, r5$/;"	l
a0d0	Test/a.s	/^    a0d0:	eb001972 	bl	106a0 <__libc_malloc>$/;"	l
a0d4	Test/a.s	/^    a0d4:	e2503000 	subs	r3, r0, #0$/;"	l
a0d8	Test/a.s	/^    a0d8:	0a00003c 	beq	a1d0 <save_for_backup+0x1ac>$/;"	l
a0dc	Test/a.s	/^    a0dc:	e3540000 	cmp	r4, #0$/;"	l
a0e0	Test/a.s	/^    a0e0:	e2839064 	add	r9, r3, #100	; 0x64$/;"	l
a0e4	Test/a.s	/^    a0e4:	ba00002f 	blt	a1a8 <save_for_backup+0x184>$/;"	l
a0e8	Test/a.s	/^    a0e8:	e08a1004 	add	r1, sl, r4$/;"	l
a0ec	Test/a.s	/^    a0ec:	e1a02007 	mov	r2, r7$/;"	l
a0f0	Test/a.s	/^    a0f0:	e1a00009 	mov	r0, r9$/;"	l
a0f4	Test/a.s	/^    a0f4:	e58d3004 	str	r3, [sp, #4]$/;"	l
a0f8	Test/a.s	/^    a0f8:	eb002500 	bl	13500 <memcpy>$/;"	l
a0fc	Test/a.s	/^    a0fc:	e59d3004 	ldr	r3, [sp, #4]$/;"	l
a100	Test/a.s	/^    a100:	e5960024 	ldr	r0, [r6, #36]	; 0x24$/;"	l
a104	Test/a.s	/^    a104:	e58d3004 	str	r3, [sp, #4]$/;"	l
a108	Test/a.s	/^    a108:	eb001aac 	bl	10bc0 <__cfree>$/;"	l
a10c	Test/a.s	/^    a10c:	e59d3004 	ldr	r3, [sp, #4]$/;"	l
a110	Test/a.s	/^    a110:	e596200c 	ldr	r2, [r6, #12]$/;"	l
a114	Test/a.s	/^    a114:	e0835005 	add	r5, r3, r5$/;"	l
a118	Test/a.s	/^    a118:	e586502c 	str	r5, [r6, #44]	; 0x2c$/;"	l
a11c	Test/a.s	/^    a11c:	e5863024 	str	r3, [r6, #36]	; 0x24$/;"	l
a120	Test/a.s	/^    a120:	e0625008 	rsb	r5, r2, r8$/;"	l
a124	Test/a.s	/^    a124:	e5963030 	ldr	r3, [r6, #48]	; 0x30$/;"	l
a128	Test/a.s	/^    a128:	eaffffda 	b	a098 <save_for_backup+0x74>$/;"	l
a12c	Test/a.s	/^    a12c:	e0800009 	add	r0, r0, r9$/;"	l
a130	Test/a.s	/^    a130:	e08a1004 	add	r1, sl, r4$/;"	l
a134	Test/a.s	/^    a134:	e1a02007 	mov	r2, r7$/;"	l
a138	Test/a.s	/^    a138:	eb0024f0 	bl	13500 <memcpy>$/;"	l
a13c	Test/a.s	/^    a13c:	e596500c 	ldr	r5, [r6, #12]$/;"	l
a140	Test/a.s	/^    a140:	e5960024 	ldr	r0, [r6, #36]	; 0x24$/;"	l
a144	Test/a.s	/^    a144:	e5963030 	ldr	r3, [r6, #48]	; 0x30$/;"	l
a148	Test/a.s	/^    a148:	e0655008 	rsb	r5, r5, r8$/;"	l
a14c	Test/a.s	/^    a14c:	eaffffd0 	b	a094 <save_for_backup+0x70>$/;"	l
a150	Test/a.s	/^    a150:	e590b02c 	ldr	fp, [r0, #44]	; 0x2c$/;"	l
a154	Test/a.s	/^    a154:	e5900024 	ldr	r0, [r0, #36]	; 0x24$/;"	l
a158	Test/a.s	/^    a158:	e3550000 	cmp	r5, #0$/;"	l
a15c	Test/a.s	/^    a15c:	e060900b 	rsb	r9, r0, fp$/;"	l
a160	Test/a.s	/^    a160:	aaffffcb 	bge	a094 <save_for_backup+0x70>$/;"	l
a164	Test/a.s	/^    a164:	e1a04005 	mov	r4, r5$/;"	l
a168	Test/a.s	/^    a168:	e08b1004 	add	r1, fp, r4$/;"	l
a16c	Test/a.s	/^    a16c:	e2642000 	rsb	r2, r4, #0$/;"	l
a170	Test/a.s	/^    a170:	e0800009 	add	r0, r0, r9$/;"	l
a174	Test/a.s	/^    a174:	eb0023ed 	bl	13130 <memmove>$/;"	l
a178	Test/a.s	/^    a178:	e596100c 	ldr	r1, [r6, #12]$/;"	l
a17c	Test/a.s	/^    a17c:	e5960024 	ldr	r0, [r6, #36]	; 0x24$/;"	l
a180	Test/a.s	/^    a180:	e0644009 	rsb	r4, r4, r9$/;"	l
a184	Test/a.s	/^    a184:	e0800004 	add	r0, r0, r4$/;"	l
a188	Test/a.s	/^    a188:	e0612008 	rsb	r2, r1, r8$/;"	l
a18c	Test/a.s	/^    a18c:	eb0024db 	bl	13500 <memcpy>$/;"	l
a190	Test/a.s	/^    a190:	e5963024 	ldr	r3, [r6, #36]	; 0x24$/;"	l
a194	Test/a.s	/^    a194:	e596500c 	ldr	r5, [r6, #12]$/;"	l
a198	Test/a.s	/^    a198:	e0839009 	add	r9, r3, r9$/;"	l
a19c	Test/a.s	/^    a19c:	e0655008 	rsb	r5, r5, r8$/;"	l
a1a0	Test/a.s	/^    a1a0:	e5963030 	ldr	r3, [r6, #48]	; 0x30$/;"	l
a1a4	Test/a.s	/^    a1a4:	eaffffbb 	b	a098 <save_for_backup+0x74>$/;"	l
a1a8	Test/a.s	/^    a1a8:	e08b1004 	add	r1, fp, r4$/;"	l
a1ac	Test/a.s	/^    a1ac:	e2642000 	rsb	r2, r4, #0$/;"	l
a1b0	Test/a.s	/^    a1b0:	e1a00009 	mov	r0, r9$/;"	l
a1b4	Test/a.s	/^    a1b4:	e58d3004 	str	r3, [sp, #4]$/;"	l
a1b8	Test/a.s	/^    a1b8:	eb0024a8 	bl	13460 <__mempcpy>$/;"	l
a1bc	Test/a.s	/^    a1bc:	e596100c 	ldr	r1, [r6, #12]$/;"	l
a1c0	Test/a.s	/^    a1c0:	e0612008 	rsb	r2, r1, r8$/;"	l
a1c4	Test/a.s	/^    a1c4:	eb0024cd 	bl	13500 <memcpy>$/;"	l
a1c8	Test/a.s	/^    a1c8:	e59d3004 	ldr	r3, [sp, #4]$/;"	l
a1cc	Test/a.s	/^    a1cc:	eaffffcb 	b	a100 <save_for_backup+0xdc>$/;"	l
a1d0	Test/a.s	/^    a1d0:	e3e00000 	mvn	r0, #0$/;"	l
a1d4	Test/a.s	/^    a1d4:	eaffffb9 	b	a0c0 <save_for_backup+0x9c>$/;"	l
a1d8	Test/a.s	/^    a1d8:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}$/;"	l
a1dc	Test/a.s	/^    a1dc:	e5903000 	ldr	r3, [r0]$/;"	l
a1e0	Test/a.s	/^    a1e0:	e24dd014 	sub	sp, sp, #20$/;"	l
a1e4	Test/a.s	/^    a1e4:	e3130080 	tst	r3, #128	; 0x80$/;"	l
a1e8	Test/a.s	/^    a1e8:	e1a05000 	mov	r5, r0$/;"	l
a1ec	Test/a.s	/^    a1ec:	0a000089 	beq	a418 <_IO_un_link+0x240>$/;"	l
a1f0	Test/a.s	/^    a1f0:	e59f82b8 	ldr	r8, [pc, #696]	; a4b0 <_IO_un_link+0x2d8>$/;"	l
a1f4	Test/a.s	/^    a1f4:	e2988000 	adds	r8, r8, #0$/;"	l
a1f8	Test/a.s	/^    a1f8:	13a08001 	movne	r8, #1$/;"	l
a1fc	Test/a.s	/^    a1fc:	e3580000 	cmp	r8, #0$/;"	l
a200	Test/a.s	/^    a200:	0a0000a4 	beq	a498 <_IO_un_link+0x2c0>$/;"	l
a204	Test/a.s	/^    a204:	e1a0000d 	mov	r0, sp$/;"	l
a208	Test/a.s	/^    a208:	e59f12a4 	ldr	r1, [pc, #676]	; a4b4 <_IO_un_link+0x2dc>$/;"	l
a20c	Test/a.s	/^    a20c:	e3a02000 	mov	r2, #0$/;"	l
a210	Test/a.s	/^    a210:	e320f000 	nop	{0}$/;"	l
a214	Test/a.s	/^    a214:	e59f629c 	ldr	r6, [pc, #668]	; a4b8 <_IO_un_link+0x2e0>$/;"	l
a218	Test/a.s	/^    a218:	ebfffc90 	bl	9460 <__aeabi_read_tp>$/;"	l
a21c	Test/a.s	/^    a21c:	e5963014 	ldr	r3, [r6, #20]$/;"	l
a220	Test/a.s	/^    a220:	e2407d13 	sub	r7, r0, #1216	; 0x4c0$/;"	l
a224	Test/a.s	/^    a224:	e1530007 	cmp	r3, r7$/;"	l
a228	Test/a.s	/^    a228:	0a00000e 	beq	a268 <_IO_un_link+0x90>$/;"	l
a22c	Test/a.s	/^    a22c:	e3a01001 	mov	r1, #1$/;"	l
a230	Test/a.s	/^    a230:	e286200c 	add	r2, r6, #12$/;"	l
a234	Test/a.s	/^    a234:	e3a04000 	mov	r4, #0$/;"	l
a238	Test/a.s	/^    a238:	e5923000 	ldr	r3, [r2]$/;"	l
a23c	Test/a.s	/^    a23c:	e1530004 	cmp	r3, r4$/;"	l
a240	Test/a.s	/^    a240:	1a000005 	bne	a25c <_IO_un_link+0x84>$/;"	l
a244	Test/a.s	/^    a244:	e1a00004 	mov	r0, r4$/;"	l
a248	Test/a.s	/^    a248:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
a24c	Test/a.s	/^    a24c:	e1a0e00f 	mov	lr, pc$/;"	l
a250	Test/a.s	/^    a250:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
a254	Test/a.s	/^    a254:	3afffff7 	bcc	a238 <_IO_un_link+0x60>$/;"	l
a258	Test/a.s	/^    a258:	e1a03004 	mov	r3, r4$/;"	l
a25c	Test/a.s	/^    a25c:	e1530004 	cmp	r3, r4$/;"	l
a260	Test/a.s	/^    a260:	1a00008f 	bne	a4a4 <_IO_un_link+0x2cc>$/;"	l
a264	Test/a.s	/^    a264:	e5867014 	str	r7, [r6, #20]$/;"	l
a268	Test/a.s	/^    a268:	e5963010 	ldr	r3, [r6, #16]$/;"	l
a26c	Test/a.s	/^    a26c:	e5954000 	ldr	r4, [r5]$/;"	l
a270	Test/a.s	/^    a270:	e2833001 	add	r3, r3, #1$/;"	l
a274	Test/a.s	/^    a274:	e2144902 	ands	r4, r4, #32768	; 0x8000$/;"	l
a278	Test/a.s	/^    a278:	e5865008 	str	r5, [r6, #8]$/;"	l
a27c	Test/a.s	/^    a27c:	e5863010 	str	r3, [r6, #16]$/;"	l
a280	Test/a.s	/^    a280:	1a000015 	bne	a2dc <_IO_un_link+0x104>$/;"	l
a284	Test/a.s	/^    a284:	e595a048 	ldr	sl, [r5, #72]	; 0x48$/;"	l
a288	Test/a.s	/^    a288:	e59a3008 	ldr	r3, [sl, #8]$/;"	l
a28c	Test/a.s	/^    a28c:	e1570003 	cmp	r7, r3$/;"	l
a290	Test/a.s	/^    a290:	0a00000e 	beq	a2d0 <_IO_un_link+0xf8>$/;"	l
a294	Test/a.s	/^    a294:	e3a01001 	mov	r1, #1$/;"	l
a298	Test/a.s	/^    a298:	e1a0200a 	mov	r2, sl$/;"	l
a29c	Test/a.s	/^    a29c:	e5923000 	ldr	r3, [r2]$/;"	l
a2a0	Test/a.s	/^    a2a0:	e1530004 	cmp	r3, r4$/;"	l
a2a4	Test/a.s	/^    a2a4:	1a000005 	bne	a2c0 <_IO_un_link+0xe8>$/;"	l
a2a8	Test/a.s	/^    a2a8:	e1a00004 	mov	r0, r4$/;"	l
a2ac	Test/a.s	/^    a2ac:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
a2b0	Test/a.s	/^    a2b0:	e1a0e00f 	mov	lr, pc$/;"	l
a2b4	Test/a.s	/^    a2b4:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
a2b8	Test/a.s	/^    a2b8:	3afffff7 	bcc	a29c <_IO_un_link+0xc4>$/;"	l
a2bc	Test/a.s	/^    a2bc:	e1a03004 	mov	r3, r4$/;"	l
a2c0	Test/a.s	/^    a2c0:	e3530000 	cmp	r3, #0$/;"	l
a2c4	Test/a.s	/^    a2c4:	1a000069 	bne	a470 <_IO_un_link+0x298>$/;"	l
a2c8	Test/a.s	/^    a2c8:	e595a048 	ldr	sl, [r5, #72]	; 0x48$/;"	l
a2cc	Test/a.s	/^    a2cc:	e58a7008 	str	r7, [sl, #8]$/;"	l
a2d0	Test/a.s	/^    a2d0:	e59a3004 	ldr	r3, [sl, #4]$/;"	l
a2d4	Test/a.s	/^    a2d4:	e2833001 	add	r3, r3, #1$/;"	l
a2d8	Test/a.s	/^    a2d8:	e58a3004 	str	r3, [sl, #4]$/;"	l
a2dc	Test/a.s	/^    a2dc:	e59f21d8 	ldr	r2, [pc, #472]	; a4bc <_IO_un_link+0x2e4>$/;"	l
a2e0	Test/a.s	/^    a2e0:	e5923000 	ldr	r3, [r2]$/;"	l
a2e4	Test/a.s	/^    a2e4:	e3530000 	cmp	r3, #0$/;"	l
a2e8	Test/a.s	/^    a2e8:	0a00000e 	beq	a328 <_IO_un_link+0x150>$/;"	l
a2ec	Test/a.s	/^    a2ec:	e1550003 	cmp	r5, r3$/;"	l
a2f0	Test/a.s	/^    a2f0:	0a000051 	beq	a43c <_IO_un_link+0x264>$/;"	l
a2f4	Test/a.s	/^    a2f4:	e5932034 	ldr	r2, [r3, #52]	; 0x34$/;"	l
a2f8	Test/a.s	/^    a2f8:	e3520000 	cmp	r2, #0$/;"	l
a2fc	Test/a.s	/^    a2fc:	0a000009 	beq	a328 <_IO_un_link+0x150>$/;"	l
a300	Test/a.s	/^    a300:	e1550002 	cmp	r5, r2$/;"	l
a304	Test/a.s	/^    a304:	02832034 	addeq	r2, r3, #52	; 0x34$/;"	l
a308	Test/a.s	/^    a308:	1a000003 	bne	a31c <_IO_un_link+0x144>$/;"	l
a30c	Test/a.s	/^    a30c:	ea000044 	b	a424 <_IO_un_link+0x24c>$/;"	l
a310	Test/a.s	/^    a310:	e1550003 	cmp	r5, r3$/;"	l
a314	Test/a.s	/^    a314:	0a000041 	beq	a420 <_IO_un_link+0x248>$/;"	l
a318	Test/a.s	/^    a318:	e1a02003 	mov	r2, r3$/;"	l
a31c	Test/a.s	/^    a31c:	e5923034 	ldr	r3, [r2, #52]	; 0x34$/;"	l
a320	Test/a.s	/^    a320:	e3530000 	cmp	r3, #0$/;"	l
a324	Test/a.s	/^    a324:	1afffff9 	bne	a310 <_IO_un_link+0x138>$/;"	l
a328	Test/a.s	/^    a328:	e5953000 	ldr	r3, [r5]$/;"	l
a32c	Test/a.s	/^    a32c:	e3130902 	tst	r3, #32768	; 0x8000$/;"	l
a330	Test/a.s	/^    a330:	e3c33080 	bic	r3, r3, #128	; 0x80$/;"	l
a334	Test/a.s	/^    a334:	e5853000 	str	r3, [r5]$/;"	l
a338	Test/a.s	/^    a338:	1a000017 	bne	a39c <_IO_un_link+0x1c4>$/;"	l
a33c	Test/a.s	/^    a33c:	e5955048 	ldr	r5, [r5, #72]	; 0x48$/;"	l
a340	Test/a.s	/^    a340:	e5953004 	ldr	r3, [r5, #4]$/;"	l
a344	Test/a.s	/^    a344:	e2433001 	sub	r3, r3, #1$/;"	l
a348	Test/a.s	/^    a348:	e3530000 	cmp	r3, #0$/;"	l
a34c	Test/a.s	/^    a34c:	e5853004 	str	r3, [r5, #4]$/;"	l
a350	Test/a.s	/^    a350:	1a000011 	bne	a39c <_IO_un_link+0x1c4>$/;"	l
a354	Test/a.s	/^    a354:	e5853008 	str	r3, [r5, #8]$/;"	l
a358	Test/a.s	/^    a358:	e5957000 	ldr	r7, [r5]$/;"	l
a35c	Test/a.s	/^    a35c:	e3a01000 	mov	r1, #0$/;"	l
a360	Test/a.s	/^    a360:	e1a04007 	mov	r4, r7$/;"	l
a364	Test/a.s	/^    a364:	e1a02005 	mov	r2, r5$/;"	l
a368	Test/a.s	/^    a368:	e5923000 	ldr	r3, [r2]$/;"	l
a36c	Test/a.s	/^    a36c:	e1530004 	cmp	r3, r4$/;"	l
a370	Test/a.s	/^    a370:	1a000005 	bne	a38c <_IO_un_link+0x1b4>$/;"	l
a374	Test/a.s	/^    a374:	e1a00004 	mov	r0, r4$/;"	l
a378	Test/a.s	/^    a378:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
a37c	Test/a.s	/^    a37c:	e1a0e00f 	mov	lr, pc$/;"	l
a380	Test/a.s	/^    a380:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
a384	Test/a.s	/^    a384:	3afffff7 	bcc	a368 <_IO_un_link+0x190>$/;"	l
a388	Test/a.s	/^    a388:	e1a03004 	mov	r3, r4$/;"	l
a38c	Test/a.s	/^    a38c:	e1570003 	cmp	r7, r3$/;"	l
a390	Test/a.s	/^    a390:	1afffff0 	bne	a358 <_IO_un_link+0x180>$/;"	l
a394	Test/a.s	/^    a394:	e3570001 	cmp	r7, #1$/;"	l
a398	Test/a.s	/^    a398:	ca00002d 	bgt	a454 <_IO_un_link+0x27c>$/;"	l
a39c	Test/a.s	/^    a39c:	e5963010 	ldr	r3, [r6, #16]$/;"	l
a3a0	Test/a.s	/^    a3a0:	e3a02000 	mov	r2, #0$/;"	l
a3a4	Test/a.s	/^    a3a4:	e2433001 	sub	r3, r3, #1$/;"	l
a3a8	Test/a.s	/^    a3a8:	e1530002 	cmp	r3, r2$/;"	l
a3ac	Test/a.s	/^    a3ac:	e5862008 	str	r2, [r6, #8]$/;"	l
a3b0	Test/a.s	/^    a3b0:	e5863010 	str	r3, [r6, #16]$/;"	l
a3b4	Test/a.s	/^    a3b4:	e59f20fc 	ldr	r2, [pc, #252]	; a4b8 <_IO_un_link+0x2e0>$/;"	l
a3b8	Test/a.s	/^    a3b8:	1a000011 	bne	a404 <_IO_un_link+0x22c>$/;"	l
a3bc	Test/a.s	/^    a3bc:	e5823014 	str	r3, [r2, #20]$/;"	l
a3c0	Test/a.s	/^    a3c0:	e596500c 	ldr	r5, [r6, #12]$/;"	l
a3c4	Test/a.s	/^    a3c4:	e3a01000 	mov	r1, #0$/;"	l
a3c8	Test/a.s	/^    a3c8:	e1a04005 	mov	r4, r5$/;"	l
a3cc	Test/a.s	/^    a3cc:	e59f20ec 	ldr	r2, [pc, #236]	; a4c0 <_IO_un_link+0x2e8>$/;"	l
a3d0	Test/a.s	/^    a3d0:	e5923000 	ldr	r3, [r2]$/;"	l
a3d4	Test/a.s	/^    a3d4:	e1530004 	cmp	r3, r4$/;"	l
a3d8	Test/a.s	/^    a3d8:	1a000005 	bne	a3f4 <_IO_un_link+0x21c>$/;"	l
a3dc	Test/a.s	/^    a3dc:	e1a00004 	mov	r0, r4$/;"	l
a3e0	Test/a.s	/^    a3e0:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
a3e4	Test/a.s	/^    a3e4:	e1a0e00f 	mov	lr, pc$/;"	l
a3e8	Test/a.s	/^    a3e8:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
a3ec	Test/a.s	/^    a3ec:	3afffff7 	bcc	a3d0 <_IO_un_link+0x1f8>$/;"	l
a3f0	Test/a.s	/^    a3f0:	e1a03004 	mov	r3, r4$/;"	l
a3f4	Test/a.s	/^    a3f4:	e1550003 	cmp	r5, r3$/;"	l
a3f8	Test/a.s	/^    a3f8:	1afffff0 	bne	a3c0 <_IO_un_link+0x1e8>$/;"	l
a3fc	Test/a.s	/^    a3fc:	e3550001 	cmp	r5, #1$/;"	l
a400	Test/a.s	/^    a400:	ca00001d 	bgt	a47c <_IO_un_link+0x2a4>$/;"	l
a404	Test/a.s	/^    a404:	e3580000 	cmp	r8, #0$/;"	l
a408	Test/a.s	/^    a408:	0a000002 	beq	a418 <_IO_un_link+0x240>$/;"	l
a40c	Test/a.s	/^    a40c:	e1a0000d 	mov	r0, sp$/;"	l
a410	Test/a.s	/^    a410:	e3a01000 	mov	r1, #0$/;"	l
a414	Test/a.s	/^    a414:	e320f000 	nop	{0}$/;"	l
a418	Test/a.s	/^    a418:	e28dd014 	add	sp, sp, #20$/;"	l
a41c	Test/a.s	/^    a41c:	e8bd85f0 	pop	{r4, r5, r6, r7, r8, sl, pc}$/;"	l
a420	Test/a.s	/^    a420:	e2822034 	add	r2, r2, #52	; 0x34$/;"	l
a424	Test/a.s	/^    a424:	e5960018 	ldr	r0, [r6, #24]$/;"	l
a428	Test/a.s	/^    a428:	e5951034 	ldr	r1, [r5, #52]	; 0x34$/;"	l
a42c	Test/a.s	/^    a42c:	e2800001 	add	r0, r0, #1$/;"	l
a430	Test/a.s	/^    a430:	e5860018 	str	r0, [r6, #24]$/;"	l
a434	Test/a.s	/^    a434:	e5821000 	str	r1, [r2]$/;"	l
a438	Test/a.s	/^    a438:	eaffffba 	b	a328 <_IO_un_link+0x150>$/;"	l
a43c	Test/a.s	/^    a43c:	e5961018 	ldr	r1, [r6, #24]$/;"	l
a440	Test/a.s	/^    a440:	e5953034 	ldr	r3, [r5, #52]	; 0x34$/;"	l
a444	Test/a.s	/^    a444:	e2811001 	add	r1, r1, #1$/;"	l
a448	Test/a.s	/^    a448:	e5861018 	str	r1, [r6, #24]$/;"	l
a44c	Test/a.s	/^    a44c:	e5823000 	str	r3, [r2]$/;"	l
a450	Test/a.s	/^    a450:	eaffffb4 	b	a328 <_IO_un_link+0x150>$/;"	l
a454	Test/a.s	/^    a454:	e1a00005 	mov	r0, r5$/;"	l
a458	Test/a.s	/^    a458:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
a45c	Test/a.s	/^    a45c:	e3a02001 	mov	r2, #1$/;"	l
a460	Test/a.s	/^    a460:	e3a03000 	mov	r3, #0$/;"	l
a464	Test/a.s	/^    a464:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
a468	Test/a.s	/^    a468:	ef000000 	svc	0x00000000$/;"	l
a46c	Test/a.s	/^    a46c:	eaffffca 	b	a39c <_IO_un_link+0x1c4>$/;"	l
a470	Test/a.s	/^    a470:	e1a0000a 	mov	r0, sl$/;"	l
a474	Test/a.s	/^    a474:	eb002bc5 	bl	15390 <__lll_lock_wait_private>$/;"	l
a478	Test/a.s	/^    a478:	eaffff92 	b	a2c8 <_IO_un_link+0xf0>$/;"	l
a47c	Test/a.s	/^    a47c:	e1a00002 	mov	r0, r2$/;"	l
a480	Test/a.s	/^    a480:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
a484	Test/a.s	/^    a484:	e3a02001 	mov	r2, #1$/;"	l
a488	Test/a.s	/^    a488:	e3a03000 	mov	r3, #0$/;"	l
a48c	Test/a.s	/^    a48c:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
a490	Test/a.s	/^    a490:	ef000000 	svc	0x00000000$/;"	l
a494	Test/a.s	/^    a494:	eaffffda 	b	a404 <_IO_un_link+0x22c>$/;"	l
a498	Test/a.s	/^    a498:	e59f3014 	ldr	r3, [pc, #20]	; a4b4 <_IO_un_link+0x2dc>$/;"	l
a49c	Test/a.s	/^    a49c:	e88d0108 	stm	sp, {r3, r8}$/;"	l
a4a0	Test/a.s	/^    a4a0:	eaffff5b 	b	a214 <_IO_un_link+0x3c>$/;"	l
a4a4	Test/a.s	/^    a4a4:	e1a00002 	mov	r0, r2$/;"	l
a4a8	Test/a.s	/^    a4a8:	eb002bb8 	bl	15390 <__lll_lock_wait_private>$/;"	l
a4ac	Test/a.s	/^    a4ac:	eaffff6c 	b	a264 <_IO_un_link+0x8c>$/;"	l
a4b0	Test/a.s	/^    a4b0:	00000000 	.word	0x00000000$/;"	l
a4b4	Test/a.s	/^    a4b4:	00009f04 	.word	0x00009f04$/;"	l
a4b8	Test/a.s	/^    a4b8:	0008d2b8 	.word	0x0008d2b8$/;"	l
a4bc	Test/a.s	/^    a4bc:	0008c088 	.word	0x0008c088$/;"	l
a4c0	Test/a.s	/^    a4c0:	0008d2c4 	.word	0x0008d2c4$/;"	l
a4c4	Test/a.s	/^    a4c4:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}$/;"	l
a4c8	Test/a.s	/^    a4c8:	e5903000 	ldr	r3, [r0]$/;"	l
a4cc	Test/a.s	/^    a4cc:	e24dd014 	sub	sp, sp, #20$/;"	l
a4d0	Test/a.s	/^    a4d0:	e2132080 	ands	r2, r3, #128	; 0x80$/;"	l
a4d4	Test/a.s	/^    a4d4:	e1a06000 	mov	r6, r0$/;"	l
a4d8	Test/a.s	/^    a4d8:	1a00004c 	bne	a610 <_IO_link_in+0x14c>$/;"	l
a4dc	Test/a.s	/^    a4dc:	e59fa264 	ldr	sl, [pc, #612]	; a748 <_IO_link_in+0x284>$/;"	l
a4e0	Test/a.s	/^    a4e0:	e3833080 	orr	r3, r3, #128	; 0x80$/;"	l
a4e4	Test/a.s	/^    a4e4:	e29aa000 	adds	sl, sl, #0$/;"	l
a4e8	Test/a.s	/^    a4e8:	13a0a001 	movne	sl, #1$/;"	l
a4ec	Test/a.s	/^    a4ec:	e35a0000 	cmp	sl, #0$/;"	l
a4f0	Test/a.s	/^    a4f0:	e5803000 	str	r3, [r0]$/;"	l
a4f4	Test/a.s	/^    a4f4:	0a000086 	beq	a714 <_IO_link_in+0x250>$/;"	l
a4f8	Test/a.s	/^    a4f8:	e1a0000d 	mov	r0, sp$/;"	l
a4fc	Test/a.s	/^    a4fc:	e59f1248 	ldr	r1, [pc, #584]	; a74c <_IO_link_in+0x288>$/;"	l
a500	Test/a.s	/^    a500:	e320f000 	nop	{0}$/;"	l
a504	Test/a.s	/^    a504:	e59f5244 	ldr	r5, [pc, #580]	; a750 <_IO_link_in+0x28c>$/;"	l
a508	Test/a.s	/^    a508:	ebfffbd4 	bl	9460 <__aeabi_read_tp>$/;"	l
a50c	Test/a.s	/^    a50c:	e5953014 	ldr	r3, [r5, #20]$/;"	l
a510	Test/a.s	/^    a510:	e2408d13 	sub	r8, r0, #1216	; 0x4c0$/;"	l
a514	Test/a.s	/^    a514:	e1530008 	cmp	r3, r8$/;"	l
a518	Test/a.s	/^    a518:	0a00000e 	beq	a558 <_IO_link_in+0x94>$/;"	l
a51c	Test/a.s	/^    a51c:	e3a01001 	mov	r1, #1$/;"	l
a520	Test/a.s	/^    a520:	e285200c 	add	r2, r5, #12$/;"	l
a524	Test/a.s	/^    a524:	e3a04000 	mov	r4, #0$/;"	l
a528	Test/a.s	/^    a528:	e5923000 	ldr	r3, [r2]$/;"	l
a52c	Test/a.s	/^    a52c:	e1530004 	cmp	r3, r4$/;"	l
a530	Test/a.s	/^    a530:	1a000005 	bne	a54c <_IO_link_in+0x88>$/;"	l
a534	Test/a.s	/^    a534:	e1a00004 	mov	r0, r4$/;"	l
a538	Test/a.s	/^    a538:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
a53c	Test/a.s	/^    a53c:	e1a0e00f 	mov	lr, pc$/;"	l
a540	Test/a.s	/^    a540:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
a544	Test/a.s	/^    a544:	3afffff7 	bcc	a528 <_IO_link_in+0x64>$/;"	l
a548	Test/a.s	/^    a548:	e1a03004 	mov	r3, r4$/;"	l
a54c	Test/a.s	/^    a54c:	e1530004 	cmp	r3, r4$/;"	l
a550	Test/a.s	/^    a550:	1a00006c 	bne	a708 <_IO_link_in+0x244>$/;"	l
a554	Test/a.s	/^    a554:	e5858014 	str	r8, [r5, #20]$/;"	l
a558	Test/a.s	/^    a558:	e5952010 	ldr	r2, [r5, #16]$/;"	l
a55c	Test/a.s	/^    a55c:	e5963000 	ldr	r3, [r6]$/;"	l
a560	Test/a.s	/^    a560:	e2822001 	add	r2, r2, #1$/;"	l
a564	Test/a.s	/^    a564:	e2134902 	ands	r4, r3, #32768	; 0x8000$/;"	l
a568	Test/a.s	/^    a568:	e5852010 	str	r2, [r5, #16]$/;"	l
a56c	Test/a.s	/^    a56c:	e5856008 	str	r6, [r5, #8]$/;"	l
a570	Test/a.s	/^    a570:	e59f21d8 	ldr	r2, [pc, #472]	; a750 <_IO_link_in+0x28c>$/;"	l
a574	Test/a.s	/^    a574:	0a000027 	beq	a618 <_IO_link_in+0x154>$/;"	l
a578	Test/a.s	/^    a578:	e59f31d4 	ldr	r3, [pc, #468]	; a754 <_IO_link_in+0x290>$/;"	l
a57c	Test/a.s	/^    a57c:	e5921018 	ldr	r1, [r2, #24]$/;"	l
a580	Test/a.s	/^    a580:	e5930000 	ldr	r0, [r3]$/;"	l
a584	Test/a.s	/^    a584:	e2811001 	add	r1, r1, #1$/;"	l
a588	Test/a.s	/^    a588:	e5860034 	str	r0, [r6, #52]	; 0x34$/;"	l
a58c	Test/a.s	/^    a58c:	e5836000 	str	r6, [r3]$/;"	l
a590	Test/a.s	/^    a590:	e5821018 	str	r1, [r2, #24]$/;"	l
a594	Test/a.s	/^    a594:	e5953010 	ldr	r3, [r5, #16]$/;"	l
a598	Test/a.s	/^    a598:	e3a02000 	mov	r2, #0$/;"	l
a59c	Test/a.s	/^    a59c:	e2433001 	sub	r3, r3, #1$/;"	l
a5a0	Test/a.s	/^    a5a0:	e1530002 	cmp	r3, r2$/;"	l
a5a4	Test/a.s	/^    a5a4:	e5852008 	str	r2, [r5, #8]$/;"	l
a5a8	Test/a.s	/^    a5a8:	e5853010 	str	r3, [r5, #16]$/;"	l
a5ac	Test/a.s	/^    a5ac:	e59f219c 	ldr	r2, [pc, #412]	; a750 <_IO_link_in+0x28c>$/;"	l
a5b0	Test/a.s	/^    a5b0:	1a000011 	bne	a5fc <_IO_link_in+0x138>$/;"	l
a5b4	Test/a.s	/^    a5b4:	e5823014 	str	r3, [r2, #20]$/;"	l
a5b8	Test/a.s	/^    a5b8:	e595600c 	ldr	r6, [r5, #12]$/;"	l
a5bc	Test/a.s	/^    a5bc:	e3a01000 	mov	r1, #0$/;"	l
a5c0	Test/a.s	/^    a5c0:	e1a04006 	mov	r4, r6$/;"	l
a5c4	Test/a.s	/^    a5c4:	e59f218c 	ldr	r2, [pc, #396]	; a758 <_IO_link_in+0x294>$/;"	l
a5c8	Test/a.s	/^    a5c8:	e5923000 	ldr	r3, [r2]$/;"	l
a5cc	Test/a.s	/^    a5cc:	e1530004 	cmp	r3, r4$/;"	l
a5d0	Test/a.s	/^    a5d0:	1a000005 	bne	a5ec <_IO_link_in+0x128>$/;"	l
a5d4	Test/a.s	/^    a5d4:	e1a00004 	mov	r0, r4$/;"	l
a5d8	Test/a.s	/^    a5d8:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
a5dc	Test/a.s	/^    a5dc:	e1a0e00f 	mov	lr, pc$/;"	l
a5e0	Test/a.s	/^    a5e0:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
a5e4	Test/a.s	/^    a5e4:	3afffff7 	bcc	a5c8 <_IO_link_in+0x104>$/;"	l
a5e8	Test/a.s	/^    a5e8:	e1a03004 	mov	r3, r4$/;"	l
a5ec	Test/a.s	/^    a5ec:	e1560003 	cmp	r6, r3$/;"	l
a5f0	Test/a.s	/^    a5f0:	1afffff0 	bne	a5b8 <_IO_link_in+0xf4>$/;"	l
a5f4	Test/a.s	/^    a5f4:	e3560001 	cmp	r6, #1$/;"	l
a5f8	Test/a.s	/^    a5f8:	ca000048 	bgt	a720 <_IO_link_in+0x25c>$/;"	l
a5fc	Test/a.s	/^    a5fc:	e35a0000 	cmp	sl, #0$/;"	l
a600	Test/a.s	/^    a600:	0a000002 	beq	a610 <_IO_link_in+0x14c>$/;"	l
a604	Test/a.s	/^    a604:	e1a0000d 	mov	r0, sp$/;"	l
a608	Test/a.s	/^    a608:	e3a01000 	mov	r1, #0$/;"	l
a60c	Test/a.s	/^    a60c:	e320f000 	nop	{0}$/;"	l
a610	Test/a.s	/^    a610:	e28dd014 	add	sp, sp, #20$/;"	l
a614	Test/a.s	/^    a614:	e8bd85f0 	pop	{r4, r5, r6, r7, r8, sl, pc}$/;"	l
a618	Test/a.s	/^    a618:	e5967048 	ldr	r7, [r6, #72]	; 0x48$/;"	l
a61c	Test/a.s	/^    a61c:	e5972008 	ldr	r2, [r7, #8]$/;"	l
a620	Test/a.s	/^    a620:	e1580002 	cmp	r8, r2$/;"	l
a624	Test/a.s	/^    a624:	0a00000f 	beq	a668 <_IO_link_in+0x1a4>$/;"	l
a628	Test/a.s	/^    a628:	e3a01001 	mov	r1, #1$/;"	l
a62c	Test/a.s	/^    a62c:	e1a02007 	mov	r2, r7$/;"	l
a630	Test/a.s	/^    a630:	e5923000 	ldr	r3, [r2]$/;"	l
a634	Test/a.s	/^    a634:	e1530004 	cmp	r3, r4$/;"	l
a638	Test/a.s	/^    a638:	1a000005 	bne	a654 <_IO_link_in+0x190>$/;"	l
a63c	Test/a.s	/^    a63c:	e1a00004 	mov	r0, r4$/;"	l
a640	Test/a.s	/^    a640:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
a644	Test/a.s	/^    a644:	e1a0e00f 	mov	lr, pc$/;"	l
a648	Test/a.s	/^    a648:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
a64c	Test/a.s	/^    a64c:	3afffff7 	bcc	a630 <_IO_link_in+0x16c>$/;"	l
a650	Test/a.s	/^    a650:	e1a03004 	mov	r3, r4$/;"	l
a654	Test/a.s	/^    a654:	e3530000 	cmp	r3, #0$/;"	l
a658	Test/a.s	/^    a658:	1a000037 	bne	a73c <_IO_link_in+0x278>$/;"	l
a65c	Test/a.s	/^    a65c:	e5967048 	ldr	r7, [r6, #72]	; 0x48$/;"	l
a660	Test/a.s	/^    a660:	e5963000 	ldr	r3, [r6]$/;"	l
a664	Test/a.s	/^    a664:	e5878008 	str	r8, [r7, #8]$/;"	l
a668	Test/a.s	/^    a668:	e59f10e4 	ldr	r1, [pc, #228]	; a754 <_IO_link_in+0x290>$/;"	l
a66c	Test/a.s	/^    a66c:	e5972004 	ldr	r2, [r7, #4]$/;"	l
a670	Test/a.s	/^    a670:	e5954018 	ldr	r4, [r5, #24]$/;"	l
a674	Test/a.s	/^    a674:	e5910000 	ldr	r0, [r1]$/;"	l
a678	Test/a.s	/^    a678:	e3130902 	tst	r3, #32768	; 0x8000$/;"	l
a67c	Test/a.s	/^    a67c:	e282c001 	add	ip, r2, #1$/;"	l
a680	Test/a.s	/^    a680:	e2843001 	add	r3, r4, #1$/;"	l
a684	Test/a.s	/^    a684:	e587c004 	str	ip, [r7, #4]$/;"	l
a688	Test/a.s	/^    a688:	e5816000 	str	r6, [r1]$/;"	l
a68c	Test/a.s	/^    a68c:	e5860034 	str	r0, [r6, #52]	; 0x34$/;"	l
a690	Test/a.s	/^    a690:	e5853018 	str	r3, [r5, #24]$/;"	l
a694	Test/a.s	/^    a694:	1affffbe 	bne	a594 <_IO_link_in+0xd0>$/;"	l
a698	Test/a.s	/^    a698:	e3520000 	cmp	r2, #0$/;"	l
a69c	Test/a.s	/^    a69c:	e5872004 	str	r2, [r7, #4]$/;"	l
a6a0	Test/a.s	/^    a6a0:	1affffbb 	bne	a594 <_IO_link_in+0xd0>$/;"	l
a6a4	Test/a.s	/^    a6a4:	e5872008 	str	r2, [r7, #8]$/;"	l
a6a8	Test/a.s	/^    a6a8:	e5976000 	ldr	r6, [r7]$/;"	l
a6ac	Test/a.s	/^    a6ac:	e3a01000 	mov	r1, #0$/;"	l
a6b0	Test/a.s	/^    a6b0:	e1a04006 	mov	r4, r6$/;"	l
a6b4	Test/a.s	/^    a6b4:	e1a02007 	mov	r2, r7$/;"	l
a6b8	Test/a.s	/^    a6b8:	e5923000 	ldr	r3, [r2]$/;"	l
a6bc	Test/a.s	/^    a6bc:	e1530004 	cmp	r3, r4$/;"	l
a6c0	Test/a.s	/^    a6c0:	1a000005 	bne	a6dc <_IO_link_in+0x218>$/;"	l
a6c4	Test/a.s	/^    a6c4:	e1a00004 	mov	r0, r4$/;"	l
a6c8	Test/a.s	/^    a6c8:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
a6cc	Test/a.s	/^    a6cc:	e1a0e00f 	mov	lr, pc$/;"	l
a6d0	Test/a.s	/^    a6d0:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
a6d4	Test/a.s	/^    a6d4:	3afffff7 	bcc	a6b8 <_IO_link_in+0x1f4>$/;"	l
a6d8	Test/a.s	/^    a6d8:	e1a03004 	mov	r3, r4$/;"	l
a6dc	Test/a.s	/^    a6dc:	e1560003 	cmp	r6, r3$/;"	l
a6e0	Test/a.s	/^    a6e0:	1afffff0 	bne	a6a8 <_IO_link_in+0x1e4>$/;"	l
a6e4	Test/a.s	/^    a6e4:	e3560001 	cmp	r6, #1$/;"	l
a6e8	Test/a.s	/^    a6e8:	daffffa9 	ble	a594 <_IO_link_in+0xd0>$/;"	l
a6ec	Test/a.s	/^    a6ec:	e1a00007 	mov	r0, r7$/;"	l
a6f0	Test/a.s	/^    a6f0:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
a6f4	Test/a.s	/^    a6f4:	e3a02001 	mov	r2, #1$/;"	l
a6f8	Test/a.s	/^    a6f8:	e3a03000 	mov	r3, #0$/;"	l
a6fc	Test/a.s	/^    a6fc:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
a700	Test/a.s	/^    a700:	ef000000 	svc	0x00000000$/;"	l
a704	Test/a.s	/^    a704:	eaffffa2 	b	a594 <_IO_link_in+0xd0>$/;"	l
a708	Test/a.s	/^    a708:	e1a00002 	mov	r0, r2$/;"	l
a70c	Test/a.s	/^    a70c:	eb002b1f 	bl	15390 <__lll_lock_wait_private>$/;"	l
a710	Test/a.s	/^    a710:	eaffff8f 	b	a554 <_IO_link_in+0x90>$/;"	l
a714	Test/a.s	/^    a714:	e59f3030 	ldr	r3, [pc, #48]	; a74c <_IO_link_in+0x288>$/;"	l
a718	Test/a.s	/^    a718:	e88d0408 	stm	sp, {r3, sl}$/;"	l
a71c	Test/a.s	/^    a71c:	eaffff78 	b	a504 <_IO_link_in+0x40>$/;"	l
a720	Test/a.s	/^    a720:	e1a00002 	mov	r0, r2$/;"	l
a724	Test/a.s	/^    a724:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
a728	Test/a.s	/^    a728:	e3a02001 	mov	r2, #1$/;"	l
a72c	Test/a.s	/^    a72c:	e3a03000 	mov	r3, #0$/;"	l
a730	Test/a.s	/^    a730:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
a734	Test/a.s	/^    a734:	ef000000 	svc	0x00000000$/;"	l
a738	Test/a.s	/^    a738:	eaffffaf 	b	a5fc <_IO_link_in+0x138>$/;"	l
a73c	Test/a.s	/^    a73c:	e1a00007 	mov	r0, r7$/;"	l
a740	Test/a.s	/^    a740:	eb002b12 	bl	15390 <__lll_lock_wait_private>$/;"	l
a744	Test/a.s	/^    a744:	eaffffc4 	b	a65c <_IO_link_in+0x198>$/;"	l
a748	Test/a.s	/^    a748:	00000000 	.word	0x00000000$/;"	l
a74c	Test/a.s	/^    a74c:	00009f04 	.word	0x00009f04$/;"	l
a750	Test/a.s	/^    a750:	0008d2b8 	.word	0x0008d2b8$/;"	l
a754	Test/a.s	/^    a754:	0008c088 	.word	0x0008c088$/;"	l
a758	Test/a.s	/^    a758:	0008d2c4 	.word	0x0008d2c4$/;"	l
a75c	Test/a.s	/^    a75c:	e5903030 	ldr	r3, [r0, #48]	; 0x30$/;"	l
a760	Test/a.s	/^    a760:	e590000c 	ldr	r0, [r0, #12]$/;"	l
a764	Test/a.s	/^    a764:	e3530000 	cmp	r3, #0$/;"	l
a768	Test/a.s	/^    a768:	e0600001 	rsb	r0, r0, r1$/;"	l
a76c	Test/a.s	/^    a76c:	012fff1e 	bxeq	lr$/;"	l
a770	Test/a.s	/^    a770:	e5932008 	ldr	r2, [r3, #8]$/;"	l
a774	Test/a.s	/^    a774:	e5933000 	ldr	r3, [r3]$/;"	l
a778	Test/a.s	/^    a778:	e1500002 	cmp	r0, r2$/;"	l
a77c	Test/a.s	/^    a77c:	a1a00002 	movge	r0, r2$/;"	l
a780	Test/a.s	/^    a780:	e3530000 	cmp	r3, #0$/;"	l
a784	Test/a.s	/^    a784:	1afffff9 	bne	a770 <_IO_least_marker+0x14>$/;"	l
a788	Test/a.s	/^    a788:	e12fff1e 	bx	lr$/;"	l
a78c	Test/a.s	/^    a78c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)$/;"	l
a790	Test/a.s	/^    a790:	e5904000 	ldr	r4, [r0]$/;"	l
a794	Test/a.s	/^    a794:	e5903024 	ldr	r3, [r0, #36]	; 0x24$/;"	l
a798	Test/a.s	/^    a798:	e5901008 	ldr	r1, [r0, #8]$/;"	l
a79c	Test/a.s	/^    a79c:	e590c02c 	ldr	ip, [r0, #44]	; 0x2c$/;"	l
a7a0	Test/a.s	/^    a7a0:	e590200c 	ldr	r2, [r0, #12]$/;"	l
a7a4	Test/a.s	/^    a7a4:	e3c44c01 	bic	r4, r4, #256	; 0x100$/;"	l
a7a8	Test/a.s	/^    a7a8:	e5804000 	str	r4, [r0]$/;"	l
a7ac	Test/a.s	/^    a7ac:	e580c008 	str	ip, [r0, #8]$/;"	l
a7b0	Test/a.s	/^    a7b0:	e580102c 	str	r1, [r0, #44]	; 0x2c$/;"	l
a7b4	Test/a.s	/^    a7b4:	e5802024 	str	r2, [r0, #36]	; 0x24$/;"	l
a7b8	Test/a.s	/^    a7b8:	e580300c 	str	r3, [r0, #12]$/;"	l
a7bc	Test/a.s	/^    a7bc:	e5803004 	str	r3, [r0, #4]$/;"	l
a7c0	Test/a.s	/^    a7c0:	e8bd0010 	ldmfd	sp!, {r4}$/;"	l
a7c4	Test/a.s	/^    a7c4:	e12fff1e 	bx	lr$/;"	l
a7c8	Test/a.s	/^    a7c8:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)$/;"	l
a7cc	Test/a.s	/^    a7cc:	e5904000 	ldr	r4, [r0]$/;"	l
a7d0	Test/a.s	/^    a7d0:	e590302c 	ldr	r3, [r0, #44]	; 0x2c$/;"	l
a7d4	Test/a.s	/^    a7d4:	e590c008 	ldr	ip, [r0, #8]$/;"	l
a7d8	Test/a.s	/^    a7d8:	e590200c 	ldr	r2, [r0, #12]$/;"	l
a7dc	Test/a.s	/^    a7dc:	e5901024 	ldr	r1, [r0, #36]	; 0x24$/;"	l
a7e0	Test/a.s	/^    a7e0:	e3844c01 	orr	r4, r4, #256	; 0x100$/;"	l
a7e4	Test/a.s	/^    a7e4:	e5804000 	str	r4, [r0]$/;"	l
a7e8	Test/a.s	/^    a7e8:	e580c02c 	str	ip, [r0, #44]	; 0x2c$/;"	l
a7ec	Test/a.s	/^    a7ec:	e5803008 	str	r3, [r0, #8]$/;"	l
a7f0	Test/a.s	/^    a7f0:	e5803004 	str	r3, [r0, #4]$/;"	l
a7f4	Test/a.s	/^    a7f4:	e580100c 	str	r1, [r0, #12]$/;"	l
a7f8	Test/a.s	/^    a7f8:	e5802024 	str	r2, [r0, #36]	; 0x24$/;"	l
a7fc	Test/a.s	/^    a7fc:	e8bd0010 	ldmfd	sp!, {r4}$/;"	l
a800	Test/a.s	/^    a800:	e12fff1e 	bx	lr$/;"	l
a804	Test/a.s	/^    a804:	e5903014 	ldr	r3, [r0, #20]$/;"	l
a808	Test/a.s	/^    a808:	e5902010 	ldr	r2, [r0, #16]$/;"	l
a80c	Test/a.s	/^    a80c:	e92d4010 	push	{r4, lr}$/;"	l
a810	Test/a.s	/^    a810:	e1530002 	cmp	r3, r2$/;"	l
a814	Test/a.s	/^    a814:	e1a04000 	mov	r4, r0$/;"	l
a818	Test/a.s	/^    a818:	8a000010 	bhi	a860 <_IO_switch_to_get_mode+0x5c>$/;"	l
a81c	Test/a.s	/^    a81c:	e5942000 	ldr	r2, [r4]$/;"	l
a820	Test/a.s	/^    a820:	e3120c01 	tst	r2, #256	; 0x100$/;"	l
a824	Test/a.s	/^    a824:	1a00000a 	bne	a854 <_IO_switch_to_get_mode+0x50>$/;"	l
a828	Test/a.s	/^    a828:	e5940008 	ldr	r0, [r4, #8]$/;"	l
a82c	Test/a.s	/^    a82c:	e594101c 	ldr	r1, [r4, #28]$/;"	l
a830	Test/a.s	/^    a830:	e1500003 	cmp	r0, r3$/;"	l
a834	Test/a.s	/^    a834:	e584100c 	str	r1, [r4, #12]$/;"	l
a838	Test/a.s	/^    a838:	35843008 	strcc	r3, [r4, #8]$/;"	l
a83c	Test/a.s	/^    a83c:	e3c22b02 	bic	r2, r2, #2048	; 0x800$/;"	l
a840	Test/a.s	/^    a840:	e884000c 	stm	r4, {r2, r3}$/;"	l
a844	Test/a.s	/^    a844:	e5843018 	str	r3, [r4, #24]$/;"	l
a848	Test/a.s	/^    a848:	e5843010 	str	r3, [r4, #16]$/;"	l
a84c	Test/a.s	/^    a84c:	e3a00000 	mov	r0, #0$/;"	l
a850	Test/a.s	/^    a850:	e8bd8010 	pop	{r4, pc}$/;"	l
a854	Test/a.s	/^    a854:	e5941028 	ldr	r1, [r4, #40]	; 0x28$/;"	l
a858	Test/a.s	/^    a858:	e584100c 	str	r1, [r4, #12]$/;"	l
a85c	Test/a.s	/^    a85c:	eafffff6 	b	a83c <_IO_switch_to_get_mode+0x38>$/;"	l
a860	Test/a.s	/^    a860:	e5903098 	ldr	r3, [r0, #152]	; 0x98$/;"	l
a864	Test/a.s	/^    a864:	e3e01000 	mvn	r1, #0$/;"	l
a868	Test/a.s	/^    a868:	e593300c 	ldr	r3, [r3, #12]$/;"	l
a86c	Test/a.s	/^    a86c:	e12fff33 	blx	r3$/;"	l
a870	Test/a.s	/^    a870:	e3700001 	cmn	r0, #1$/;"	l
a874	Test/a.s	/^    a874:	08bd8010 	popeq	{r4, pc}$/;"	l
a878	Test/a.s	/^    a878:	e5943014 	ldr	r3, [r4, #20]$/;"	l
a87c	Test/a.s	/^    a87c:	eaffffe6 	b	a81c <_IO_switch_to_get_mode+0x18>$/;"	l
a880	Test/a.s	/^    a880:	e5903000 	ldr	r3, [r0]$/;"	l
a884	Test/a.s	/^    a884:	e92d4010 	push	{r4, lr}$/;"	l
a888	Test/a.s	/^    a888:	e3130c01 	tst	r3, #256	; 0x100$/;"	l
a88c	Test/a.s	/^    a88c:	e1a04000 	mov	r4, r0$/;"	l
a890	Test/a.s	/^    a890:	0a000010 	beq	a8d8 <_IO_free_backup_area+0x58>$/;"	l
a894	Test/a.s	/^    a894:	e590c008 	ldr	ip, [r0, #8]$/;"	l
a898	Test/a.s	/^    a898:	e590102c 	ldr	r1, [r0, #44]	; 0x2c$/;"	l
a89c	Test/a.s	/^    a89c:	e5942024 	ldr	r2, [r4, #36]	; 0x24$/;"	l
a8a0	Test/a.s	/^    a8a0:	e590000c 	ldr	r0, [r0, #12]$/;"	l
a8a4	Test/a.s	/^    a8a4:	e3c33c01 	bic	r3, r3, #256	; 0x100$/;"	l
a8a8	Test/a.s	/^    a8a8:	e5843000 	str	r3, [r4]$/;"	l
a8ac	Test/a.s	/^    a8ac:	e584c02c 	str	ip, [r4, #44]	; 0x2c$/;"	l
a8b0	Test/a.s	/^    a8b0:	e5841008 	str	r1, [r4, #8]$/;"	l
a8b4	Test/a.s	/^    a8b4:	e5840024 	str	r0, [r4, #36]	; 0x24$/;"	l
a8b8	Test/a.s	/^    a8b8:	e584200c 	str	r2, [r4, #12]$/;"	l
a8bc	Test/a.s	/^    a8bc:	e5842004 	str	r2, [r4, #4]$/;"	l
a8c0	Test/a.s	/^    a8c0:	eb0018be 	bl	10bc0 <__cfree>$/;"	l
a8c4	Test/a.s	/^    a8c4:	e3a03000 	mov	r3, #0$/;"	l
a8c8	Test/a.s	/^    a8c8:	e5843024 	str	r3, [r4, #36]	; 0x24$/;"	l
a8cc	Test/a.s	/^    a8cc:	e584302c 	str	r3, [r4, #44]	; 0x2c$/;"	l
a8d0	Test/a.s	/^    a8d0:	e5843028 	str	r3, [r4, #40]	; 0x28$/;"	l
a8d4	Test/a.s	/^    a8d4:	e8bd8010 	pop	{r4, pc}$/;"	l
a8d8	Test/a.s	/^    a8d8:	e5900024 	ldr	r0, [r0, #36]	; 0x24$/;"	l
a8dc	Test/a.s	/^    a8dc:	eafffff7 	b	a8c0 <_IO_free_backup_area+0x40>$/;"	l
a8e0	Test/a.s	/^    a8e0:	e92d4008 	push	{r3, lr}$/;"	l
a8e4	Test/a.s	/^    a8e4:	e590306c 	ldr	r3, [r0, #108]	; 0x6c$/;"	l
a8e8	Test/a.s	/^    a8e8:	e3530000 	cmp	r3, #0$/;"	l
a8ec	Test/a.s	/^    a8ec:	03e03000 	mvneq	r3, #0$/;"	l
a8f0	Test/a.s	/^    a8f0:	0580306c 	streq	r3, [r0, #108]	; 0x6c$/;"	l
a8f4	Test/a.s	/^    a8f4:	e5903098 	ldr	r3, [r0, #152]	; 0x98$/;"	l
a8f8	Test/a.s	/^    a8f8:	e593300c 	ldr	r3, [r3, #12]$/;"	l
a8fc	Test/a.s	/^    a8fc:	e12fff33 	blx	r3$/;"	l
a900	Test/a.s	/^    a900:	e8bd8008 	pop	{r3, pc}$/;"	l
a904	Test/a.s	/^    a904:	e590306c 	ldr	r3, [r0, #108]	; 0x6c$/;"	l
a908	Test/a.s	/^    a908:	e92d4010 	push	{r4, lr}$/;"	l
a90c	Test/a.s	/^    a90c:	e3530000 	cmp	r3, #0$/;"	l
a910	Test/a.s	/^    a910:	03e03000 	mvneq	r3, #0$/;"	l
a914	Test/a.s	/^    a914:	e1a04000 	mov	r4, r0$/;"	l
a918	Test/a.s	/^    a918:	0580306c 	streq	r3, [r0, #108]	; 0x6c$/;"	l
a91c	Test/a.s	/^    a91c:	0a000001 	beq	a928 <__underflow+0x24>$/;"	l
a920	Test/a.s	/^    a920:	e3730001 	cmn	r3, #1$/;"	l
a924	Test/a.s	/^    a924:	1a00002a 	bne	a9d4 <__underflow+0xd0>$/;"	l
a928	Test/a.s	/^    a928:	e5943000 	ldr	r3, [r4]$/;"	l
a92c	Test/a.s	/^    a92c:	e3130b02 	tst	r3, #2048	; 0x800$/;"	l
a930	Test/a.s	/^    a930:	1a000023 	bne	a9c4 <__underflow+0xc0>$/;"	l
a934	Test/a.s	/^    a934:	e5943004 	ldr	r3, [r4, #4]$/;"	l
a938	Test/a.s	/^    a938:	e5942008 	ldr	r2, [r4, #8]$/;"	l
a93c	Test/a.s	/^    a93c:	e1530002 	cmp	r3, r2$/;"	l
a940	Test/a.s	/^    a940:	3a00001d 	bcc	a9bc <__underflow+0xb8>$/;"	l
a944	Test/a.s	/^    a944:	e5943000 	ldr	r3, [r4]$/;"	l
a948	Test/a.s	/^    a948:	e3130c01 	tst	r3, #256	; 0x100$/;"	l
a94c	Test/a.s	/^    a94c:	1a00000c 	bne	a984 <__underflow+0x80>$/;"	l
a950	Test/a.s	/^    a950:	e5943030 	ldr	r3, [r4, #48]	; 0x30$/;"	l
a954	Test/a.s	/^    a954:	e3530000 	cmp	r3, #0$/;"	l
a958	Test/a.s	/^    a958:	0a00001f 	beq	a9dc <__underflow+0xd8>$/;"	l
a95c	Test/a.s	/^    a95c:	e1a00004 	mov	r0, r4$/;"	l
a960	Test/a.s	/^    a960:	e5941008 	ldr	r1, [r4, #8]$/;"	l
a964	Test/a.s	/^    a964:	ebfffdae 	bl	a024 <save_for_backup>$/;"	l
a968	Test/a.s	/^    a968:	e3500000 	cmp	r0, #0$/;"	l
a96c	Test/a.s	/^    a96c:	1a000018 	bne	a9d4 <__underflow+0xd0>$/;"	l
a970	Test/a.s	/^    a970:	e5943098 	ldr	r3, [r4, #152]	; 0x98$/;"	l
a974	Test/a.s	/^    a974:	e1a00004 	mov	r0, r4$/;"	l
a978	Test/a.s	/^    a978:	e5933010 	ldr	r3, [r3, #16]$/;"	l
a97c	Test/a.s	/^    a97c:	e12fff33 	blx	r3$/;"	l
a980	Test/a.s	/^    a980:	e8bd8010 	pop	{r4, pc}$/;"	l
a984	Test/a.s	/^    a984:	e5941024 	ldr	r1, [r4, #36]	; 0x24$/;"	l
a988	Test/a.s	/^    a988:	e594002c 	ldr	r0, [r4, #44]	; 0x2c$/;"	l
a98c	Test/a.s	/^    a98c:	e594c00c 	ldr	ip, [r4, #12]$/;"	l
a990	Test/a.s	/^    a990:	e3c33c01 	bic	r3, r3, #256	; 0x100$/;"	l
a994	Test/a.s	/^    a994:	e1500001 	cmp	r0, r1$/;"	l
a998	Test/a.s	/^    a998:	e5843000 	str	r3, [r4]$/;"	l
a99c	Test/a.s	/^    a99c:	e5840008 	str	r0, [r4, #8]$/;"	l
a9a0	Test/a.s	/^    a9a0:	e584202c 	str	r2, [r4, #44]	; 0x2c$/;"	l
a9a4	Test/a.s	/^    a9a4:	e5841004 	str	r1, [r4, #4]$/;"	l
a9a8	Test/a.s	/^    a9a8:	e584100c 	str	r1, [r4, #12]$/;"	l
a9ac	Test/a.s	/^    a9ac:	e584c024 	str	ip, [r4, #36]	; 0x24$/;"	l
a9b0	Test/a.s	/^    a9b0:	9affffe6 	bls	a950 <__underflow+0x4c>$/;"	l
a9b4	Test/a.s	/^    a9b4:	e5d10000 	ldrb	r0, [r1]$/;"	l
a9b8	Test/a.s	/^    a9b8:	e8bd8010 	pop	{r4, pc}$/;"	l
a9bc	Test/a.s	/^    a9bc:	e5d30000 	ldrb	r0, [r3]$/;"	l
a9c0	Test/a.s	/^    a9c0:	e8bd8010 	pop	{r4, pc}$/;"	l
a9c4	Test/a.s	/^    a9c4:	e1a00004 	mov	r0, r4$/;"	l
a9c8	Test/a.s	/^    a9c8:	ebffff8d 	bl	a804 <_IO_switch_to_get_mode>$/;"	l
a9cc	Test/a.s	/^    a9cc:	e3700001 	cmn	r0, #1$/;"	l
a9d0	Test/a.s	/^    a9d0:	1affffd7 	bne	a934 <__underflow+0x30>$/;"	l
a9d4	Test/a.s	/^    a9d4:	e3e00000 	mvn	r0, #0$/;"	l
a9d8	Test/a.s	/^    a9d8:	e8bd8010 	pop	{r4, pc}$/;"	l
a9dc	Test/a.s	/^    a9dc:	e5943024 	ldr	r3, [r4, #36]	; 0x24$/;"	l
a9e0	Test/a.s	/^    a9e0:	e3530000 	cmp	r3, #0$/;"	l
a9e4	Test/a.s	/^    a9e4:	0affffe1 	beq	a970 <__underflow+0x6c>$/;"	l
a9e8	Test/a.s	/^    a9e8:	e1a00004 	mov	r0, r4$/;"	l
a9ec	Test/a.s	/^    a9ec:	ebffffa3 	bl	a880 <_IO_free_backup_area>$/;"	l
a9f0	Test/a.s	/^    a9f0:	eaffffde 	b	a970 <__underflow+0x6c>$/;"	l
a9f4	Test/a.s	/^    a9f4:	e590306c 	ldr	r3, [r0, #108]	; 0x6c$/;"	l
a9f8	Test/a.s	/^    a9f8:	e92d4010 	push	{r4, lr}$/;"	l
a9fc	Test/a.s	/^    a9fc:	e3530000 	cmp	r3, #0$/;"	l
aa00	Test/a.s	/^    aa00:	03e03000 	mvneq	r3, #0$/;"	l
aa04	Test/a.s	/^    aa04:	e1a04000 	mov	r4, r0$/;"	l
aa08	Test/a.s	/^    aa08:	0580306c 	streq	r3, [r0, #108]	; 0x6c$/;"	l
aa0c	Test/a.s	/^    aa0c:	0a000001 	beq	aa18 <__uflow+0x24>$/;"	l
aa10	Test/a.s	/^    aa10:	e3730001 	cmn	r3, #1$/;"	l
aa14	Test/a.s	/^    aa14:	1a00002c 	bne	aacc <__uflow+0xd8>$/;"	l
aa18	Test/a.s	/^    aa18:	e5943000 	ldr	r3, [r4]$/;"	l
aa1c	Test/a.s	/^    aa1c:	e3130b02 	tst	r3, #2048	; 0x800$/;"	l
aa20	Test/a.s	/^    aa20:	1a000025 	bne	aabc <__uflow+0xc8>$/;"	l
aa24	Test/a.s	/^    aa24:	e5943004 	ldr	r3, [r4, #4]$/;"	l
aa28	Test/a.s	/^    aa28:	e5942008 	ldr	r2, [r4, #8]$/;"	l
aa2c	Test/a.s	/^    aa2c:	e1530002 	cmp	r3, r2$/;"	l
aa30	Test/a.s	/^    aa30:	3a00001e 	bcc	aab0 <__uflow+0xbc>$/;"	l
aa34	Test/a.s	/^    aa34:	e5943000 	ldr	r3, [r4]$/;"	l
aa38	Test/a.s	/^    aa38:	e3130c01 	tst	r3, #256	; 0x100$/;"	l
aa3c	Test/a.s	/^    aa3c:	1a00000c 	bne	aa74 <__uflow+0x80>$/;"	l
aa40	Test/a.s	/^    aa40:	e5943030 	ldr	r3, [r4, #48]	; 0x30$/;"	l
aa44	Test/a.s	/^    aa44:	e3530000 	cmp	r3, #0$/;"	l
aa48	Test/a.s	/^    aa48:	0a000021 	beq	aad4 <__uflow+0xe0>$/;"	l
aa4c	Test/a.s	/^    aa4c:	e1a00004 	mov	r0, r4$/;"	l
aa50	Test/a.s	/^    aa50:	e5941008 	ldr	r1, [r4, #8]$/;"	l
aa54	Test/a.s	/^    aa54:	ebfffd72 	bl	a024 <save_for_backup>$/;"	l
aa58	Test/a.s	/^    aa58:	e3500000 	cmp	r0, #0$/;"	l
aa5c	Test/a.s	/^    aa5c:	1a00001a 	bne	aacc <__uflow+0xd8>$/;"	l
aa60	Test/a.s	/^    aa60:	e5943098 	ldr	r3, [r4, #152]	; 0x98$/;"	l
aa64	Test/a.s	/^    aa64:	e1a00004 	mov	r0, r4$/;"	l
aa68	Test/a.s	/^    aa68:	e5933014 	ldr	r3, [r3, #20]$/;"	l
aa6c	Test/a.s	/^    aa6c:	e12fff33 	blx	r3$/;"	l
aa70	Test/a.s	/^    aa70:	e8bd8010 	pop	{r4, pc}$/;"	l
aa74	Test/a.s	/^    aa74:	e5941024 	ldr	r1, [r4, #36]	; 0x24$/;"	l
aa78	Test/a.s	/^    aa78:	e594002c 	ldr	r0, [r4, #44]	; 0x2c$/;"	l
aa7c	Test/a.s	/^    aa7c:	e594c00c 	ldr	ip, [r4, #12]$/;"	l
aa80	Test/a.s	/^    aa80:	e3c33c01 	bic	r3, r3, #256	; 0x100$/;"	l
aa84	Test/a.s	/^    aa84:	e1500001 	cmp	r0, r1$/;"	l
aa88	Test/a.s	/^    aa88:	e5843000 	str	r3, [r4]$/;"	l
aa8c	Test/a.s	/^    aa8c:	e5840008 	str	r0, [r4, #8]$/;"	l
aa90	Test/a.s	/^    aa90:	e584202c 	str	r2, [r4, #44]	; 0x2c$/;"	l
aa94	Test/a.s	/^    aa94:	e5841004 	str	r1, [r4, #4]$/;"	l
aa98	Test/a.s	/^    aa98:	e584100c 	str	r1, [r4, #12]$/;"	l
aa9c	Test/a.s	/^    aa9c:	e584c024 	str	ip, [r4, #36]	; 0x24$/;"	l
aaa0	Test/a.s	/^    aaa0:	9affffe6 	bls	aa40 <__uflow+0x4c>$/;"	l
aaa4	Test/a.s	/^    aaa4:	e4d10001 	ldrb	r0, [r1], #1$/;"	l
aaa8	Test/a.s	/^    aaa8:	e5841004 	str	r1, [r4, #4]$/;"	l
aaac	Test/a.s	/^    aaac:	e8bd8010 	pop	{r4, pc}$/;"	l
aab0	Test/a.s	/^    aab0:	e4d30001 	ldrb	r0, [r3], #1$/;"	l
aab4	Test/a.s	/^    aab4:	e5843004 	str	r3, [r4, #4]$/;"	l
aab8	Test/a.s	/^    aab8:	e8bd8010 	pop	{r4, pc}$/;"	l
aabc	Test/a.s	/^    aabc:	e1a00004 	mov	r0, r4$/;"	l
aac0	Test/a.s	/^    aac0:	ebffff4f 	bl	a804 <_IO_switch_to_get_mode>$/;"	l
aac4	Test/a.s	/^    aac4:	e3700001 	cmn	r0, #1$/;"	l
aac8	Test/a.s	/^    aac8:	1affffd5 	bne	aa24 <__uflow+0x30>$/;"	l
aacc	Test/a.s	/^    aacc:	e3e00000 	mvn	r0, #0$/;"	l
aad0	Test/a.s	/^    aad0:	e8bd8010 	pop	{r4, pc}$/;"	l
aad4	Test/a.s	/^    aad4:	e5943024 	ldr	r3, [r4, #36]	; 0x24$/;"	l
aad8	Test/a.s	/^    aad8:	e3530000 	cmp	r3, #0$/;"	l
aadc	Test/a.s	/^    aadc:	0affffdf 	beq	aa60 <__uflow+0x6c>$/;"	l
aae0	Test/a.s	/^    aae0:	e1a00004 	mov	r0, r4$/;"	l
aae4	Test/a.s	/^    aae4:	ebffff65 	bl	a880 <_IO_free_backup_area>$/;"	l
aae8	Test/a.s	/^    aae8:	eaffffdc 	b	aa60 <__uflow+0x6c>$/;"	l
aaec	Test/a.s	/^    aaec:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}$/;"	l
aaf0	Test/a.s	/^    aaf0:	e590501c 	ldr	r5, [r0, #28]$/;"	l
aaf4	Test/a.s	/^    aaf4:	e1a04000 	mov	r4, r0$/;"	l
aaf8	Test/a.s	/^    aaf8:	e3550000 	cmp	r5, #0$/;"	l
aafc	Test/a.s	/^    aafc:	e1a06001 	mov	r6, r1$/;"	l
ab00	Test/a.s	/^    ab00:	e590c000 	ldr	ip, [r0]$/;"	l
ab04	Test/a.s	/^    ab04:	e1a07002 	mov	r7, r2$/;"	l
ab08	Test/a.s	/^    ab08:	e1a08003 	mov	r8, r3$/;"	l
ab0c	Test/a.s	/^    ab0c:	0a000001 	beq	ab18 <_IO_setb+0x2c>$/;"	l
ab10	Test/a.s	/^    ab10:	e31c0001 	tst	ip, #1$/;"	l
ab14	Test/a.s	/^    ab14:	0a000006 	beq	ab34 <_IO_setb+0x48>$/;"	l
ab18	Test/a.s	/^    ab18:	e3580000 	cmp	r8, #0$/;"	l
ab1c	Test/a.s	/^    ab1c:	13ccc001 	bicne	ip, ip, #1$/;"	l
ab20	Test/a.s	/^    ab20:	038cc001 	orreq	ip, ip, #1$/;"	l
ab24	Test/a.s	/^    ab24:	e584601c 	str	r6, [r4, #28]$/;"	l
ab28	Test/a.s	/^    ab28:	e5847020 	str	r7, [r4, #32]$/;"	l
ab2c	Test/a.s	/^    ab2c:	e584c000 	str	ip, [r4]$/;"	l
ab30	Test/a.s	/^    ab30:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}$/;"	l
ab34	Test/a.s	/^    ab34:	e5901020 	ldr	r1, [r0, #32]$/;"	l
ab38	Test/a.s	/^    ab38:	e1a00005 	mov	r0, r5$/;"	l
ab3c	Test/a.s	/^    ab3c:	e0651001 	rsb	r1, r5, r1$/;"	l
ab40	Test/a.s	/^    ab40:	e2811eff 	add	r1, r1, #4080	; 0xff0$/;"	l
ab44	Test/a.s	/^    ab44:	e281100f 	add	r1, r1, #15$/;"	l
ab48	Test/a.s	/^    ab48:	e3c11eff 	bic	r1, r1, #4080	; 0xff0$/;"	l
ab4c	Test/a.s	/^    ab4c:	e3c1100f 	bic	r1, r1, #15$/;"	l
ab50	Test/a.s	/^    ab50:	eb0027b2 	bl	14a20 <__munmap>$/;"	l
ab54	Test/a.s	/^    ab54:	e594c000 	ldr	ip, [r4]$/;"	l
ab58	Test/a.s	/^    ab58:	eaffffee 	b	ab18 <_IO_setb+0x2c>$/;"	l
ab5c	Test/a.s	/^    ab5c:	e590301c 	ldr	r3, [r0, #28]$/;"	l
ab60	Test/a.s	/^    ab60:	e92d4010 	push	{r4, lr}$/;"	l
ab64	Test/a.s	/^    ab64:	e3530000 	cmp	r3, #0$/;"	l
ab68	Test/a.s	/^    ab68:	e1a04000 	mov	r4, r0$/;"	l
ab6c	Test/a.s	/^    ab6c:	18bd8010 	popne	{r4, pc}$/;"	l
ab70	Test/a.s	/^    ab70:	e5903000 	ldr	r3, [r0]$/;"	l
ab74	Test/a.s	/^    ab74:	e3130002 	tst	r3, #2$/;"	l
ab78	Test/a.s	/^    ab78:	0a000002 	beq	ab88 <_IO_doallocbuf+0x2c>$/;"	l
ab7c	Test/a.s	/^    ab7c:	e590306c 	ldr	r3, [r0, #108]	; 0x6c$/;"	l
ab80	Test/a.s	/^    ab80:	e3530000 	cmp	r3, #0$/;"	l
ab84	Test/a.s	/^    ab84:	da000005 	ble	aba0 <_IO_doallocbuf+0x44>$/;"	l
ab88	Test/a.s	/^    ab88:	e5943098 	ldr	r3, [r4, #152]	; 0x98$/;"	l
ab8c	Test/a.s	/^    ab8c:	e1a00004 	mov	r0, r4$/;"	l
ab90	Test/a.s	/^    ab90:	e5933034 	ldr	r3, [r3, #52]	; 0x34$/;"	l
ab94	Test/a.s	/^    ab94:	e12fff33 	blx	r3$/;"	l
ab98	Test/a.s	/^    ab98:	e3700001 	cmn	r0, #1$/;"	l
ab9c	Test/a.s	/^    ab9c:	18bd8010 	popne	{r4, pc}$/;"	l
aba0	Test/a.s	/^    aba0:	e1a00004 	mov	r0, r4$/;"	l
aba4	Test/a.s	/^    aba4:	e2841047 	add	r1, r4, #71	; 0x47$/;"	l
aba8	Test/a.s	/^    aba8:	e2842048 	add	r2, r4, #72	; 0x48$/;"	l
abac	Test/a.s	/^    abac:	e3a03000 	mov	r3, #0$/;"	l
abb0	Test/a.s	/^    abb0:	e8bd4010 	pop	{r4, lr}$/;"	l
abb4	Test/a.s	/^    abb4:	eaffffcc 	b	aaec <_IO_setb>$/;"	l
abb8	Test/a.s	/^    abb8:	e3e00000 	mvn	r0, #0$/;"	l
abbc	Test/a.s	/^    abbc:	e12fff1e 	bx	lr$/;"	l
abc0	Test/a.s	/^    abc0:	e5903098 	ldr	r3, [r0, #152]	; 0x98$/;"	l
abc4	Test/a.s	/^    abc4:	e92d4010 	push	{r4, lr}$/;"	l
abc8	Test/a.s	/^    abc8:	e5933010 	ldr	r3, [r3, #16]$/;"	l
abcc	Test/a.s	/^    abcc:	e1a04000 	mov	r4, r0$/;"	l
abd0	Test/a.s	/^    abd0:	e12fff33 	blx	r3$/;"	l
abd4	Test/a.s	/^    abd4:	e3700001 	cmn	r0, #1$/;"	l
abd8	Test/a.s	/^    abd8:	15943004 	ldrne	r3, [r4, #4]$/;"	l
abdc	Test/a.s	/^    abdc:	14d30001 	ldrbne	r0, [r3], #1$/;"	l
abe0	Test/a.s	/^    abe0:	15843004 	strne	r3, [r4, #4]$/;"	l
abe4	Test/a.s	/^    abe4:	e8bd8010 	pop	{r4, pc}$/;"	l
abe8	Test/a.s	/^    abe8:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}$/;"	l
abec	Test/a.s	/^    abec:	e2528000 	subs	r8, r2, #0$/;"	l
abf0	Test/a.s	/^    abf0:	e1a05000 	mov	r5, r0$/;"	l
abf4	Test/a.s	/^    abf4:	e1a07001 	mov	r7, r1$/;"	l
abf8	Test/a.s	/^    abf8:	0a000029 	beq	aca4 <_IO_default_xsputn+0xbc>$/;"	l
abfc	Test/a.s	/^    abfc:	e1a04008 	mov	r4, r8$/;"	l
ac00	Test/a.s	/^    ac00:	e5950014 	ldr	r0, [r5, #20]$/;"	l
ac04	Test/a.s	/^    ac04:	e5951018 	ldr	r1, [r5, #24]$/;"	l
ac08	Test/a.s	/^    ac08:	e1500001 	cmp	r0, r1$/;"	l
ac0c	Test/a.s	/^    ac0c:	2a000011 	bcs	ac58 <_IO_default_xsputn+0x70>$/;"	l
ac10	Test/a.s	/^    ac10:	e0601001 	rsb	r1, r0, r1$/;"	l
ac14	Test/a.s	/^    ac14:	e1540001 	cmp	r4, r1$/;"	l
ac18	Test/a.s	/^    ac18:	31a0a004 	movcc	sl, r4$/;"	l
ac1c	Test/a.s	/^    ac1c:	21a0a001 	movcs	sl, r1$/;"	l
ac20	Test/a.s	/^    ac20:	e35a0014 	cmp	sl, #20$/;"	l
ac24	Test/a.s	/^    ac24:	8a000016 	bhi	ac84 <_IO_default_xsputn+0x9c>$/;"	l
ac28	Test/a.s	/^    ac28:	e35a0000 	cmp	sl, #0$/;"	l
ac2c	Test/a.s	/^    ac2c:	0a000008 	beq	ac54 <_IO_default_xsputn+0x6c>$/;"	l
ac30	Test/a.s	/^    ac30:	e287c001 	add	ip, r7, #1$/;"	l
ac34	Test/a.s	/^    ac34:	e080200a 	add	r2, r0, sl$/;"	l
ac38	Test/a.s	/^    ac38:	e55c6001 	ldrb	r6, [ip, #-1]$/;"	l
ac3c	Test/a.s	/^    ac3c:	e28cc001 	add	ip, ip, #1$/;"	l
ac40	Test/a.s	/^    ac40:	e4c06001 	strb	r6, [r0], #1$/;"	l
ac44	Test/a.s	/^    ac44:	e1500002 	cmp	r0, r2$/;"	l
ac48	Test/a.s	/^    ac48:	1afffffa 	bne	ac38 <_IO_default_xsputn+0x50>$/;"	l
ac4c	Test/a.s	/^    ac4c:	e087700a 	add	r7, r7, sl$/;"	l
ac50	Test/a.s	/^    ac50:	e5850014 	str	r0, [r5, #20]$/;"	l
ac54	Test/a.s	/^    ac54:	e06a4004 	rsb	r4, sl, r4$/;"	l
ac58	Test/a.s	/^    ac58:	e3540000 	cmp	r4, #0$/;"	l
ac5c	Test/a.s	/^    ac5c:	0a00000e 	beq	ac9c <_IO_default_xsputn+0xb4>$/;"	l
ac60	Test/a.s	/^    ac60:	e5953098 	ldr	r3, [r5, #152]	; 0x98$/;"	l
ac64	Test/a.s	/^    ac64:	e1a00005 	mov	r0, r5$/;"	l
ac68	Test/a.s	/^    ac68:	e593300c 	ldr	r3, [r3, #12]$/;"	l
ac6c	Test/a.s	/^    ac6c:	e4d71001 	ldrb	r1, [r7], #1$/;"	l
ac70	Test/a.s	/^    ac70:	e12fff33 	blx	r3$/;"	l
ac74	Test/a.s	/^    ac74:	e3700001 	cmn	r0, #1$/;"	l
ac78	Test/a.s	/^    ac78:	0a000007 	beq	ac9c <_IO_default_xsputn+0xb4>$/;"	l
ac7c	Test/a.s	/^    ac7c:	e2444001 	sub	r4, r4, #1$/;"	l
ac80	Test/a.s	/^    ac80:	eaffffde 	b	ac00 <_IO_default_xsputn+0x18>$/;"	l
ac84	Test/a.s	/^    ac84:	e1a01007 	mov	r1, r7$/;"	l
ac88	Test/a.s	/^    ac88:	e1a0200a 	mov	r2, sl$/;"	l
ac8c	Test/a.s	/^    ac8c:	eb0021f3 	bl	13460 <__mempcpy>$/;"	l
ac90	Test/a.s	/^    ac90:	e087700a 	add	r7, r7, sl$/;"	l
ac94	Test/a.s	/^    ac94:	e5850014 	str	r0, [r5, #20]$/;"	l
ac98	Test/a.s	/^    ac98:	eaffffed 	b	ac54 <_IO_default_xsputn+0x6c>$/;"	l
ac9c	Test/a.s	/^    ac9c:	e0640008 	rsb	r0, r4, r8$/;"	l
aca0	Test/a.s	/^    aca0:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}$/;"	l
aca4	Test/a.s	/^    aca4:	e1a00008 	mov	r0, r8$/;"	l
aca8	Test/a.s	/^    aca8:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}$/;"	l
acac	Test/a.s	/^    acac:	e92d4008 	push	{r3, lr}$/;"	l
acb0	Test/a.s	/^    acb0:	e5903098 	ldr	r3, [r0, #152]	; 0x98$/;"	l
acb4	Test/a.s	/^    acb4:	e5933020 	ldr	r3, [r3, #32]$/;"	l
acb8	Test/a.s	/^    acb8:	e12fff33 	blx	r3$/;"	l
acbc	Test/a.s	/^    acbc:	e8bd8008 	pop	{r3, pc}$/;"	l
acc0	Test/a.s	/^    acc0:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}$/;"	l
acc4	Test/a.s	/^    acc4:	e1a0a002 	mov	sl, r2$/;"	l
acc8	Test/a.s	/^    acc8:	e1a06000 	mov	r6, r0$/;"	l
accc	Test/a.s	/^    accc:	e1a08001 	mov	r8, r1$/;"	l
acd0	Test/a.s	/^    acd0:	e1a07002 	mov	r7, r2$/;"	l
acd4	Test/a.s	/^    acd4:	e9960012 	ldmib	r6, {r1, r4}$/;"	l
acd8	Test/a.s	/^    acd8:	e1510004 	cmp	r1, r4$/;"	l
acdc	Test/a.s	/^    acdc:	2a000010 	bcs	ad24 <_IO_default_xsgetn+0x64>$/;"	l
ace0	Test/a.s	/^    ace0:	e0614004 	rsb	r4, r1, r4$/;"	l
ace4	Test/a.s	/^    ace4:	e1570004 	cmp	r7, r4$/;"	l
ace8	Test/a.s	/^    ace8:	31a04007 	movcc	r4, r7$/;"	l
acec	Test/a.s	/^    acec:	e3540014 	cmp	r4, #20$/;"	l
acf0	Test/a.s	/^    acf0:	8a000013 	bhi	ad44 <_IO_default_xsgetn+0x84>$/;"	l
acf4	Test/a.s	/^    acf4:	e3540000 	cmp	r4, #0$/;"	l
acf8	Test/a.s	/^    acf8:	0a000008 	beq	ad20 <_IO_default_xsgetn+0x60>$/;"	l
acfc	Test/a.s	/^    acfc:	e3a03000 	mov	r3, #0$/;"	l
ad00	Test/a.s	/^    ad00:	e7d15003 	ldrb	r5, [r1, r3]$/;"	l
ad04	Test/a.s	/^    ad04:	e7c85003 	strb	r5, [r8, r3]$/;"	l
ad08	Test/a.s	/^    ad08:	e2833001 	add	r3, r3, #1$/;"	l
ad0c	Test/a.s	/^    ad0c:	e1530004 	cmp	r3, r4$/;"	l
ad10	Test/a.s	/^    ad10:	1afffffa 	bne	ad00 <_IO_default_xsgetn+0x40>$/;"	l
ad14	Test/a.s	/^    ad14:	e081c004 	add	ip, r1, r4$/;"	l
ad18	Test/a.s	/^    ad18:	e586c004 	str	ip, [r6, #4]$/;"	l
ad1c	Test/a.s	/^    ad1c:	e0888004 	add	r8, r8, r4$/;"	l
ad20	Test/a.s	/^    ad20:	e0647007 	rsb	r7, r4, r7$/;"	l
ad24	Test/a.s	/^    ad24:	e3570000 	cmp	r7, #0$/;"	l
ad28	Test/a.s	/^    ad28:	0a000003 	beq	ad3c <_IO_default_xsgetn+0x7c>$/;"	l
ad2c	Test/a.s	/^    ad2c:	e1a00006 	mov	r0, r6$/;"	l
ad30	Test/a.s	/^    ad30:	ebfffef3 	bl	a904 <__underflow>$/;"	l
ad34	Test/a.s	/^    ad34:	e3700001 	cmn	r0, #1$/;"	l
ad38	Test/a.s	/^    ad38:	1affffe5 	bne	acd4 <_IO_default_xsgetn+0x14>$/;"	l
ad3c	Test/a.s	/^    ad3c:	e067000a 	rsb	r0, r7, sl$/;"	l
ad40	Test/a.s	/^    ad40:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}$/;"	l
ad44	Test/a.s	/^    ad44:	e1a00008 	mov	r0, r8$/;"	l
ad48	Test/a.s	/^    ad48:	e1a02004 	mov	r2, r4$/;"	l
ad4c	Test/a.s	/^    ad4c:	eb0021c3 	bl	13460 <__mempcpy>$/;"	l
ad50	Test/a.s	/^    ad50:	e5963004 	ldr	r3, [r6, #4]$/;"	l
ad54	Test/a.s	/^    ad54:	e1a08000 	mov	r8, r0$/;"	l
ad58	Test/a.s	/^    ad58:	e0833004 	add	r3, r3, r4$/;"	l
ad5c	Test/a.s	/^    ad5c:	e5863004 	str	r3, [r6, #4]$/;"	l
ad60	Test/a.s	/^    ad60:	eaffffee 	b	ad20 <_IO_default_xsgetn+0x60>$/;"	l
ad64	Test/a.s	/^    ad64:	e5903098 	ldr	r3, [r0, #152]	; 0x98$/;"	l
ad68	Test/a.s	/^    ad68:	e92d4070 	push	{r4, r5, r6, lr}$/;"	l
ad6c	Test/a.s	/^    ad6c:	e5933030 	ldr	r3, [r3, #48]	; 0x30$/;"	l
ad70	Test/a.s	/^    ad70:	e1a04000 	mov	r4, r0$/;"	l
ad74	Test/a.s	/^    ad74:	e1a06001 	mov	r6, r1$/;"	l
ad78	Test/a.s	/^    ad78:	e1a05002 	mov	r5, r2$/;"	l
ad7c	Test/a.s	/^    ad7c:	e12fff33 	blx	r3$/;"	l
ad80	Test/a.s	/^    ad80:	e3700001 	cmn	r0, #1$/;"	l
ad84	Test/a.s	/^    ad84:	0a00001d 	beq	ae00 <_IO_default_setbuf+0x9c>$/;"	l
ad88	Test/a.s	/^    ad88:	e3560000 	cmp	r6, #0$/;"	l
ad8c	Test/a.s	/^    ad8c:	13550000 	cmpne	r5, #0$/;"	l
ad90	Test/a.s	/^    ad90:	13a03000 	movne	r3, #0$/;"	l
ad94	Test/a.s	/^    ad94:	03a03001 	moveq	r3, #1$/;"	l
ad98	Test/a.s	/^    ad98:	0a00000f 	beq	addc <_IO_default_setbuf+0x78>$/;"	l
ad9c	Test/a.s	/^    ad9c:	e5940000 	ldr	r0, [r4]$/;"	l
ada0	Test/a.s	/^    ada0:	e1a01006 	mov	r1, r6$/;"	l
ada4	Test/a.s	/^    ada4:	e3c00002 	bic	r0, r0, #2$/;"	l
ada8	Test/a.s	/^    ada8:	e5840000 	str	r0, [r4]$/;"	l
adac	Test/a.s	/^    adac:	e0862005 	add	r2, r6, r5$/;"	l
adb0	Test/a.s	/^    adb0:	e1a00004 	mov	r0, r4$/;"	l
adb4	Test/a.s	/^    adb4:	ebffff4c 	bl	aaec <_IO_setb>$/;"	l
adb8	Test/a.s	/^    adb8:	e3a03000 	mov	r3, #0$/;"	l
adbc	Test/a.s	/^    adbc:	e5843018 	str	r3, [r4, #24]$/;"	l
adc0	Test/a.s	/^    adc0:	e5843014 	str	r3, [r4, #20]$/;"	l
adc4	Test/a.s	/^    adc4:	e5843010 	str	r3, [r4, #16]$/;"	l
adc8	Test/a.s	/^    adc8:	e5843008 	str	r3, [r4, #8]$/;"	l
adcc	Test/a.s	/^    adcc:	e5843004 	str	r3, [r4, #4]$/;"	l
add	Test/can_linking_can_work/output.s	/^add fp, sp, #-4$/;"	l
add	Test/can_linking_can_work/output.s	/^add r4, r4, r5$/;"	l
add	Test/can_linking_can_work/output.s	/^add sp, sp, #-8$/;"	l
add	Test/can_linking_can_work/output.s	/^add sp, sp, #4$/;"	l
add	Test/factotio_mips.s	/^add $fp, $sp, -4$/;"	l
add	Test/factotio_mips.s	/^add $sp, $fp, 4$/;"	l
add	Test/factotio_mips.s	/^add $sp, $sp, -8$/;"	l
add	Test/io_pro_eiplog.S	/^add fp, sp, #-4$/;"	l
add	Test/io_pro_eiplog.S	/^add sp, sp, #-8$/;"	l
add	Test/io_pro_eiplog.S	/^add sp, sp, #4$/;"	l
add	Test/output.s	/^add fp, sp, #-4$/;"	l
add	Test/output.s	/^add r4, r4, r5$/;"	l
add	Test/output.s	/^add sp, sp, #-8$/;"	l
add	Test/output.s	/^add sp, sp, #4$/;"	l
add0	Test/a.s	/^    add0:	e584300c 	str	r3, [r4, #12]$/;"	l
add4	Test/a.s	/^    add4:	e1a00004 	mov	r0, r4$/;"	l
add8	Test/a.s	/^    add8:	e8bd8070 	pop	{r4, r5, r6, pc}$/;"	l
add_op	parser.y	/^add_op		: OP_PLUS$/;"	l
addc	Test/a.s	/^    addc:	e5943000 	ldr	r3, [r4]$/;"	l
ade0	Test/a.s	/^    ade0:	e1a01004 	mov	r1, r4$/;"	l
ade4	Test/a.s	/^    ade4:	e3833002 	orr	r3, r3, #2$/;"	l
ade8	Test/a.s	/^    ade8:	e4813047 	str	r3, [r1], #71	; 0x47$/;"	l
adec	Test/a.s	/^    adec:	e1a00004 	mov	r0, r4$/;"	l
adf0	Test/a.s	/^    adf0:	e2842048 	add	r2, r4, #72	; 0x48$/;"	l
adf4	Test/a.s	/^    adf4:	e3a03000 	mov	r3, #0$/;"	l
adf8	Test/a.s	/^    adf8:	ebffff3b 	bl	aaec <_IO_setb>$/;"	l
adfc	Test/a.s	/^    adfc:	eaffffed 	b	adb8 <_IO_default_setbuf+0x54>$/;"	l
ae00	Test/a.s	/^    ae00:	e3a04000 	mov	r4, #0$/;"	l
ae04	Test/a.s	/^    ae04:	eafffff2 	b	add4 <_IO_default_setbuf+0x70>$/;"	l
ae08	Test/a.s	/^    ae08:	e52de004 	push	{lr}		; (str lr, [sp, #-4]!)$/;"	l
ae0c	Test/a.s	/^    ae0c:	e24dd00c 	sub	sp, sp, #12$/;"	l
ae10	Test/a.s	/^    ae10:	e59de010 	ldr	lr, [sp, #16]$/;"	l
ae14	Test/a.s	/^    ae14:	e3a0c000 	mov	ip, #0$/;"	l
ae18	Test/a.s	/^    ae18:	e5901098 	ldr	r1, [r0, #152]	; 0x98$/;"	l
ae1c	Test/a.s	/^    ae1c:	e88d5000 	stm	sp, {ip, lr}$/;"	l
ae20	Test/a.s	/^    ae20:	e5911024 	ldr	r1, [r1, #36]	; 0x24$/;"	l
ae24	Test/a.s	/^    ae24:	e12fff31 	blx	r1$/;"	l
ae28	Test/a.s	/^    ae28:	e28dd00c 	add	sp, sp, #12$/;"	l
ae2c	Test/a.s	/^    ae2c:	e8bd8000 	ldmfd	sp!, {pc}$/;"	l
ae30	Test/a.s	/^    ae30:	e92d4010 	push	{r4, lr}$/;"	l
ae34	Test/a.s	/^    ae34:	e3a03000 	mov	r3, #0$/;"	l
ae38	Test/a.s	/^    ae38:	e24dd008 	sub	sp, sp, #8$/;"	l
ae3c	Test/a.s	/^    ae3c:	e3e02000 	mvn	r2, #0$/;"	l
ae40	Test/a.s	/^    ae40:	e88d000c 	stm	sp, {r2, r3}$/;"	l
ae44	Test/a.s	/^    ae44:	e1a04000 	mov	r4, r0$/;"	l
ae48	Test/a.s	/^    ae48:	e3a01a02 	mov	r1, #8192	; 0x2000$/;"	l
ae4c	Test/a.s	/^    ae4c:	e1a00003 	mov	r0, r3$/;"	l
ae50	Test/a.s	/^    ae50:	e3a02003 	mov	r2, #3$/;"	l
ae54	Test/a.s	/^    ae54:	e3a03022 	mov	r3, #34	; 0x22$/;"	l
ae58	Test/a.s	/^    ae58:	eb0026dc 	bl	149d0 <__mmap>$/;"	l
ae5c	Test/a.s	/^    ae5c:	e3700001 	cmn	r0, #1$/;"	l
ae60	Test/a.s	/^    ae60:	0a000005 	beq	ae7c <_IO_default_doallocate+0x4c>$/;"	l
ae64	Test/a.s	/^    ae64:	e1a01000 	mov	r1, r0$/;"	l
ae68	Test/a.s	/^    ae68:	e2812a02 	add	r2, r1, #8192	; 0x2000$/;"	l
ae6c	Test/a.s	/^    ae6c:	e1a00004 	mov	r0, r4$/;"	l
ae70	Test/a.s	/^    ae70:	e3a03001 	mov	r3, #1$/;"	l
ae74	Test/a.s	/^    ae74:	ebffff1c 	bl	aaec <_IO_setb>$/;"	l
ae78	Test/a.s	/^    ae78:	e3a00001 	mov	r0, #1$/;"	l
ae7c	Test/a.s	/^    ae7c:	e28dd008 	add	sp, sp, #8$/;"	l
ae80	Test/a.s	/^    ae80:	e8bd8010 	pop	{r4, pc}$/;"	l
ae84	Test/a.s	/^    ae84:	e5902048 	ldr	r2, [r0, #72]	; 0x48$/;"	l
ae88	Test/a.s	/^    ae88:	e38114fb 	orr	r1, r1, #-83886080	; 0xfb000000$/;"	l
ae8c	Test/a.s	/^    ae8c:	e3a03000 	mov	r3, #0$/;"	l
ae90	Test/a.s	/^    ae90:	e3520000 	cmp	r2, #0$/;"	l
ae94	Test/a.s	/^    ae94:	e38118ad 	orr	r1, r1, #11337728	; 0xad0000$/;"	l
ae98	Test/a.s	/^    ae98:	e5801000 	str	r1, [r0]$/;"	l
ae9c	Test/a.s	/^    ae9c:	e580303c 	str	r3, [r0, #60]	; 0x3c$/;"	l
aea0	Test/a.s	/^    aea0:	e580301c 	str	r3, [r0, #28]$/;"	l
aea4	Test/a.s	/^    aea4:	e5803020 	str	r3, [r0, #32]$/;"	l
aea8	Test/a.s	/^    aea8:	e580300c 	str	r3, [r0, #12]$/;"	l
aeac	Test/a.s	/^    aeac:	e5803004 	str	r3, [r0, #4]$/;"	l
aeb0	Test/a.s	/^    aeb0:	e5803008 	str	r3, [r0, #8]$/;"	l
aeb4	Test/a.s	/^    aeb4:	e5803010 	str	r3, [r0, #16]$/;"	l
aeb8	Test/a.s	/^    aeb8:	e5803014 	str	r3, [r0, #20]$/;"	l
aebc	Test/a.s	/^    aebc:	e5803018 	str	r3, [r0, #24]$/;"	l
aec0	Test/a.s	/^    aec0:	e5803034 	str	r3, [r0, #52]	; 0x34$/;"	l
aec4	Test/a.s	/^    aec4:	e5803024 	str	r3, [r0, #36]	; 0x24$/;"	l
aec8	Test/a.s	/^    aec8:	e5803028 	str	r3, [r0, #40]	; 0x28$/;"	l
aecc	Test/a.s	/^    aecc:	e580302c 	str	r3, [r0, #44]	; 0x2c$/;"	l
aed0	Test/a.s	/^    aed0:	e5803030 	str	r3, [r0, #48]	; 0x30$/;"	l
aed4	Test/a.s	/^    aed4:	e1c034b4 	strh	r3, [r0, #68]	; 0x44$/;"	l
aed8	Test/a.s	/^    aed8:	15823000 	strne	r3, [r2]$/;"	l
aedc	Test/a.s	/^    aedc:	15823004 	strne	r3, [r2, #4]$/;"	l
aee0	Test/a.s	/^    aee0:	15823008 	strne	r3, [r2, #8]$/;"	l
aee4	Test/a.s	/^    aee4:	e12fff1e 	bx	lr$/;"	l
aee8	Test/a.s	/^    aee8:	e92d4010 	push	{r4, lr}$/;"	l
aeec	Test/a.s	/^    aeec:	e1a04000 	mov	r4, r0$/;"	l
aef0	Test/a.s	/^    aef0:	ebffffe3 	bl	ae84 <_IO_old_init>$/;"	l
aef4	Test/a.s	/^    aef4:	e3e02000 	mvn	r2, #0$/;"	l
aef8	Test/a.s	/^    aef8:	e3a03000 	mov	r3, #0$/;"	l
aefc	Test/a.s	/^    aefc:	e584206c 	str	r2, [r4, #108]	; 0x6c$/;"	l
af00	Test/a.s	/^    af00:	e5843060 	str	r3, [r4, #96]	; 0x60$/;"	l
af04	Test/a.s	/^    af04:	e8bd8010 	pop	{r4, pc}$/;"	l
af08	Test/a.s	/^    af08:	e92d4070 	push	{r4, r5, r6, lr}$/;"	l
af0c	Test/a.s	/^    af0c:	e1a06002 	mov	r6, r2$/;"	l
af10	Test/a.s	/^    af10:	e1a05000 	mov	r5, r0$/;"	l
af14	Test/a.s	/^    af14:	e1a04003 	mov	r4, r3$/;"	l
af18	Test/a.s	/^    af18:	ebffffd9 	bl	ae84 <_IO_old_init>$/;"	l
af1c	Test/a.s	/^    af1c:	e3560000 	cmp	r6, #0$/;"	l
af20	Test/a.s	/^    af20:	e585606c 	str	r6, [r5, #108]	; 0x6c$/;"	l
af24	Test/a.s	/^    af24:	ba00000e 	blt	af64 <_IO_no_init+0x5c>$/;"	l
af28	Test/a.s	/^    af28:	e59d2010 	ldr	r2, [sp, #16]$/;"	l
af2c	Test/a.s	/^    af2c:	e3a03000 	mov	r3, #0$/;"	l
af30	Test/a.s	/^    af30:	e585405c 	str	r4, [r5, #92]	; 0x5c$/;"	l
af34	Test/a.s	/^    af34:	e58420b8 	str	r2, [r4, #184]	; 0xb8$/;"	l
af38	Test/a.s	/^    af38:	e5843018 	str	r3, [r4, #24]$/;"	l
af3c	Test/a.s	/^    af3c:	e584301c 	str	r3, [r4, #28]$/;"	l
af40	Test/a.s	/^    af40:	e5843008 	str	r3, [r4, #8]$/;"	l
af44	Test/a.s	/^    af44:	e5843000 	str	r3, [r4]$/;"	l
af48	Test/a.s	/^    af48:	e5843004 	str	r3, [r4, #4]$/;"	l
af4c	Test/a.s	/^    af4c:	e584300c 	str	r3, [r4, #12]$/;"	l
af50	Test/a.s	/^    af50:	e5843010 	str	r3, [r4, #16]$/;"	l
af54	Test/a.s	/^    af54:	e5843014 	str	r3, [r4, #20]$/;"	l
af58	Test/a.s	/^    af58:	e5843020 	str	r3, [r4, #32]$/;"	l
af5c	Test/a.s	/^    af5c:	e5843024 	str	r3, [r4, #36]	; 0x24$/;"	l
af60	Test/a.s	/^    af60:	e5843028 	str	r3, [r4, #40]	; 0x28$/;"	l
af64	Test/a.s	/^    af64:	e3a03000 	mov	r3, #0$/;"	l
af68	Test/a.s	/^    af68:	e5853060 	str	r3, [r5, #96]	; 0x60$/;"	l
af6c	Test/a.s	/^    af6c:	e8bd8070 	pop	{r4, r5, r6, pc}$/;"	l
af70	Test/a.s	/^    af70:	e3a00000 	mov	r0, #0$/;"	l
af74	Test/a.s	/^    af74:	e12fff1e 	bx	lr$/;"	l
af78	Test/a.s	/^    af78:	e590201c 	ldr	r2, [r0, #28]$/;"	l
af7c	Test/a.s	/^    af7c:	e92d4038 	push	{r3, r4, r5, lr}$/;"	l
af80	Test/a.s	/^    af80:	e3520000 	cmp	r2, #0$/;"	l
af84	Test/a.s	/^    af84:	e1a04000 	mov	r4, r0$/;"	l
af88	Test/a.s	/^    af88:	0a000002 	beq	af98 <_IO_default_finish+0x20>$/;"	l
af8c	Test/a.s	/^    af8c:	e5903000 	ldr	r3, [r0]$/;"	l
af90	Test/a.s	/^    af90:	e2135001 	ands	r5, r3, #1$/;"	l
af94	Test/a.s	/^    af94:	0a000010 	beq	afdc <_IO_default_finish+0x64>$/;"	l
af98	Test/a.s	/^    af98:	e5943030 	ldr	r3, [r4, #48]	; 0x30$/;"	l
af9c	Test/a.s	/^    af9c:	e3530000 	cmp	r3, #0$/;"	l
afa0	Test/a.s	/^    afa0:	13a02000 	movne	r2, #0$/;"	l
afa4	Test/a.s	/^    afa4:	0a000003 	beq	afb8 <_IO_default_finish+0x40>$/;"	l
afa8	Test/a.s	/^    afa8:	e5832004 	str	r2, [r3, #4]$/;"	l
afac	Test/a.s	/^    afac:	e5933000 	ldr	r3, [r3]$/;"	l
afb0	Test/a.s	/^    afb0:	e3530000 	cmp	r3, #0$/;"	l
afb4	Test/a.s	/^    afb4:	1afffffb 	bne	afa8 <_IO_default_finish+0x30>$/;"	l
afb8	Test/a.s	/^    afb8:	e5940024 	ldr	r0, [r4, #36]	; 0x24$/;"	l
afbc	Test/a.s	/^    afbc:	e3500000 	cmp	r0, #0$/;"	l
afc0	Test/a.s	/^    afc0:	0a000002 	beq	afd0 <_IO_default_finish+0x58>$/;"	l
afc4	Test/a.s	/^    afc4:	eb0016fd 	bl	10bc0 <__cfree>$/;"	l
afc8	Test/a.s	/^    afc8:	e3a03000 	mov	r3, #0$/;"	l
afcc	Test/a.s	/^    afcc:	e5843024 	str	r3, [r4, #36]	; 0x24$/;"	l
afd0	Test/a.s	/^    afd0:	e1a00004 	mov	r0, r4$/;"	l
afd4	Test/a.s	/^    afd4:	e8bd4038 	pop	{r3, r4, r5, lr}$/;"	l
afd8	Test/a.s	/^    afd8:	eafffc7e 	b	a1d8 <_IO_un_link>$/;"	l
afdc	Test/a.s	/^    afdc:	e5901020 	ldr	r1, [r0, #32]$/;"	l
afe0	Test/a.s	/^    afe0:	e1a00002 	mov	r0, r2$/;"	l
afe4	Test/a.s	/^    afe4:	e0621001 	rsb	r1, r2, r1$/;"	l
afe8	Test/a.s	/^    afe8:	e2811eff 	add	r1, r1, #4080	; 0xff0$/;"	l
afec	Test/a.s	/^    afec:	e281100f 	add	r1, r1, #15$/;"	l
aff0	Test/a.s	/^    aff0:	e3c11eff 	bic	r1, r1, #4080	; 0xff0$/;"	l
aff4	Test/a.s	/^    aff4:	e3c1100f 	bic	r1, r1, #15$/;"	l
aff8	Test/a.s	/^    aff8:	eb002688 	bl	14a20 <__munmap>$/;"	l
affc	Test/a.s	/^    affc:	e5845020 	str	r5, [r4, #32]$/;"	l
alloca	parser.tab.c	400;"	d	file:
and	Test/output.s	/^and r4, r4, r5$/;"	l
arrayProperties	nodeAttribute.h	/^        ArrayProperties arrayProperties;$/;"	m	union:DataTypeDescriptor::__anon2
arrayProperties	symbolTable.h	/^        ArrayProperties arrayProperties;\/\/kind: ARRAY_TYPE_DESCRIPTOR$/;"	m	union:TypeDescriptor::__anon3
assign_expr	parser.y	/^assign_expr     : var_ref OP_ASSIGN relop_expr $/;"	l
assign_expr_list	parser.y	/^assign_expr_list : nonempty_assign_expr_list $/;"	l
attr	symbolTable.h	/^    } attr;$/;"	m	struct:SymbolAttribute	typeref:union:SymbolAttribute::__anon4
attribute	symbolTable.h	/^    SymbolAttribute* attribute;$/;"	m	struct:SymbolTableEntry
attributeKind	symbolTable.h	/^    SymbolAttributeKind attributeKind;$/;"	m	struct:SymbolAttribute
b	Test/can_linking_can_work/output.s	/^b _end_MAIN$/;"	l
b	Test/output.s	/^b _end_MAIN$/;"	l
b	Test/output.s	/^b _ifExitLabel_11$/;"	l
b	Test/output.s	/^b _ifExitLabel_16$/;"	l
b	Test/output.s	/^b _ifExitLabel_19$/;"	l
b	Test/output.s	/^b _ifExitLabel_2$/;"	l
b	Test/output.s	/^b _ifExitLabel_22$/;"	l
b	Test/output.s	/^b _ifExitLabel_25$/;"	l
b	Test/output.s	/^b _ifExitLabel_27$/;"	l
b	Test/output.s	/^b _ifExitLabel_35$/;"	l
b	Test/output.s	/^b _ifExitLabel_5$/;"	l
b	Test/output.s	/^b _ifExitLabel_8$/;"	l
b	Test/output.s	/^b _whileTestLabel_30$/;"	l
b000	Test/a.s	/^    b000:	e584501c 	str	r5, [r4, #28]$/;"	l
b004	Test/a.s	/^    b004:	eaffffe3 	b	af98 <_IO_default_finish+0x20>$/;"	l
b008	Test/a.s	/^    b008:	e3e00000 	mvn	r0, #0$/;"	l
b00c	Test/a.s	/^    b00c:	e3e01000 	mvn	r1, #0$/;"	l
b010	Test/a.s	/^    b010:	e12fff1e 	bx	lr$/;"	l
b014	Test/a.s	/^    b014:	e5903004 	ldr	r3, [r0, #4]$/;"	l
b018	Test/a.s	/^    b018:	e590200c 	ldr	r2, [r0, #12]$/;"	l
b01c	Test/a.s	/^    b01c:	e92d4010 	push	{r4, lr}$/;"	l
b020	Test/a.s	/^    b020:	e1530002 	cmp	r3, r2$/;"	l
b024	Test/a.s	/^    b024:	e1a04000 	mov	r4, r0$/;"	l
b028	Test/a.s	/^    b028:	9a000005 	bls	b044 <_IO_sputbackc+0x30>$/;"	l
b02c	Test/a.s	/^    b02c:	e5530001 	ldrb	r0, [r3, #-1]$/;"	l
b030	Test/a.s	/^    b030:	e20120ff 	and	r2, r1, #255	; 0xff$/;"	l
b034	Test/a.s	/^    b034:	e1500002 	cmp	r0, r2$/;"	l
b038	Test/a.s	/^    b038:	02433001 	subeq	r3, r3, #1$/;"	l
b03c	Test/a.s	/^    b03c:	05843004 	streq	r3, [r4, #4]$/;"	l
b040	Test/a.s	/^    b040:	0a000005 	beq	b05c <_IO_sputbackc+0x48>$/;"	l
b044	Test/a.s	/^    b044:	e5943098 	ldr	r3, [r4, #152]	; 0x98$/;"	l
b048	Test/a.s	/^    b048:	e1a00004 	mov	r0, r4$/;"	l
b04c	Test/a.s	/^    b04c:	e5933018 	ldr	r3, [r3, #24]$/;"	l
b050	Test/a.s	/^    b050:	e12fff33 	blx	r3$/;"	l
b054	Test/a.s	/^    b054:	e3700001 	cmn	r0, #1$/;"	l
b058	Test/a.s	/^    b058:	08bd8010 	popeq	{r4, pc}$/;"	l
b05c	Test/a.s	/^    b05c:	e5943000 	ldr	r3, [r4]$/;"	l
b060	Test/a.s	/^    b060:	e3c33010 	bic	r3, r3, #16$/;"	l
b064	Test/a.s	/^    b064:	e5843000 	str	r3, [r4]$/;"	l
b068	Test/a.s	/^    b068:	e8bd8010 	pop	{r4, pc}$/;"	l
b06c	Test/a.s	/^    b06c:	e5903004 	ldr	r3, [r0, #4]$/;"	l
b070	Test/a.s	/^    b070:	e590200c 	ldr	r2, [r0, #12]$/;"	l
b074	Test/a.s	/^    b074:	e92d4010 	push	{r4, lr}$/;"	l
b078	Test/a.s	/^    b078:	e1530002 	cmp	r3, r2$/;"	l
b07c	Test/a.s	/^    b07c:	e1a04000 	mov	r4, r0$/;"	l
b080	Test/a.s	/^    b080:	9a000006 	bls	b0a0 <_IO_sungetc+0x34>$/;"	l
b084	Test/a.s	/^    b084:	e2432001 	sub	r2, r3, #1$/;"	l
b088	Test/a.s	/^    b088:	e5802004 	str	r2, [r0, #4]$/;"	l
b08c	Test/a.s	/^    b08c:	e5530001 	ldrb	r0, [r3, #-1]$/;"	l
b090	Test/a.s	/^    b090:	e5943000 	ldr	r3, [r4]$/;"	l
b094	Test/a.s	/^    b094:	e3c33010 	bic	r3, r3, #16$/;"	l
b098	Test/a.s	/^    b098:	e5843000 	str	r3, [r4]$/;"	l
b09c	Test/a.s	/^    b09c:	e8bd8010 	pop	{r4, pc}$/;"	l
b0a0	Test/a.s	/^    b0a0:	e5903098 	ldr	r3, [r0, #152]	; 0x98$/;"	l
b0a4	Test/a.s	/^    b0a4:	e3e01000 	mvn	r1, #0$/;"	l
b0a8	Test/a.s	/^    b0a8:	e5933018 	ldr	r3, [r3, #24]$/;"	l
b0ac	Test/a.s	/^    b0ac:	e12fff33 	blx	r3$/;"	l
b0b0	Test/a.s	/^    b0b0:	e3700001 	cmn	r0, #1$/;"	l
b0b4	Test/a.s	/^    b0b4:	08bd8010 	popeq	{r4, pc}$/;"	l
b0b8	Test/a.s	/^    b0b8:	eafffff4 	b	b090 <_IO_sungetc+0x24>$/;"	l
b0bc	Test/a.s	/^    b0bc:	e92d0030 	push	{r4, r5}$/;"	l
b0c0	Test/a.s	/^    b0c0:	e0815002 	add	r5, r1, r2$/;"	l
b0c4	Test/a.s	/^    b0c4:	e1510005 	cmp	r1, r5$/;"	l
b0c8	Test/a.s	/^    b0c8:	2a00000d 	bcs	b104 <_IO_adjust_column+0x48>$/;"	l
b0cc	Test/a.s	/^    b0cc:	e5553001 	ldrb	r3, [r5, #-1]$/;"	l
b0d0	Test/a.s	/^    b0d0:	e245c001 	sub	ip, r5, #1$/;"	l
b0d4	Test/a.s	/^    b0d4:	e353000a 	cmp	r3, #10$/;"	l
b0d8	Test/a.s	/^    b0d8:	12411001 	subne	r1, r1, #1$/;"	l
b0dc	Test/a.s	/^    b0dc:	12453002 	subne	r3, r5, #2$/;"	l
b0e0	Test/a.s	/^    b0e0:	1a000004 	bne	b0f8 <_IO_adjust_column+0x3c>$/;"	l
b0e4	Test/a.s	/^    b0e4:	ea000009 	b	b110 <_IO_adjust_column+0x54>$/;"	l
b0e8	Test/a.s	/^    b0e8:	e5dc4000 	ldrb	r4, [ip]$/;"	l
b0ec	Test/a.s	/^    b0ec:	e2433001 	sub	r3, r3, #1$/;"	l
b0f0	Test/a.s	/^    b0f0:	e354000a 	cmp	r4, #10$/;"	l
b0f4	Test/a.s	/^    b0f4:	0a000005 	beq	b110 <_IO_adjust_column+0x54>$/;"	l
b0f8	Test/a.s	/^    b0f8:	e1530001 	cmp	r3, r1$/;"	l
b0fc	Test/a.s	/^    b0fc:	e1a0c003 	mov	ip, r3$/;"	l
b100	Test/a.s	/^    b100:	1afffff8 	bne	b0e8 <_IO_adjust_column+0x2c>$/;"	l
b104	Test/a.s	/^    b104:	e0820000 	add	r0, r2, r0$/;"	l
b108	Test/a.s	/^    b108:	e8bd0030 	pop	{r4, r5}$/;"	l
b10c	Test/a.s	/^    b10c:	e12fff1e 	bx	lr$/;"	l
b110	Test/a.s	/^    b110:	e06c0005 	rsb	r0, ip, r5$/;"	l
b114	Test/a.s	/^    b114:	e2400001 	sub	r0, r0, #1$/;"	l
b118	Test/a.s	/^    b118:	eafffffa 	b	b108 <_IO_adjust_column+0x4c>$/;"	l
b11c	Test/a.s	/^    b11c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
b120	Test/a.s	/^    b120:	e2508000 	subs	r8, r0, #0$/;"	l
b124	Test/a.s	/^    b124:	e24dd01c 	sub	sp, sp, #28$/;"	l
b128	Test/a.s	/^    b128:	0a0000a4 	beq	b3c0 <_IO_flush_all_lockp+0x2a4>$/;"	l
b12c	Test/a.s	/^    b12c:	e59f32fc 	ldr	r3, [pc, #764]	; b430 <_IO_flush_all_lockp+0x314>$/;"	l
b130	Test/a.s	/^    b130:	e3530000 	cmp	r3, #0$/;"	l
b134	Test/a.s	/^    b134:	0a0000b1 	beq	b400 <_IO_flush_all_lockp+0x2e4>$/;"	l
b138	Test/a.s	/^    b138:	e3a02000 	mov	r2, #0$/;"	l
b13c	Test/a.s	/^    b13c:	e28d0008 	add	r0, sp, #8$/;"	l
b140	Test/a.s	/^    b140:	e59f12ec 	ldr	r1, [pc, #748]	; b434 <_IO_flush_all_lockp+0x318>$/;"	l
b144	Test/a.s	/^    b144:	e320f000 	nop	{0}$/;"	l
b148	Test/a.s	/^    b148:	e3a02001 	mov	r2, #1$/;"	l
b14c	Test/a.s	/^    b14c:	e58d2004 	str	r2, [sp, #4]$/;"	l
b150	Test/a.s	/^    b150:	e59f62e0 	ldr	r6, [pc, #736]	; b438 <_IO_flush_all_lockp+0x31c>$/;"	l
b154	Test/a.s	/^    b154:	ebfff8c1 	bl	9460 <__aeabi_read_tp>$/;"	l
b158	Test/a.s	/^    b158:	e5963014 	ldr	r3, [r6, #20]$/;"	l
b15c	Test/a.s	/^    b15c:	e2405d13 	sub	r5, r0, #1216	; 0x4c0$/;"	l
b160	Test/a.s	/^    b160:	e1530005 	cmp	r3, r5$/;"	l
b164	Test/a.s	/^    b164:	0a00000e 	beq	b1a4 <_IO_flush_all_lockp+0x88>$/;"	l
b168	Test/a.s	/^    b168:	e3a01001 	mov	r1, #1$/;"	l
b16c	Test/a.s	/^    b16c:	e286200c 	add	r2, r6, #12$/;"	l
b170	Test/a.s	/^    b170:	e3a04000 	mov	r4, #0$/;"	l
b174	Test/a.s	/^    b174:	e5923000 	ldr	r3, [r2]$/;"	l
b178	Test/a.s	/^    b178:	e1530004 	cmp	r3, r4$/;"	l
b17c	Test/a.s	/^    b17c:	1a000005 	bne	b198 <_IO_flush_all_lockp+0x7c>$/;"	l
b180	Test/a.s	/^    b180:	e1a00004 	mov	r0, r4$/;"	l
b184	Test/a.s	/^    b184:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
b188	Test/a.s	/^    b188:	e1a0e00f 	mov	lr, pc$/;"	l
b18c	Test/a.s	/^    b18c:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
b190	Test/a.s	/^    b190:	3afffff7 	bcc	b174 <_IO_flush_all_lockp+0x58>$/;"	l
b194	Test/a.s	/^    b194:	e1a03004 	mov	r3, r4$/;"	l
b198	Test/a.s	/^    b198:	e1530004 	cmp	r3, r4$/;"	l
b19c	Test/a.s	/^    b19c:	1a000094 	bne	b3f4 <_IO_flush_all_lockp+0x2d8>$/;"	l
b1a0	Test/a.s	/^    b1a0:	e5865014 	str	r5, [r6, #20]$/;"	l
b1a4	Test/a.s	/^    b1a4:	e5963010 	ldr	r3, [r6, #16]$/;"	l
b1a8	Test/a.s	/^    b1a8:	e2833001 	add	r3, r3, #1$/;"	l
b1ac	Test/a.s	/^    b1ac:	e5863010 	str	r3, [r6, #16]$/;"	l
b1b0	Test/a.s	/^    b1b0:	e59f3284 	ldr	r3, [pc, #644]	; b43c <_IO_flush_all_lockp+0x320>$/;"	l
b1b4	Test/a.s	/^    b1b4:	e596a018 	ldr	sl, [r6, #24]$/;"	l
b1b8	Test/a.s	/^    b1b8:	e5935000 	ldr	r5, [r3]$/;"	l
b1bc	Test/a.s	/^    b1bc:	e3550000 	cmp	r5, #0$/;"	l
b1c0	Test/a.s	/^    b1c0:	0a00005a 	beq	b330 <_IO_flush_all_lockp+0x214>$/;"	l
b1c4	Test/a.s	/^    b1c4:	e3a09000 	mov	r9, #0$/;"	l
b1c8	Test/a.s	/^    b1c8:	ea000032 	b	b298 <_IO_flush_all_lockp+0x17c>$/;"	l
b1cc	Test/a.s	/^    b1cc:	e595305c 	ldr	r3, [r5, #92]	; 0x5c$/;"	l
b1d0	Test/a.s	/^    b1d0:	e5932010 	ldr	r2, [r3, #16]$/;"	l
b1d4	Test/a.s	/^    b1d4:	e593300c 	ldr	r3, [r3, #12]$/;"	l
b1d8	Test/a.s	/^    b1d8:	e1520003 	cmp	r2, r3$/;"	l
b1dc	Test/a.s	/^    b1dc:	9a000006 	bls	b1fc <_IO_flush_all_lockp+0xe0>$/;"	l
b1e0	Test/a.s	/^    b1e0:	e5953098 	ldr	r3, [r5, #152]	; 0x98$/;"	l
b1e4	Test/a.s	/^    b1e4:	e1a00005 	mov	r0, r5$/;"	l
b1e8	Test/a.s	/^    b1e8:	e593300c 	ldr	r3, [r3, #12]$/;"	l
b1ec	Test/a.s	/^    b1ec:	e3e01000 	mvn	r1, #0$/;"	l
b1f0	Test/a.s	/^    b1f0:	e12fff33 	blx	r3$/;"	l
b1f4	Test/a.s	/^    b1f4:	e3700001 	cmn	r0, #1$/;"	l
b1f8	Test/a.s	/^    b1f8:	03e09000 	mvneq	r9, #0$/;"	l
b1fc	Test/a.s	/^    b1fc:	e3580000 	cmp	r8, #0$/;"	l
b200	Test/a.s	/^    b200:	0a00001a 	beq	b270 <_IO_flush_all_lockp+0x154>$/;"	l
b204	Test/a.s	/^    b204:	e5953000 	ldr	r3, [r5]$/;"	l
b208	Test/a.s	/^    b208:	e3130902 	tst	r3, #32768	; 0x8000$/;"	l
b20c	Test/a.s	/^    b20c:	1a000017 	bne	b270 <_IO_flush_all_lockp+0x154>$/;"	l
b210	Test/a.s	/^    b210:	e5957048 	ldr	r7, [r5, #72]	; 0x48$/;"	l
b214	Test/a.s	/^    b214:	e5973004 	ldr	r3, [r7, #4]$/;"	l
b218	Test/a.s	/^    b218:	e2433001 	sub	r3, r3, #1$/;"	l
b21c	Test/a.s	/^    b21c:	e3530000 	cmp	r3, #0$/;"	l
b220	Test/a.s	/^    b220:	e5873004 	str	r3, [r7, #4]$/;"	l
b224	Test/a.s	/^    b224:	1a000011 	bne	b270 <_IO_flush_all_lockp+0x154>$/;"	l
b228	Test/a.s	/^    b228:	e5873008 	str	r3, [r7, #8]$/;"	l
b22c	Test/a.s	/^    b22c:	e597b000 	ldr	fp, [r7]$/;"	l
b230	Test/a.s	/^    b230:	e3a01000 	mov	r1, #0$/;"	l
b234	Test/a.s	/^    b234:	e1a0400b 	mov	r4, fp$/;"	l
b238	Test/a.s	/^    b238:	e1a02007 	mov	r2, r7$/;"	l
b23c	Test/a.s	/^    b23c:	e5923000 	ldr	r3, [r2]$/;"	l
b240	Test/a.s	/^    b240:	e1530004 	cmp	r3, r4$/;"	l
b244	Test/a.s	/^    b244:	1a000005 	bne	b260 <_IO_flush_all_lockp+0x144>$/;"	l
b248	Test/a.s	/^    b248:	e1a00004 	mov	r0, r4$/;"	l
b24c	Test/a.s	/^    b24c:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
b250	Test/a.s	/^    b250:	e1a0e00f 	mov	lr, pc$/;"	l
b254	Test/a.s	/^    b254:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
b258	Test/a.s	/^    b258:	3afffff7 	bcc	b23c <_IO_flush_all_lockp+0x120>$/;"	l
b25c	Test/a.s	/^    b25c:	e1a03004 	mov	r3, r4$/;"	l
b260	Test/a.s	/^    b260:	e15b0003 	cmp	fp, r3$/;"	l
b264	Test/a.s	/^    b264:	1afffff0 	bne	b22c <_IO_flush_all_lockp+0x110>$/;"	l
b268	Test/a.s	/^    b268:	e35b0001 	cmp	fp, #1$/;"	l
b26c	Test/a.s	/^    b26c:	ca000059 	bgt	b3d8 <_IO_flush_all_lockp+0x2bc>$/;"	l
b270	Test/a.s	/^    b270:	e5963018 	ldr	r3, [r6, #24]$/;"	l
b274	Test/a.s	/^    b274:	e3a02000 	mov	r2, #0$/;"	l
b278	Test/a.s	/^    b278:	e15a0003 	cmp	sl, r3$/;"	l
b27c	Test/a.s	/^    b27c:	11a0a003 	movne	sl, r3$/;"	l
b280	Test/a.s	/^    b280:	159f31b4 	ldrne	r3, [pc, #436]	; b43c <_IO_flush_all_lockp+0x320>$/;"	l
b284	Test/a.s	/^    b284:	05955034 	ldreq	r5, [r5, #52]	; 0x34$/;"	l
b288	Test/a.s	/^    b288:	15935000 	ldrne	r5, [r3]$/;"	l
b28c	Test/a.s	/^    b28c:	e5862008 	str	r2, [r6, #8]$/;"	l
b290	Test/a.s	/^    b290:	e3550000 	cmp	r5, #0$/;"	l
b294	Test/a.s	/^    b294:	0a000026 	beq	b334 <_IO_flush_all_lockp+0x218>$/;"	l
b298	Test/a.s	/^    b298:	e3580000 	cmp	r8, #0$/;"	l
b29c	Test/a.s	/^    b29c:	e5865008 	str	r5, [r6, #8]$/;"	l
b2a0	Test/a.s	/^    b2a0:	0a00001a 	beq	b310 <_IO_flush_all_lockp+0x1f4>$/;"	l
b2a4	Test/a.s	/^    b2a4:	e5954000 	ldr	r4, [r5]$/;"	l
b2a8	Test/a.s	/^    b2a8:	e2144902 	ands	r4, r4, #32768	; 0x8000$/;"	l
b2ac	Test/a.s	/^    b2ac:	1a000017 	bne	b310 <_IO_flush_all_lockp+0x1f4>$/;"	l
b2b0	Test/a.s	/^    b2b0:	e5957048 	ldr	r7, [r5, #72]	; 0x48$/;"	l
b2b4	Test/a.s	/^    b2b4:	ebfff869 	bl	9460 <__aeabi_read_tp>$/;"	l
b2b8	Test/a.s	/^    b2b8:	e5973008 	ldr	r3, [r7, #8]$/;"	l
b2bc	Test/a.s	/^    b2bc:	e240bd13 	sub	fp, r0, #1216	; 0x4c0$/;"	l
b2c0	Test/a.s	/^    b2c0:	e153000b 	cmp	r3, fp$/;"	l
b2c4	Test/a.s	/^    b2c4:	0a00000e 	beq	b304 <_IO_flush_all_lockp+0x1e8>$/;"	l
b2c8	Test/a.s	/^    b2c8:	e3a01001 	mov	r1, #1$/;"	l
b2cc	Test/a.s	/^    b2cc:	e1a02007 	mov	r2, r7$/;"	l
b2d0	Test/a.s	/^    b2d0:	e5923000 	ldr	r3, [r2]$/;"	l
b2d4	Test/a.s	/^    b2d4:	e1530004 	cmp	r3, r4$/;"	l
b2d8	Test/a.s	/^    b2d8:	1a000005 	bne	b2f4 <_IO_flush_all_lockp+0x1d8>$/;"	l
b2dc	Test/a.s	/^    b2dc:	e1a00004 	mov	r0, r4$/;"	l
b2e0	Test/a.s	/^    b2e0:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
b2e4	Test/a.s	/^    b2e4:	e1a0e00f 	mov	lr, pc$/;"	l
b2e8	Test/a.s	/^    b2e8:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
b2ec	Test/a.s	/^    b2ec:	3afffff7 	bcc	b2d0 <_IO_flush_all_lockp+0x1b4>$/;"	l
b2f0	Test/a.s	/^    b2f0:	e1a03004 	mov	r3, r4$/;"	l
b2f4	Test/a.s	/^    b2f4:	e3530000 	cmp	r3, #0$/;"	l
b2f8	Test/a.s	/^    b2f8:	1a000033 	bne	b3cc <_IO_flush_all_lockp+0x2b0>$/;"	l
b2fc	Test/a.s	/^    b2fc:	e5957048 	ldr	r7, [r5, #72]	; 0x48$/;"	l
b300	Test/a.s	/^    b300:	e587b008 	str	fp, [r7, #8]$/;"	l
b304	Test/a.s	/^    b304:	e5973004 	ldr	r3, [r7, #4]$/;"	l
b308	Test/a.s	/^    b308:	e2833001 	add	r3, r3, #1$/;"	l
b30c	Test/a.s	/^    b30c:	e5873004 	str	r3, [r7, #4]$/;"	l
b310	Test/a.s	/^    b310:	e595306c 	ldr	r3, [r5, #108]	; 0x6c$/;"	l
b314	Test/a.s	/^    b314:	e3530000 	cmp	r3, #0$/;"	l
b318	Test/a.s	/^    b318:	caffffab 	bgt	b1cc <_IO_flush_all_lockp+0xb0>$/;"	l
b31c	Test/a.s	/^    b31c:	e5952014 	ldr	r2, [r5, #20]$/;"	l
b320	Test/a.s	/^    b320:	e5953010 	ldr	r3, [r5, #16]$/;"	l
b324	Test/a.s	/^    b324:	e1520003 	cmp	r2, r3$/;"	l
b328	Test/a.s	/^    b328:	8affffac 	bhi	b1e0 <_IO_flush_all_lockp+0xc4>$/;"	l
b32c	Test/a.s	/^    b32c:	eaffffb2 	b	b1fc <_IO_flush_all_lockp+0xe0>$/;"	l
b330	Test/a.s	/^    b330:	e1a09005 	mov	r9, r5$/;"	l
b334	Test/a.s	/^    b334:	e3580000 	cmp	r8, #0$/;"	l
b338	Test/a.s	/^    b338:	0a000017 	beq	b39c <_IO_flush_all_lockp+0x280>$/;"	l
b33c	Test/a.s	/^    b33c:	e5963010 	ldr	r3, [r6, #16]$/;"	l
b340	Test/a.s	/^    b340:	e59f20f0 	ldr	r2, [pc, #240]	; b438 <_IO_flush_all_lockp+0x31c>$/;"	l
b344	Test/a.s	/^    b344:	e2433001 	sub	r3, r3, #1$/;"	l
b348	Test/a.s	/^    b348:	e3530000 	cmp	r3, #0$/;"	l
b34c	Test/a.s	/^    b34c:	e5863010 	str	r3, [r6, #16]$/;"	l
b350	Test/a.s	/^    b350:	1a000011 	bne	b39c <_IO_flush_all_lockp+0x280>$/;"	l
b354	Test/a.s	/^    b354:	e5823014 	str	r3, [r2, #20]$/;"	l
b358	Test/a.s	/^    b358:	e596500c 	ldr	r5, [r6, #12]$/;"	l
b35c	Test/a.s	/^    b35c:	e3a01000 	mov	r1, #0$/;"	l
b360	Test/a.s	/^    b360:	e1a04005 	mov	r4, r5$/;"	l
b364	Test/a.s	/^    b364:	e59f20d4 	ldr	r2, [pc, #212]	; b440 <_IO_flush_all_lockp+0x324>$/;"	l
b368	Test/a.s	/^    b368:	e5923000 	ldr	r3, [r2]$/;"	l
b36c	Test/a.s	/^    b36c:	e1530004 	cmp	r3, r4$/;"	l
b370	Test/a.s	/^    b370:	1a000005 	bne	b38c <_IO_flush_all_lockp+0x270>$/;"	l
b374	Test/a.s	/^    b374:	e1a00004 	mov	r0, r4$/;"	l
b378	Test/a.s	/^    b378:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
b37c	Test/a.s	/^    b37c:	e1a0e00f 	mov	lr, pc$/;"	l
b380	Test/a.s	/^    b380:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
b384	Test/a.s	/^    b384:	3afffff7 	bcc	b368 <_IO_flush_all_lockp+0x24c>$/;"	l
b388	Test/a.s	/^    b388:	e1a03004 	mov	r3, r4$/;"	l
b38c	Test/a.s	/^    b38c:	e1550003 	cmp	r5, r3$/;"	l
b390	Test/a.s	/^    b390:	1afffff0 	bne	b358 <_IO_flush_all_lockp+0x23c>$/;"	l
b394	Test/a.s	/^    b394:	e3550001 	cmp	r5, #1$/;"	l
b398	Test/a.s	/^    b398:	ca00001d 	bgt	b414 <_IO_flush_all_lockp+0x2f8>$/;"	l
b39c	Test/a.s	/^    b39c:	e59d2004 	ldr	r2, [sp, #4]$/;"	l
b3a0	Test/a.s	/^    b3a0:	e3520000 	cmp	r2, #0$/;"	l
b3a4	Test/a.s	/^    b3a4:	0a000002 	beq	b3b4 <_IO_flush_all_lockp+0x298>$/;"	l
b3a8	Test/a.s	/^    b3a8:	e28d0008 	add	r0, sp, #8$/;"	l
b3ac	Test/a.s	/^    b3ac:	e3a01000 	mov	r1, #0$/;"	l
b3b0	Test/a.s	/^    b3b0:	e320f000 	nop	{0}$/;"	l
b3b4	Test/a.s	/^    b3b4:	e1a00009 	mov	r0, r9$/;"	l
b3b8	Test/a.s	/^    b3b8:	e28dd01c 	add	sp, sp, #28$/;"	l
b3bc	Test/a.s	/^    b3bc:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}$/;"	l
b3c0	Test/a.s	/^    b3c0:	e59f6070 	ldr	r6, [pc, #112]	; b438 <_IO_flush_all_lockp+0x31c>$/;"	l
b3c4	Test/a.s	/^    b3c4:	e58d8004 	str	r8, [sp, #4]$/;"	l
b3c8	Test/a.s	/^    b3c8:	eaffff78 	b	b1b0 <_IO_flush_all_lockp+0x94>$/;"	l
b3cc	Test/a.s	/^    b3cc:	e1a00007 	mov	r0, r7$/;"	l
b3d0	Test/a.s	/^    b3d0:	eb0027ee 	bl	15390 <__lll_lock_wait_private>$/;"	l
b3d4	Test/a.s	/^    b3d4:	eaffffc8 	b	b2fc <_IO_flush_all_lockp+0x1e0>$/;"	l
b3d8	Test/a.s	/^    b3d8:	e1a00007 	mov	r0, r7$/;"	l
b3dc	Test/a.s	/^    b3dc:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
b3e0	Test/a.s	/^    b3e0:	e3a02001 	mov	r2, #1$/;"	l
b3e4	Test/a.s	/^    b3e4:	e3a03000 	mov	r3, #0$/;"	l
b3e8	Test/a.s	/^    b3e8:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
b3ec	Test/a.s	/^    b3ec:	ef000000 	svc	0x00000000$/;"	l
b3f0	Test/a.s	/^    b3f0:	eaffff9e 	b	b270 <_IO_flush_all_lockp+0x154>$/;"	l
b3f4	Test/a.s	/^    b3f4:	e1a00002 	mov	r0, r2$/;"	l
b3f8	Test/a.s	/^    b3f8:	eb0027e4 	bl	15390 <__lll_lock_wait_private>$/;"	l
b3fc	Test/a.s	/^    b3fc:	eaffff67 	b	b1a0 <_IO_flush_all_lockp+0x84>$/;"	l
b400	Test/a.s	/^    b400:	e59f202c 	ldr	r2, [pc, #44]	; b434 <_IO_flush_all_lockp+0x318>$/;"	l
b404	Test/a.s	/^    b404:	e58d300c 	str	r3, [sp, #12]$/;"	l
b408	Test/a.s	/^    b408:	e58d3004 	str	r3, [sp, #4]$/;"	l
b40c	Test/a.s	/^    b40c:	e58d2008 	str	r2, [sp, #8]$/;"	l
b410	Test/a.s	/^    b410:	eaffff4e 	b	b150 <_IO_flush_all_lockp+0x34>$/;"	l
b414	Test/a.s	/^    b414:	e1a00002 	mov	r0, r2$/;"	l
b418	Test/a.s	/^    b418:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
b41c	Test/a.s	/^    b41c:	e3a02001 	mov	r2, #1$/;"	l
b420	Test/a.s	/^    b420:	e3a03000 	mov	r3, #0$/;"	l
b424	Test/a.s	/^    b424:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
b428	Test/a.s	/^    b428:	ef000000 	svc	0x00000000$/;"	l
b42c	Test/a.s	/^    b42c:	eaffffda 	b	b39c <_IO_flush_all_lockp+0x280>$/;"	l
b430	Test/a.s	/^    b430:	00000000 	.word	0x00000000$/;"	l
b434	Test/a.s	/^    b434:	00009f04 	.word	0x00009f04$/;"	l
b438	Test/a.s	/^    b438:	0008d2b8 	.word	0x0008d2b8$/;"	l
b43c	Test/a.s	/^    b43c:	0008c088 	.word	0x0008c088$/;"	l
b440	Test/a.s	/^    b440:	0008d2c4 	.word	0x0008d2c4$/;"	l
b444	Test/a.s	/^    b444:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
b448	Test/a.s	/^    b448:	e3a00000 	mov	r0, #0$/;"	l
b44c	Test/a.s	/^    b44c:	ebffff32 	bl	b11c <_IO_flush_all_lockp>$/;"	l
b450	Test/a.s	/^    b450:	e59f31c4 	ldr	r3, [pc, #452]	; b61c <_IO_cleanup+0x1d8>$/;"	l
b454	Test/a.s	/^    b454:	e1a0a000 	mov	sl, r0$/;"	l
b458	Test/a.s	/^    b458:	e5935000 	ldr	r5, [r3]$/;"	l
b45c	Test/a.s	/^    b45c:	e3550000 	cmp	r5, #0$/;"	l
b460	Test/a.s	/^    b460:	0a000036 	beq	b540 <_IO_cleanup+0xfc>$/;"	l
b464	Test/a.s	/^    b464:	e59f81b4 	ldr	r8, [pc, #436]	; b620 <_IO_cleanup+0x1dc>$/;"	l
b468	Test/a.s	/^    b468:	e3e06000 	mvn	r6, #0$/;"	l
b46c	Test/a.s	/^    b46c:	e5953000 	ldr	r3, [r5]$/;"	l
b470	Test/a.s	/^    b470:	e2131002 	ands	r1, r3, #2$/;"	l
b474	Test/a.s	/^    b474:	1a00002d 	bne	b530 <_IO_cleanup+0xec>$/;"	l
b478	Test/a.s	/^    b478:	e59f21a4 	ldr	r2, [pc, #420]	; b624 <_IO_cleanup+0x1e0>$/;"	l
b47c	Test/a.s	/^    b47c:	e0032002 	and	r2, r3, r2$/;"	l
b480	Test/a.s	/^    b480:	e3520008 	cmp	r2, #8$/;"	l
b484	Test/a.s	/^    b484:	0a000029 	beq	b530 <_IO_cleanup+0xec>$/;"	l
b488	Test/a.s	/^    b488:	e595306c 	ldr	r3, [r5, #108]	; 0x6c$/;"	l
b48c	Test/a.s	/^    b48c:	e3530000 	cmp	r3, #0$/;"	l
b490	Test/a.s	/^    b490:	0a000026 	beq	b530 <_IO_cleanup+0xec>$/;"	l
b494	Test/a.s	/^    b494:	e1a09001 	mov	r9, r1$/;"	l
b498	Test/a.s	/^    b498:	e5953048 	ldr	r3, [r5, #72]	; 0x48$/;"	l
b49c	Test/a.s	/^    b49c:	e3a01001 	mov	r1, #1$/;"	l
b4a0	Test/a.s	/^    b4a0:	e3530000 	cmp	r3, #0$/;"	l
b4a4	Test/a.s	/^    b4a4:	e1a02003 	mov	r2, r3$/;"	l
b4a8	Test/a.s	/^    b4a8:	e3a04000 	mov	r4, #0$/;"	l
b4ac	Test/a.s	/^    b4ac:	0a000011 	beq	b4f8 <_IO_cleanup+0xb4>$/;"	l
b4b0	Test/a.s	/^    b4b0:	ebfff7ea 	bl	9460 <__aeabi_read_tp>$/;"	l
b4b4	Test/a.s	/^    b4b4:	e593b008 	ldr	fp, [r3, #8]$/;"	l
b4b8	Test/a.s	/^    b4b8:	e2407d13 	sub	r7, r0, #1216	; 0x4c0$/;"	l
b4bc	Test/a.s	/^    b4bc:	e157000b 	cmp	r7, fp$/;"	l
b4c0	Test/a.s	/^    b4c0:	0a000051 	beq	b60c <_IO_cleanup+0x1c8>$/;"	l
b4c4	Test/a.s	/^    b4c4:	e5923000 	ldr	r3, [r2]$/;"	l
b4c8	Test/a.s	/^    b4c8:	e1530004 	cmp	r3, r4$/;"	l
b4cc	Test/a.s	/^    b4cc:	1a000005 	bne	b4e8 <_IO_cleanup+0xa4>$/;"	l
b4d0	Test/a.s	/^    b4d0:	e1a00004 	mov	r0, r4$/;"	l
b4d4	Test/a.s	/^    b4d4:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
b4d8	Test/a.s	/^    b4d8:	e1a0e00f 	mov	lr, pc$/;"	l
b4dc	Test/a.s	/^    b4dc:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
b4e0	Test/a.s	/^    b4e0:	3afffff7 	bcc	b4c4 <_IO_cleanup+0x80>$/;"	l
b4e4	Test/a.s	/^    b4e4:	e1a03004 	mov	r3, r4$/;"	l
b4e8	Test/a.s	/^    b4e8:	e1530004 	cmp	r3, r4$/;"	l
b4ec	Test/a.s	/^    b4ec:	1a000015 	bne	b548 <_IO_cleanup+0x104>$/;"	l
b4f0	Test/a.s	/^    b4f0:	e5953048 	ldr	r3, [r5, #72]	; 0x48$/;"	l
b4f4	Test/a.s	/^    b4f4:	e9830082 	stmib	r3, {r1, r7}$/;"	l
b4f8	Test/a.s	/^    b4f8:	e5d83000 	ldrb	r3, [r8]$/;"	l
b4fc	Test/a.s	/^    b4fc:	e3530000 	cmp	r3, #0$/;"	l
b500	Test/a.s	/^    b500:	1a000002 	bne	b510 <_IO_cleanup+0xcc>$/;"	l
b504	Test/a.s	/^    b504:	e5953000 	ldr	r3, [r5]$/;"	l
b508	Test/a.s	/^    b508:	e3130001 	tst	r3, #1$/;"	l
b50c	Test/a.s	/^    b50c:	0a000012 	beq	b55c <_IO_cleanup+0x118>$/;"	l
b510	Test/a.s	/^    b510:	e5953098 	ldr	r3, [r5, #152]	; 0x98$/;"	l
b514	Test/a.s	/^    b514:	e3a01000 	mov	r1, #0$/;"	l
b518	Test/a.s	/^    b518:	e593302c 	ldr	r3, [r3, #44]	; 0x2c$/;"	l
b51c	Test/a.s	/^    b51c:	e1a02001 	mov	r2, r1$/;"	l
b520	Test/a.s	/^    b520:	e1a00005 	mov	r0, r5$/;"	l
b524	Test/a.s	/^    b524:	e12fff33 	blx	r3$/;"	l
b528	Test/a.s	/^    b528:	e3590002 	cmp	r9, #2$/;"	l
b52c	Test/a.s	/^    b52c:	1a000015 	bne	b588 <_IO_cleanup+0x144>$/;"	l
b530	Test/a.s	/^    b530:	e585606c 	str	r6, [r5, #108]	; 0x6c$/;"	l
b534	Test/a.s	/^    b534:	e5955034 	ldr	r5, [r5, #52]	; 0x34$/;"	l
b538	Test/a.s	/^    b538:	e3550000 	cmp	r5, #0$/;"	l
b53c	Test/a.s	/^    b53c:	1affffca 	bne	b46c <_IO_cleanup+0x28>$/;"	l
b540	Test/a.s	/^    b540:	e1a0000a 	mov	r0, sl$/;"	l
b544	Test/a.s	/^    b544:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}$/;"	l
b548	Test/a.s	/^    b548:	e2899001 	add	r9, r9, #1$/;"	l
b54c	Test/a.s	/^    b54c:	eb002223 	bl	13de0 <__sched_yield>$/;"	l
b550	Test/a.s	/^    b550:	e3590002 	cmp	r9, #2$/;"	l
b554	Test/a.s	/^    b554:	0affffe7 	beq	b4f8 <_IO_cleanup+0xb4>$/;"	l
b558	Test/a.s	/^    b558:	eaffffce 	b	b498 <_IO_cleanup+0x54>$/;"	l
b55c	Test/a.s	/^    b55c:	e595201c 	ldr	r2, [r5, #28]$/;"	l
b560	Test/a.s	/^    b560:	e5950020 	ldr	r0, [r5, #32]$/;"	l
b564	Test/a.s	/^    b564:	e5981004 	ldr	r1, [r8, #4]$/;"	l
b568	Test/a.s	/^    b568:	e3833001 	orr	r3, r3, #1$/;"	l
b56c	Test/a.s	/^    b56c:	e0620000 	rsb	r0, r2, r0$/;"	l
b570	Test/a.s	/^    b570:	e5853000 	str	r3, [r5]$/;"	l
b574	Test/a.s	/^    b574:	e5852064 	str	r2, [r5, #100]	; 0x64$/;"	l
b578	Test/a.s	/^    b578:	e5850068 	str	r0, [r5, #104]	; 0x68$/;"	l
b57c	Test/a.s	/^    b57c:	e5851060 	str	r1, [r5, #96]	; 0x60$/;"	l
b580	Test/a.s	/^    b580:	e5885004 	str	r5, [r8, #4]$/;"	l
b584	Test/a.s	/^    b584:	eaffffe1 	b	b510 <_IO_cleanup+0xcc>$/;"	l
b588	Test/a.s	/^    b588:	e5957048 	ldr	r7, [r5, #72]	; 0x48$/;"	l
b58c	Test/a.s	/^    b58c:	e3570000 	cmp	r7, #0$/;"	l
b590	Test/a.s	/^    b590:	0affffe6 	beq	b530 <_IO_cleanup+0xec>$/;"	l
b594	Test/a.s	/^    b594:	e5973004 	ldr	r3, [r7, #4]$/;"	l
b598	Test/a.s	/^    b598:	e2433001 	sub	r3, r3, #1$/;"	l
b59c	Test/a.s	/^    b59c:	e3530000 	cmp	r3, #0$/;"	l
b5a0	Test/a.s	/^    b5a0:	e5873004 	str	r3, [r7, #4]$/;"	l
b5a4	Test/a.s	/^    b5a4:	1affffe1 	bne	b530 <_IO_cleanup+0xec>$/;"	l
b5a8	Test/a.s	/^    b5a8:	e5873008 	str	r3, [r7, #8]$/;"	l
b5ac	Test/a.s	/^    b5ac:	e5979000 	ldr	r9, [r7]$/;"	l
b5b0	Test/a.s	/^    b5b0:	e3a01000 	mov	r1, #0$/;"	l
b5b4	Test/a.s	/^    b5b4:	e1a04009 	mov	r4, r9$/;"	l
b5b8	Test/a.s	/^    b5b8:	e1a02007 	mov	r2, r7$/;"	l
b5bc	Test/a.s	/^    b5bc:	e5923000 	ldr	r3, [r2]$/;"	l
b5c0	Test/a.s	/^    b5c0:	e1530004 	cmp	r3, r4$/;"	l
b5c4	Test/a.s	/^    b5c4:	1a000005 	bne	b5e0 <_IO_cleanup+0x19c>$/;"	l
b5c8	Test/a.s	/^    b5c8:	e1a00004 	mov	r0, r4$/;"	l
b5cc	Test/a.s	/^    b5cc:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
b5d0	Test/a.s	/^    b5d0:	e1a0e00f 	mov	lr, pc$/;"	l
b5d4	Test/a.s	/^    b5d4:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
b5d8	Test/a.s	/^    b5d8:	3afffff7 	bcc	b5bc <_IO_cleanup+0x178>$/;"	l
b5dc	Test/a.s	/^    b5dc:	e1a03004 	mov	r3, r4$/;"	l
b5e0	Test/a.s	/^    b5e0:	e1590003 	cmp	r9, r3$/;"	l
b5e4	Test/a.s	/^    b5e4:	1afffff0 	bne	b5ac <_IO_cleanup+0x168>$/;"	l
b5e8	Test/a.s	/^    b5e8:	e3590001 	cmp	r9, #1$/;"	l
b5ec	Test/a.s	/^    b5ec:	daffffcf 	ble	b530 <_IO_cleanup+0xec>$/;"	l
b5f0	Test/a.s	/^    b5f0:	e1a00007 	mov	r0, r7$/;"	l
b5f4	Test/a.s	/^    b5f4:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
b5f8	Test/a.s	/^    b5f8:	e3a02001 	mov	r2, #1$/;"	l
b5fc	Test/a.s	/^    b5fc:	e3a03000 	mov	r3, #0$/;"	l
b600	Test/a.s	/^    b600:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
b604	Test/a.s	/^    b604:	ef000000 	svc	0x00000000$/;"	l
b608	Test/a.s	/^    b608:	eaffffc8 	b	b530 <_IO_cleanup+0xec>$/;"	l
b60c	Test/a.s	/^    b60c:	e5932004 	ldr	r2, [r3, #4]$/;"	l
b610	Test/a.s	/^    b610:	e2822001 	add	r2, r2, #1$/;"	l
b614	Test/a.s	/^    b614:	e5832004 	str	r2, [r3, #4]$/;"	l
b618	Test/a.s	/^    b618:	eaffffb6 	b	b4f8 <_IO_cleanup+0xb4>$/;"	l
b61c	Test/a.s	/^    b61c:	0008c088 	.word	0x0008c088$/;"	l
b620	Test/a.s	/^    b620:	0008d2b8 	.word	0x0008d2b8$/;"	l
b624	Test/a.s	/^    b624:	00001008 	.word	0x00001008$/;"	l
b628	Test/a.s	/^    b628:	e3a00001 	mov	r0, #1$/;"	l
b62c	Test/a.s	/^    b62c:	eafffeba 	b	b11c <_IO_flush_all_lockp>$/;"	l
b630	Test/a.s	/^    b630:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
b634	Test/a.s	/^    b634:	e59f32a4 	ldr	r3, [pc, #676]	; b8e0 <_IO_flush_all_linebuffered+0x2b0>$/;"	l
b638	Test/a.s	/^    b638:	e24dd01c 	sub	sp, sp, #28$/;"	l
b63c	Test/a.s	/^    b63c:	e2933000 	adds	r3, r3, #0$/;"	l
b640	Test/a.s	/^    b640:	13a03001 	movne	r3, #1$/;"	l
b644	Test/a.s	/^    b644:	e3530000 	cmp	r3, #0$/;"	l
b648	Test/a.s	/^    b648:	e58d3004 	str	r3, [sp, #4]$/;"	l
b64c	Test/a.s	/^    b64c:	0a00009e 	beq	b8cc <_IO_flush_all_linebuffered+0x29c>$/;"	l
b650	Test/a.s	/^    b650:	e28d0008 	add	r0, sp, #8$/;"	l
b654	Test/a.s	/^    b654:	e59f1288 	ldr	r1, [pc, #648]	; b8e4 <_IO_flush_all_linebuffered+0x2b4>$/;"	l
b658	Test/a.s	/^    b658:	e3a02000 	mov	r2, #0$/;"	l
b65c	Test/a.s	/^    b65c:	e320f000 	nop	{0}$/;"	l
b660	Test/a.s	/^    b660:	e59f6280 	ldr	r6, [pc, #640]	; b8e8 <_IO_flush_all_linebuffered+0x2b8>$/;"	l
b664	Test/a.s	/^    b664:	ebfff77d 	bl	9460 <__aeabi_read_tp>$/;"	l
b668	Test/a.s	/^    b668:	e5963014 	ldr	r3, [r6, #20]$/;"	l
b66c	Test/a.s	/^    b66c:	e240ad13 	sub	sl, r0, #1216	; 0x4c0$/;"	l
b670	Test/a.s	/^    b670:	e153000a 	cmp	r3, sl$/;"	l
b674	Test/a.s	/^    b674:	0a00000e 	beq	b6b4 <_IO_flush_all_linebuffered+0x84>$/;"	l
b678	Test/a.s	/^    b678:	e3a01001 	mov	r1, #1$/;"	l
b67c	Test/a.s	/^    b67c:	e286200c 	add	r2, r6, #12$/;"	l
b680	Test/a.s	/^    b680:	e3a04000 	mov	r4, #0$/;"	l
b684	Test/a.s	/^    b684:	e5923000 	ldr	r3, [r2]$/;"	l
b688	Test/a.s	/^    b688:	e1530004 	cmp	r3, r4$/;"	l
b68c	Test/a.s	/^    b68c:	1a000005 	bne	b6a8 <_IO_flush_all_linebuffered+0x78>$/;"	l
b690	Test/a.s	/^    b690:	e1a00004 	mov	r0, r4$/;"	l
b694	Test/a.s	/^    b694:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
b698	Test/a.s	/^    b698:	e1a0e00f 	mov	lr, pc$/;"	l
b69c	Test/a.s	/^    b69c:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
b6a0	Test/a.s	/^    b6a0:	3afffff7 	bcc	b684 <_IO_flush_all_linebuffered+0x54>$/;"	l
b6a4	Test/a.s	/^    b6a4:	e1a03004 	mov	r3, r4$/;"	l
b6a8	Test/a.s	/^    b6a8:	e1530004 	cmp	r3, r4$/;"	l
b6ac	Test/a.s	/^    b6ac:	1a000083 	bne	b8c0 <_IO_flush_all_linebuffered+0x290>$/;"	l
b6b0	Test/a.s	/^    b6b0:	e586a014 	str	sl, [r6, #20]$/;"	l
b6b4	Test/a.s	/^    b6b4:	e59f2230 	ldr	r2, [pc, #560]	; b8ec <_IO_flush_all_linebuffered+0x2bc>$/;"	l
b6b8	Test/a.s	/^    b6b8:	e5963010 	ldr	r3, [r6, #16]$/;"	l
b6bc	Test/a.s	/^    b6bc:	e5925000 	ldr	r5, [r2]$/;"	l
b6c0	Test/a.s	/^    b6c0:	e2833001 	add	r3, r3, #1$/;"	l
b6c4	Test/a.s	/^    b6c4:	e3550000 	cmp	r5, #0$/;"	l
b6c8	Test/a.s	/^    b6c8:	e5863010 	str	r3, [r6, #16]$/;"	l
b6cc	Test/a.s	/^    b6cc:	e5968018 	ldr	r8, [r6, #24]$/;"	l
b6d0	Test/a.s	/^    b6d0:	0a00004a 	beq	b800 <_IO_flush_all_linebuffered+0x1d0>$/;"	l
b6d4	Test/a.s	/^    b6d4:	e3a09000 	mov	r9, #0$/;"	l
b6d8	Test/a.s	/^    b6d8:	ea000023 	b	b76c <_IO_flush_all_linebuffered+0x13c>$/;"	l
b6dc	Test/a.s	/^    b6dc:	e5953000 	ldr	r3, [r5]$/;"	l
b6e0	Test/a.s	/^    b6e0:	e3130902 	tst	r3, #32768	; 0x8000$/;"	l
b6e4	Test/a.s	/^    b6e4:	1a000017 	bne	b748 <_IO_flush_all_linebuffered+0x118>$/;"	l
b6e8	Test/a.s	/^    b6e8:	e5957048 	ldr	r7, [r5, #72]	; 0x48$/;"	l
b6ec	Test/a.s	/^    b6ec:	e5973004 	ldr	r3, [r7, #4]$/;"	l
b6f0	Test/a.s	/^    b6f0:	e2433001 	sub	r3, r3, #1$/;"	l
b6f4	Test/a.s	/^    b6f4:	e3530000 	cmp	r3, #0$/;"	l
b6f8	Test/a.s	/^    b6f8:	e5873004 	str	r3, [r7, #4]$/;"	l
b6fc	Test/a.s	/^    b6fc:	1a000011 	bne	b748 <_IO_flush_all_linebuffered+0x118>$/;"	l
b700	Test/a.s	/^    b700:	e5873008 	str	r3, [r7, #8]$/;"	l
b704	Test/a.s	/^    b704:	e597b000 	ldr	fp, [r7]$/;"	l
b708	Test/a.s	/^    b708:	e3a01000 	mov	r1, #0$/;"	l
b70c	Test/a.s	/^    b70c:	e1a0400b 	mov	r4, fp$/;"	l
b710	Test/a.s	/^    b710:	e1a02007 	mov	r2, r7$/;"	l
b714	Test/a.s	/^    b714:	e5923000 	ldr	r3, [r2]$/;"	l
b718	Test/a.s	/^    b718:	e1530004 	cmp	r3, r4$/;"	l
b71c	Test/a.s	/^    b71c:	1a000005 	bne	b738 <_IO_flush_all_linebuffered+0x108>$/;"	l
b720	Test/a.s	/^    b720:	e1a00004 	mov	r0, r4$/;"	l
b724	Test/a.s	/^    b724:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
b728	Test/a.s	/^    b728:	e1a0e00f 	mov	lr, pc$/;"	l
b72c	Test/a.s	/^    b72c:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
b730	Test/a.s	/^    b730:	3afffff7 	bcc	b714 <_IO_flush_all_linebuffered+0xe4>$/;"	l
b734	Test/a.s	/^    b734:	e1a03004 	mov	r3, r4$/;"	l
b738	Test/a.s	/^    b738:	e15b0003 	cmp	fp, r3$/;"	l
b73c	Test/a.s	/^    b73c:	1afffff0 	bne	b704 <_IO_flush_all_linebuffered+0xd4>$/;"	l
b740	Test/a.s	/^    b740:	e35b0001 	cmp	fp, #1$/;"	l
b744	Test/a.s	/^    b744:	ca00004f 	bgt	b888 <_IO_flush_all_linebuffered+0x258>$/;"	l
b748	Test/a.s	/^    b748:	e5963018 	ldr	r3, [r6, #24]$/;"	l
b74c	Test/a.s	/^    b74c:	e5869008 	str	r9, [r6, #8]$/;"	l
b750	Test/a.s	/^    b750:	e1580003 	cmp	r8, r3$/;"	l
b754	Test/a.s	/^    b754:	11a08003 	movne	r8, r3$/;"	l
b758	Test/a.s	/^    b758:	159f318c 	ldrne	r3, [pc, #396]	; b8ec <_IO_flush_all_linebuffered+0x2bc>$/;"	l
b75c	Test/a.s	/^    b75c:	05955034 	ldreq	r5, [r5, #52]	; 0x34$/;"	l
b760	Test/a.s	/^    b760:	15935000 	ldrne	r5, [r3]$/;"	l
b764	Test/a.s	/^    b764:	e3550000 	cmp	r5, #0$/;"	l
b768	Test/a.s	/^    b768:	0a000023 	beq	b7fc <_IO_flush_all_linebuffered+0x1cc>$/;"	l
b76c	Test/a.s	/^    b76c:	e5954000 	ldr	r4, [r5]$/;"	l
b770	Test/a.s	/^    b770:	e5865008 	str	r5, [r6, #8]$/;"	l
b774	Test/a.s	/^    b774:	e2144902 	ands	r4, r4, #32768	; 0x8000$/;"	l
b778	Test/a.s	/^    b778:	1a000015 	bne	b7d4 <_IO_flush_all_linebuffered+0x1a4>$/;"	l
b77c	Test/a.s	/^    b77c:	e5957048 	ldr	r7, [r5, #72]	; 0x48$/;"	l
b780	Test/a.s	/^    b780:	e5973008 	ldr	r3, [r7, #8]$/;"	l
b784	Test/a.s	/^    b784:	e15a0003 	cmp	sl, r3$/;"	l
b788	Test/a.s	/^    b788:	0a00000e 	beq	b7c8 <_IO_flush_all_linebuffered+0x198>$/;"	l
b78c	Test/a.s	/^    b78c:	e3a01001 	mov	r1, #1$/;"	l
b790	Test/a.s	/^    b790:	e1a02007 	mov	r2, r7$/;"	l
b794	Test/a.s	/^    b794:	e5923000 	ldr	r3, [r2]$/;"	l
b798	Test/a.s	/^    b798:	e1530004 	cmp	r3, r4$/;"	l
b79c	Test/a.s	/^    b79c:	1a000005 	bne	b7b8 <_IO_flush_all_linebuffered+0x188>$/;"	l
b7a0	Test/a.s	/^    b7a0:	e1a00004 	mov	r0, r4$/;"	l
b7a4	Test/a.s	/^    b7a4:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
b7a8	Test/a.s	/^    b7a8:	e1a0e00f 	mov	lr, pc$/;"	l
b7ac	Test/a.s	/^    b7ac:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
b7b0	Test/a.s	/^    b7b0:	3afffff7 	bcc	b794 <_IO_flush_all_linebuffered+0x164>$/;"	l
b7b4	Test/a.s	/^    b7b4:	e1a03004 	mov	r3, r4$/;"	l
b7b8	Test/a.s	/^    b7b8:	e3530000 	cmp	r3, #0$/;"	l
b7bc	Test/a.s	/^    b7bc:	1a00002e 	bne	b87c <_IO_flush_all_linebuffered+0x24c>$/;"	l
b7c0	Test/a.s	/^    b7c0:	e5957048 	ldr	r7, [r5, #72]	; 0x48$/;"	l
b7c4	Test/a.s	/^    b7c4:	e587a008 	str	sl, [r7, #8]$/;"	l
b7c8	Test/a.s	/^    b7c8:	e5973004 	ldr	r3, [r7, #4]$/;"	l
b7cc	Test/a.s	/^    b7cc:	e2833001 	add	r3, r3, #1$/;"	l
b7d0	Test/a.s	/^    b7d0:	e5873004 	str	r3, [r7, #4]$/;"	l
b7d4	Test/a.s	/^    b7d4:	e5953000 	ldr	r3, [r5]$/;"	l
b7d8	Test/a.s	/^    b7d8:	e2033f82 	and	r3, r3, #520	; 0x208$/;"	l
b7dc	Test/a.s	/^    b7dc:	e3530c02 	cmp	r3, #512	; 0x200$/;"	l
b7e0	Test/a.s	/^    b7e0:	1affffbd 	bne	b6dc <_IO_flush_all_linebuffered+0xac>$/;"	l
b7e4	Test/a.s	/^    b7e4:	e5953098 	ldr	r3, [r5, #152]	; 0x98$/;"	l
b7e8	Test/a.s	/^    b7e8:	e1a00005 	mov	r0, r5$/;"	l
b7ec	Test/a.s	/^    b7ec:	e593300c 	ldr	r3, [r3, #12]$/;"	l
b7f0	Test/a.s	/^    b7f0:	e3e01000 	mvn	r1, #0$/;"	l
b7f4	Test/a.s	/^    b7f4:	e12fff33 	blx	r3$/;"	l
b7f8	Test/a.s	/^    b7f8:	eaffffb7 	b	b6dc <_IO_flush_all_linebuffered+0xac>$/;"	l
b7fc	Test/a.s	/^    b7fc:	e5963010 	ldr	r3, [r6, #16]$/;"	l
b800	Test/a.s	/^    b800:	e2433001 	sub	r3, r3, #1$/;"	l
b804	Test/a.s	/^    b804:	e3530000 	cmp	r3, #0$/;"	l
b808	Test/a.s	/^    b808:	e5863010 	str	r3, [r6, #16]$/;"	l
b80c	Test/a.s	/^    b80c:	e59f20d4 	ldr	r2, [pc, #212]	; b8e8 <_IO_flush_all_linebuffered+0x2b8>$/;"	l
b810	Test/a.s	/^    b810:	1a000011 	bne	b85c <_IO_flush_all_linebuffered+0x22c>$/;"	l
b814	Test/a.s	/^    b814:	e5823014 	str	r3, [r2, #20]$/;"	l
b818	Test/a.s	/^    b818:	e596500c 	ldr	r5, [r6, #12]$/;"	l
b81c	Test/a.s	/^    b81c:	e3a01000 	mov	r1, #0$/;"	l
b820	Test/a.s	/^    b820:	e1a04005 	mov	r4, r5$/;"	l
b824	Test/a.s	/^    b824:	e59f20c4 	ldr	r2, [pc, #196]	; b8f0 <_IO_flush_all_linebuffered+0x2c0>$/;"	l
b828	Test/a.s	/^    b828:	e5923000 	ldr	r3, [r2]$/;"	l
b82c	Test/a.s	/^    b82c:	e1530004 	cmp	r3, r4$/;"	l
b830	Test/a.s	/^    b830:	1a000005 	bne	b84c <_IO_flush_all_linebuffered+0x21c>$/;"	l
b834	Test/a.s	/^    b834:	e1a00004 	mov	r0, r4$/;"	l
b838	Test/a.s	/^    b838:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
b83c	Test/a.s	/^    b83c:	e1a0e00f 	mov	lr, pc$/;"	l
b840	Test/a.s	/^    b840:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
b844	Test/a.s	/^    b844:	3afffff7 	bcc	b828 <_IO_flush_all_linebuffered+0x1f8>$/;"	l
b848	Test/a.s	/^    b848:	e1a03004 	mov	r3, r4$/;"	l
b84c	Test/a.s	/^    b84c:	e1550003 	cmp	r5, r3$/;"	l
b850	Test/a.s	/^    b850:	1afffff0 	bne	b818 <_IO_flush_all_linebuffered+0x1e8>$/;"	l
b854	Test/a.s	/^    b854:	e3550001 	cmp	r5, #1$/;"	l
b858	Test/a.s	/^    b858:	ca000011 	bgt	b8a4 <_IO_flush_all_linebuffered+0x274>$/;"	l
b85c	Test/a.s	/^    b85c:	e59d2004 	ldr	r2, [sp, #4]$/;"	l
b860	Test/a.s	/^    b860:	e3520000 	cmp	r2, #0$/;"	l
b864	Test/a.s	/^    b864:	0a000002 	beq	b874 <_IO_flush_all_linebuffered+0x244>$/;"	l
b868	Test/a.s	/^    b868:	e28d0008 	add	r0, sp, #8$/;"	l
b86c	Test/a.s	/^    b86c:	e3a01000 	mov	r1, #0$/;"	l
b870	Test/a.s	/^    b870:	e320f000 	nop	{0}$/;"	l
b874	Test/a.s	/^    b874:	e28dd01c 	add	sp, sp, #28$/;"	l
b878	Test/a.s	/^    b878:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}$/;"	l
b87c	Test/a.s	/^    b87c:	e1a00007 	mov	r0, r7$/;"	l
b880	Test/a.s	/^    b880:	eb0026c2 	bl	15390 <__lll_lock_wait_private>$/;"	l
b884	Test/a.s	/^    b884:	eaffffcd 	b	b7c0 <_IO_flush_all_linebuffered+0x190>$/;"	l
b888	Test/a.s	/^    b888:	e1a00007 	mov	r0, r7$/;"	l
b88c	Test/a.s	/^    b88c:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
b890	Test/a.s	/^    b890:	e3a02001 	mov	r2, #1$/;"	l
b894	Test/a.s	/^    b894:	e3a03000 	mov	r3, #0$/;"	l
b898	Test/a.s	/^    b898:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
b89c	Test/a.s	/^    b89c:	ef000000 	svc	0x00000000$/;"	l
b8a0	Test/a.s	/^    b8a0:	eaffffa8 	b	b748 <_IO_flush_all_linebuffered+0x118>$/;"	l
b8a4	Test/a.s	/^    b8a4:	e1a00002 	mov	r0, r2$/;"	l
b8a8	Test/a.s	/^    b8a8:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
b8ac	Test/a.s	/^    b8ac:	e3a02001 	mov	r2, #1$/;"	l
b8b0	Test/a.s	/^    b8b0:	e3a03000 	mov	r3, #0$/;"	l
b8b4	Test/a.s	/^    b8b4:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
b8b8	Test/a.s	/^    b8b8:	ef000000 	svc	0x00000000$/;"	l
b8bc	Test/a.s	/^    b8bc:	eaffffe6 	b	b85c <_IO_flush_all_linebuffered+0x22c>$/;"	l
b8c0	Test/a.s	/^    b8c0:	e1a00002 	mov	r0, r2$/;"	l
b8c4	Test/a.s	/^    b8c4:	eb0026b1 	bl	15390 <__lll_lock_wait_private>$/;"	l
b8c8	Test/a.s	/^    b8c8:	eaffff78 	b	b6b0 <_IO_flush_all_linebuffered+0x80>$/;"	l
b8cc	Test/a.s	/^    b8cc:	e59f3010 	ldr	r3, [pc, #16]	; b8e4 <_IO_flush_all_linebuffered+0x2b4>$/;"	l
b8d0	Test/a.s	/^    b8d0:	e59d2004 	ldr	r2, [sp, #4]$/;"	l
b8d4	Test/a.s	/^    b8d4:	e58d3008 	str	r3, [sp, #8]$/;"	l
b8d8	Test/a.s	/^    b8d8:	e58d200c 	str	r2, [sp, #12]$/;"	l
b8dc	Test/a.s	/^    b8dc:	eaffff5f 	b	b660 <_IO_flush_all_linebuffered+0x30>$/;"	l
b8e0	Test/a.s	/^    b8e0:	00000000 	.word	0x00000000$/;"	l
b8e4	Test/a.s	/^    b8e4:	00009f04 	.word	0x00009f04$/;"	l
b8e8	Test/a.s	/^    b8e8:	0008d2b8 	.word	0x0008d2b8$/;"	l
b8ec	Test/a.s	/^    b8ec:	0008c088 	.word	0x0008c088$/;"	l
b8f0	Test/a.s	/^    b8f0:	0008d2c4 	.word	0x0008d2c4$/;"	l
b8f4	Test/a.s	/^    b8f4:	e92d4038 	push	{r3, r4, r5, lr}$/;"	l
b8f8	Test/a.s	/^    b8f8:	e5913000 	ldr	r3, [r1]$/;"	l
b8fc	Test/a.s	/^    b8fc:	e1a05000 	mov	r5, r0$/;"	l
b900	Test/a.s	/^    b900:	e3130b02 	tst	r3, #2048	; 0x800$/;"	l
b904	Test/a.s	/^    b904:	e1a04001 	mov	r4, r1$/;"	l
b908	Test/a.s	/^    b908:	e5851004 	str	r1, [r5, #4]$/;"	l
b90c	Test/a.s	/^    b90c:	1a000009 	bne	b938 <_IO_init_marker+0x44>$/;"	l
b910	Test/a.s	/^    b910:	e3130c01 	tst	r3, #256	; 0x100$/;"	l
b914	Test/a.s	/^    b914:	e5942004 	ldr	r2, [r4, #4]$/;"	l
b918	Test/a.s	/^    b918:	15943008 	ldrne	r3, [r4, #8]$/;"	l
b91c	Test/a.s	/^    b91c:	0594300c 	ldreq	r3, [r4, #12]$/;"	l
b920	Test/a.s	/^    b920:	e0633002 	rsb	r3, r3, r2$/;"	l
b924	Test/a.s	/^    b924:	e5853008 	str	r3, [r5, #8]$/;"	l
b928	Test/a.s	/^    b928:	e5943030 	ldr	r3, [r4, #48]	; 0x30$/;"	l
b92c	Test/a.s	/^    b92c:	e5853000 	str	r3, [r5]$/;"	l
b930	Test/a.s	/^    b930:	e5845030 	str	r5, [r4, #48]	; 0x30$/;"	l
b934	Test/a.s	/^    b934:	e8bd8038 	pop	{r3, r4, r5, pc}$/;"	l
b938	Test/a.s	/^    b938:	e1a00001 	mov	r0, r1$/;"	l
b93c	Test/a.s	/^    b93c:	ebfffbb0 	bl	a804 <_IO_switch_to_get_mode>$/;"	l
b940	Test/a.s	/^    b940:	e5943000 	ldr	r3, [r4]$/;"	l
b944	Test/a.s	/^    b944:	eafffff1 	b	b910 <_IO_init_marker+0x1c>$/;"	l
b948	Test/a.s	/^    b948:	e5903004 	ldr	r3, [r0, #4]$/;"	l
b94c	Test/a.s	/^    b94c:	e5932030 	ldr	r2, [r3, #48]	; 0x30$/;"	l
b950	Test/a.s	/^    b950:	e3520000 	cmp	r2, #0$/;"	l
b954	Test/a.s	/^    b954:	012fff1e 	bxeq	lr$/;"	l
b958	Test/a.s	/^    b958:	e1500002 	cmp	r0, r2$/;"	l
b95c	Test/a.s	/^    b95c:	02832030 	addeq	r2, r3, #48	; 0x30$/;"	l
b960	Test/a.s	/^    b960:	1a000003 	bne	b974 <_IO_remove_marker+0x2c>$/;"	l
b964	Test/a.s	/^    b964:	ea000006 	b	b984 <_IO_remove_marker+0x3c>$/;"	l
b968	Test/a.s	/^    b968:	e1500003 	cmp	r0, r3$/;"	l
b96c	Test/a.s	/^    b96c:	0a000004 	beq	b984 <_IO_remove_marker+0x3c>$/;"	l
b970	Test/a.s	/^    b970:	e1a02003 	mov	r2, r3$/;"	l
b974	Test/a.s	/^    b974:	e5923000 	ldr	r3, [r2]$/;"	l
b978	Test/a.s	/^    b978:	e3530000 	cmp	r3, #0$/;"	l
b97c	Test/a.s	/^    b97c:	1afffff9 	bne	b968 <_IO_remove_marker+0x20>$/;"	l
b980	Test/a.s	/^    b980:	e12fff1e 	bx	lr$/;"	l
b984	Test/a.s	/^    b984:	e5901000 	ldr	r1, [r0]$/;"	l
b988	Test/a.s	/^    b988:	e5821000 	str	r1, [r2]$/;"	l
b98c	Test/a.s	/^    b98c:	e12fff1e 	bx	lr$/;"	l
b990	Test/a.s	/^    b990:	e5903008 	ldr	r3, [r0, #8]$/;"	l
b994	Test/a.s	/^    b994:	e5910008 	ldr	r0, [r1, #8]$/;"	l
b998	Test/a.s	/^    b998:	e0600003 	rsb	r0, r0, r3$/;"	l
b99c	Test/a.s	/^    b99c:	e12fff1e 	bx	lr$/;"	l
b9a0	Test/a.s	/^    b9a0:	e5903004 	ldr	r3, [r0, #4]$/;"	l
b9a4	Test/a.s	/^    b9a4:	e3530000 	cmp	r3, #0$/;"	l
b9a8	Test/a.s	/^    b9a8:	0a000008 	beq	b9d0 <_IO_marker_delta+0x30>$/;"	l
b9ac	Test/a.s	/^    b9ac:	e5932000 	ldr	r2, [r3]$/;"	l
b9b0	Test/a.s	/^    b9b0:	e5900008 	ldr	r0, [r0, #8]$/;"	l
b9b4	Test/a.s	/^    b9b4:	e3120c01 	tst	r2, #256	; 0x100$/;"	l
b9b8	Test/a.s	/^    b9b8:	e5932004 	ldr	r2, [r3, #4]$/;"	l
b9bc	Test/a.s	/^    b9bc:	15933008 	ldrne	r3, [r3, #8]$/;"	l
b9c0	Test/a.s	/^    b9c0:	0593300c 	ldreq	r3, [r3, #12]$/;"	l
b9c4	Test/a.s	/^    b9c4:	e0633002 	rsb	r3, r3, r2$/;"	l
b9c8	Test/a.s	/^    b9c8:	e0630000 	rsb	r0, r3, r0$/;"	l
b9cc	Test/a.s	/^    b9cc:	e12fff1e 	bx	lr$/;"	l
b9d0	Test/a.s	/^    b9d0:	e3e00000 	mvn	r0, #0$/;"	l
b9d4	Test/a.s	/^    b9d4:	e12fff1e 	bx	lr$/;"	l
b9d8	Test/a.s	/^    b9d8:	e5913004 	ldr	r3, [r1, #4]$/;"	l
b9dc	Test/a.s	/^    b9dc:	e92d0030 	push	{r4, r5}$/;"	l
b9e0	Test/a.s	/^    b9e0:	e1530000 	cmp	r3, r0$/;"	l
b9e4	Test/a.s	/^    b9e4:	13e00000 	mvnne	r0, #0$/;"	l
b9e8	Test/a.s	/^    b9e8:	1a000012 	bne	ba38 <_IO_seekmark+0x60>$/;"	l
b9ec	Test/a.s	/^    b9ec:	e5912008 	ldr	r2, [r1, #8]$/;"	l
b9f0	Test/a.s	/^    b9f0:	e5930000 	ldr	r0, [r3]$/;"	l
b9f4	Test/a.s	/^    b9f4:	e3520000 	cmp	r2, #0$/;"	l
b9f8	Test/a.s	/^    b9f8:	ba000012 	blt	ba48 <_IO_seekmark+0x70>$/;"	l
b9fc	Test/a.s	/^    b9fc:	e3100c01 	tst	r0, #256	; 0x100$/;"	l
ba00	Test/a.s	/^    ba00:	0a00000e 	beq	ba40 <_IO_seekmark+0x68>$/;"	l
ba04	Test/a.s	/^    ba04:	e5935008 	ldr	r5, [r3, #8]$/;"	l
ba08	Test/a.s	/^    ba08:	e593402c 	ldr	r4, [r3, #44]	; 0x2c$/;"	l
ba0c	Test/a.s	/^    ba0c:	e593c00c 	ldr	ip, [r3, #12]$/;"	l
ba10	Test/a.s	/^    ba10:	e5931024 	ldr	r1, [r3, #36]	; 0x24$/;"	l
ba14	Test/a.s	/^    ba14:	e3c00c01 	bic	r0, r0, #256	; 0x100$/;"	l
ba18	Test/a.s	/^    ba18:	e5830000 	str	r0, [r3]$/;"	l
ba1c	Test/a.s	/^    ba1c:	e583502c 	str	r5, [r3, #44]	; 0x2c$/;"	l
ba20	Test/a.s	/^    ba20:	e5834008 	str	r4, [r3, #8]$/;"	l
ba24	Test/a.s	/^    ba24:	e583c024 	str	ip, [r3, #36]	; 0x24$/;"	l
ba28	Test/a.s	/^    ba28:	e583100c 	str	r1, [r3, #12]$/;"	l
ba2c	Test/a.s	/^    ba2c:	e0812002 	add	r2, r1, r2$/;"	l
ba30	Test/a.s	/^    ba30:	e5832004 	str	r2, [r3, #4]$/;"	l
ba34	Test/a.s	/^    ba34:	e3a00000 	mov	r0, #0$/;"	l
ba38	Test/a.s	/^    ba38:	e8bd0030 	pop	{r4, r5}$/;"	l
ba3c	Test/a.s	/^    ba3c:	e12fff1e 	bx	lr$/;"	l
ba40	Test/a.s	/^    ba40:	e593100c 	ldr	r1, [r3, #12]$/;"	l
ba44	Test/a.s	/^    ba44:	eafffff8 	b	ba2c <_IO_seekmark+0x54>$/;"	l
ba48	Test/a.s	/^    ba48:	e3100c01 	tst	r0, #256	; 0x100$/;"	l
ba4c	Test/a.s	/^    ba4c:	1a00000a 	bne	ba7c <_IO_seekmark+0xa4>$/;"	l
ba50	Test/a.s	/^    ba50:	e5935008 	ldr	r5, [r3, #8]$/;"	l
ba54	Test/a.s	/^    ba54:	e593102c 	ldr	r1, [r3, #44]	; 0x2c$/;"	l
ba58	Test/a.s	/^    ba58:	e593400c 	ldr	r4, [r3, #12]$/;"	l
ba5c	Test/a.s	/^    ba5c:	e593c024 	ldr	ip, [r3, #36]	; 0x24$/;"	l
ba60	Test/a.s	/^    ba60:	e3800c01 	orr	r0, r0, #256	; 0x100$/;"	l
ba64	Test/a.s	/^    ba64:	e5830000 	str	r0, [r3]$/;"	l
ba68	Test/a.s	/^    ba68:	e583502c 	str	r5, [r3, #44]	; 0x2c$/;"	l
ba6c	Test/a.s	/^    ba6c:	e5831008 	str	r1, [r3, #8]$/;"	l
ba70	Test/a.s	/^    ba70:	e5834024 	str	r4, [r3, #36]	; 0x24$/;"	l
ba74	Test/a.s	/^    ba74:	e583c00c 	str	ip, [r3, #12]$/;"	l
ba78	Test/a.s	/^    ba78:	eaffffeb 	b	ba2c <_IO_seekmark+0x54>$/;"	l
ba7c	Test/a.s	/^    ba7c:	e5931008 	ldr	r1, [r3, #8]$/;"	l
ba80	Test/a.s	/^    ba80:	eaffffe9 	b	ba2c <_IO_seekmark+0x54>$/;"	l
ba84	Test/a.s	/^    ba84:	e5903030 	ldr	r3, [r0, #48]	; 0x30$/;"	l
ba88	Test/a.s	/^    ba88:	e3530000 	cmp	r3, #0$/;"	l
ba8c	Test/a.s	/^    ba8c:	13a03000 	movne	r3, #0$/;"	l
ba90	Test/a.s	/^    ba90:	15803030 	strne	r3, [r0, #48]	; 0x30$/;"	l
ba94	Test/a.s	/^    ba94:	e5903024 	ldr	r3, [r0, #36]	; 0x24$/;"	l
ba98	Test/a.s	/^    ba98:	e3530000 	cmp	r3, #0$/;"	l
ba9c	Test/a.s	/^    ba9c:	012fff1e 	bxeq	lr$/;"	l
baa0	Test/a.s	/^    baa0:	eafffb76 	b	a880 <_IO_free_backup_area>$/;"	l
baa4	Test/a.s	/^    baa4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}$/;"	l
baa8	Test/a.s	/^    baa8:	e5905004 	ldr	r5, [r0, #4]$/;"	l
baac	Test/a.s	/^    baac:	e590700c 	ldr	r7, [r0, #12]$/;"	l
bab0	Test/a.s	/^    bab0:	e1a04000 	mov	r4, r0$/;"	l
bab4	Test/a.s	/^    bab4:	e1550007 	cmp	r5, r7$/;"	l
bab8	Test/a.s	/^    bab8:	e1a06001 	mov	r6, r1$/;"	l
babc	Test/a.s	/^    babc:	8a000013 	bhi	bb10 <_IO_default_pbackfail+0x6c>$/;"	l
bac0	Test/a.s	/^    bac0:	e5902000 	ldr	r2, [r0]$/;"	l
bac4	Test/a.s	/^    bac4:	e3120c01 	tst	r2, #256	; 0x100$/;"	l
bac8	Test/a.s	/^    bac8:	1a000024 	bne	bb60 <_IO_default_pbackfail+0xbc>$/;"	l
bacc	Test/a.s	/^    bacc:	e5940024 	ldr	r0, [r4, #36]	; 0x24$/;"	l
bad0	Test/a.s	/^    bad0:	e3500000 	cmp	r0, #0$/;"	l
bad4	Test/a.s	/^    bad4:	0a000034 	beq	bbac <_IO_default_pbackfail+0x108>$/;"	l
bad8	Test/a.s	/^    bad8:	e1a01005 	mov	r1, r5$/;"	l
badc	Test/a.s	/^    badc:	e594502c 	ldr	r5, [r4, #44]	; 0x2c$/;"	l
bae0	Test/a.s	/^    bae0:	e5943008 	ldr	r3, [r4, #8]$/;"	l
bae4	Test/a.s	/^    bae4:	e3822c01 	orr	r2, r2, #256	; 0x100$/;"	l
bae8	Test/a.s	/^    bae8:	e5842000 	str	r2, [r4]$/;"	l
baec	Test/a.s	/^    baec:	e584000c 	str	r0, [r4, #12]$/;"	l
baf0	Test/a.s	/^    baf0:	e5841024 	str	r1, [r4, #36]	; 0x24$/;"	l
baf4	Test/a.s	/^    baf4:	e584302c 	str	r3, [r4, #44]	; 0x2c$/;"	l
baf8	Test/a.s	/^    baf8:	e5845008 	str	r5, [r4, #8]$/;"	l
bafc	Test/a.s	/^    bafc:	e2453001 	sub	r3, r5, #1$/;"	l
bb00	Test/a.s	/^    bb00:	e5843004 	str	r3, [r4, #4]$/;"	l
bb04	Test/a.s	/^    bb04:	e5456001 	strb	r6, [r5, #-1]$/;"	l
bb08	Test/a.s	/^    bb08:	e20600ff 	and	r0, r6, #255	; 0xff$/;"	l
bb0c	Test/a.s	/^    bb0c:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}$/;"	l
bb10	Test/a.s	/^    bb10:	e5903000 	ldr	r3, [r0]$/;"	l
bb14	Test/a.s	/^    bb14:	e3130c01 	tst	r3, #256	; 0x100$/;"	l
bb18	Test/a.s	/^    bb18:	1afffff7 	bne	bafc <_IO_default_pbackfail+0x58>$/;"	l
bb1c	Test/a.s	/^    bb1c:	e5553001 	ldrb	r3, [r5, #-1]$/;"	l
bb20	Test/a.s	/^    bb20:	e1530001 	cmp	r3, r1$/;"	l
bb24	Test/a.s	/^    bb24:	02455001 	subeq	r5, r5, #1$/;"	l
bb28	Test/a.s	/^    bb28:	05805004 	streq	r5, [r0, #4]$/;"	l
bb2c	Test/a.s	/^    bb2c:	0afffff5 	beq	bb08 <_IO_default_pbackfail+0x64>$/;"	l
bb30	Test/a.s	/^    bb30:	e5903024 	ldr	r3, [r0, #36]	; 0x24$/;"	l
bb34	Test/a.s	/^    bb34:	e3530000 	cmp	r3, #0$/;"	l
bb38	Test/a.s	/^    bb38:	0a00001b 	beq	bbac <_IO_default_pbackfail+0x108>$/;"	l
bb3c	Test/a.s	/^    bb3c:	e1a01005 	mov	r1, r5$/;"	l
bb40	Test/a.s	/^    bb40:	ebfff937 	bl	a024 <save_for_backup>$/;"	l
bb44	Test/a.s	/^    bb44:	e3500000 	cmp	r0, #0$/;"	l
bb48	Test/a.s	/^    bb48:	1a000021 	bne	bbd4 <_IO_default_pbackfail+0x130>$/;"	l
bb4c	Test/a.s	/^    bb4c:	e5941004 	ldr	r1, [r4, #4]$/;"	l
bb50	Test/a.s	/^    bb50:	e5942000 	ldr	r2, [r4]$/;"	l
bb54	Test/a.s	/^    bb54:	e594502c 	ldr	r5, [r4, #44]	; 0x2c$/;"	l
bb58	Test/a.s	/^    bb58:	e5940024 	ldr	r0, [r4, #36]	; 0x24$/;"	l
bb5c	Test/a.s	/^    bb5c:	eaffffdf 	b	bae0 <_IO_default_pbackfail+0x3c>$/;"	l
bb60	Test/a.s	/^    bb60:	e5948008 	ldr	r8, [r4, #8]$/;"	l
bb64	Test/a.s	/^    bb64:	e0678008 	rsb	r8, r7, r8$/;"	l
bb68	Test/a.s	/^    bb68:	e1a09088 	lsl	r9, r8, #1$/;"	l
bb6c	Test/a.s	/^    bb6c:	e1a00009 	mov	r0, r9$/;"	l
bb70	Test/a.s	/^    bb70:	eb0012ca 	bl	106a0 <__libc_malloc>$/;"	l
bb74	Test/a.s	/^    bb74:	e250a000 	subs	sl, r0, #0$/;"	l
bb78	Test/a.s	/^    bb78:	0a000015 	beq	bbd4 <_IO_default_pbackfail+0x130>$/;"	l
bb7c	Test/a.s	/^    bb7c:	e08a5008 	add	r5, sl, r8$/;"	l
bb80	Test/a.s	/^    bb80:	e1a01007 	mov	r1, r7$/;"	l
bb84	Test/a.s	/^    bb84:	e1a02008 	mov	r2, r8$/;"	l
bb88	Test/a.s	/^    bb88:	e1a00005 	mov	r0, r5$/;"	l
bb8c	Test/a.s	/^    bb8c:	eb001e5b 	bl	13500 <memcpy>$/;"	l
bb90	Test/a.s	/^    bb90:	e08a9009 	add	r9, sl, r9$/;"	l
bb94	Test/a.s	/^    bb94:	e594000c 	ldr	r0, [r4, #12]$/;"	l
bb98	Test/a.s	/^    bb98:	eb001408 	bl	10bc0 <__cfree>$/;"	l
bb9c	Test/a.s	/^    bb9c:	e5845028 	str	r5, [r4, #40]	; 0x28$/;"	l
bba0	Test/a.s	/^    bba0:	e5849008 	str	r9, [r4, #8]$/;"	l
bba4	Test/a.s	/^    bba4:	e584a00c 	str	sl, [r4, #12]$/;"	l
bba8	Test/a.s	/^    bba8:	eaffffd3 	b	bafc <_IO_default_pbackfail+0x58>$/;"	l
bbac	Test/a.s	/^    bbac:	e3a00080 	mov	r0, #128	; 0x80$/;"	l
bbb0	Test/a.s	/^    bbb0:	eb0012ba 	bl	106a0 <__libc_malloc>$/;"	l
bbb4	Test/a.s	/^    bbb4:	e3500000 	cmp	r0, #0$/;"	l
bbb8	Test/a.s	/^    bbb8:	0a000005 	beq	bbd4 <_IO_default_pbackfail+0x130>$/;"	l
bbbc	Test/a.s	/^    bbbc:	e2803080 	add	r3, r0, #128	; 0x80$/;"	l
bbc0	Test/a.s	/^    bbc0:	e1a01005 	mov	r1, r5$/;"	l
bbc4	Test/a.s	/^    bbc4:	e5942000 	ldr	r2, [r4]$/;"	l
bbc8	Test/a.s	/^    bbc8:	e5843028 	str	r3, [r4, #40]	; 0x28$/;"	l
bbcc	Test/a.s	/^    bbcc:	e1a05003 	mov	r5, r3$/;"	l
bbd0	Test/a.s	/^    bbd0:	eaffffc2 	b	bae0 <_IO_default_pbackfail+0x3c>$/;"	l
bbd4	Test/a.s	/^    bbd4:	e3e00000 	mvn	r0, #0$/;"	l
bbd8	Test/a.s	/^    bbd8:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}$/;"	l
bbdc	Test/a.s	/^    bbdc:	e3e00000 	mvn	r0, #0$/;"	l
bbe0	Test/a.s	/^    bbe0:	e3e01000 	mvn	r1, #0$/;"	l
bbe4	Test/a.s	/^    bbe4:	e12fff1e 	bx	lr$/;"	l
bbe8	Test/a.s	/^    bbe8:	e3e00000 	mvn	r0, #0$/;"	l
bbec	Test/a.s	/^    bbec:	e12fff1e 	bx	lr$/;"	l
bbf0	Test/a.s	/^    bbf0:	e3e00000 	mvn	r0, #0$/;"	l
bbf4	Test/a.s	/^    bbf4:	e12fff1e 	bx	lr$/;"	l
bbf8	Test/a.s	/^    bbf8:	e3a00000 	mov	r0, #0$/;"	l
bbfc	Test/a.s	/^    bbfc:	e12fff1e 	bx	lr$/;"	l
bc00	Test/a.s	/^    bc00:	e3e00000 	mvn	r0, #0$/;"	l
bc04	Test/a.s	/^    bc04:	e12fff1e 	bx	lr$/;"	l
bc08	Test/a.s	/^    bc08:	e12fff1e 	bx	lr$/;"	l
bc0c	Test/a.s	/^    bc0c:	e59f3004 	ldr	r3, [pc, #4]	; bc18 <_IO_iter_begin+0xc>$/;"	l
bc10	Test/a.s	/^    bc10:	e5930000 	ldr	r0, [r3]$/;"	l
bc14	Test/a.s	/^    bc14:	e12fff1e 	bx	lr$/;"	l
bc18	Test/a.s	/^    bc18:	0008c088 	.word	0x0008c088$/;"	l
bc1c	Test/a.s	/^    bc1c:	e3a00000 	mov	r0, #0$/;"	l
bc20	Test/a.s	/^    bc20:	e12fff1e 	bx	lr$/;"	l
bc24	Test/a.s	/^    bc24:	e5900034 	ldr	r0, [r0, #52]	; 0x34$/;"	l
bc28	Test/a.s	/^    bc28:	e12fff1e 	bx	lr$/;"	l
bc2c	Test/a.s	/^    bc2c:	e12fff1e 	bx	lr$/;"	l
bc30	Test/a.s	/^    bc30:	e92d4070 	push	{r4, r5, r6, lr}$/;"	l
bc34	Test/a.s	/^    bc34:	e59f5068 	ldr	r5, [pc, #104]	; bca4 <_IO_list_lock+0x74>$/;"	l
bc38	Test/a.s	/^    bc38:	ebfff608 	bl	9460 <__aeabi_read_tp>$/;"	l
bc3c	Test/a.s	/^    bc3c:	e5953014 	ldr	r3, [r5, #20]$/;"	l
bc40	Test/a.s	/^    bc40:	e2406d13 	sub	r6, r0, #1216	; 0x4c0$/;"	l
bc44	Test/a.s	/^    bc44:	e1530006 	cmp	r3, r6$/;"	l
bc48	Test/a.s	/^    bc48:	0a00000e 	beq	bc88 <_IO_list_lock+0x58>$/;"	l
bc4c	Test/a.s	/^    bc4c:	e3a01001 	mov	r1, #1$/;"	l
bc50	Test/a.s	/^    bc50:	e285200c 	add	r2, r5, #12$/;"	l
bc54	Test/a.s	/^    bc54:	e3a04000 	mov	r4, #0$/;"	l
bc58	Test/a.s	/^    bc58:	e5923000 	ldr	r3, [r2]$/;"	l
bc5c	Test/a.s	/^    bc5c:	e1530004 	cmp	r3, r4$/;"	l
bc60	Test/a.s	/^    bc60:	1a000005 	bne	bc7c <_IO_list_lock+0x4c>$/;"	l
bc64	Test/a.s	/^    bc64:	e1a00004 	mov	r0, r4$/;"	l
bc68	Test/a.s	/^    bc68:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
bc6c	Test/a.s	/^    bc6c:	e1a0e00f 	mov	lr, pc$/;"	l
bc70	Test/a.s	/^    bc70:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
bc74	Test/a.s	/^    bc74:	3afffff7 	bcc	bc58 <_IO_list_lock+0x28>$/;"	l
bc78	Test/a.s	/^    bc78:	e1a03004 	mov	r3, r4$/;"	l
bc7c	Test/a.s	/^    bc7c:	e1530004 	cmp	r3, r4$/;"	l
bc80	Test/a.s	/^    bc80:	1a000004 	bne	bc98 <_IO_list_lock+0x68>$/;"	l
bc84	Test/a.s	/^    bc84:	e5856014 	str	r6, [r5, #20]$/;"	l
bc88	Test/a.s	/^    bc88:	e5953010 	ldr	r3, [r5, #16]$/;"	l
bc8c	Test/a.s	/^    bc8c:	e2833001 	add	r3, r3, #1$/;"	l
bc90	Test/a.s	/^    bc90:	e5853010 	str	r3, [r5, #16]$/;"	l
bc94	Test/a.s	/^    bc94:	e8bd8070 	pop	{r4, r5, r6, pc}$/;"	l
bc98	Test/a.s	/^    bc98:	e1a00002 	mov	r0, r2$/;"	l
bc9c	Test/a.s	/^    bc9c:	eb0025bb 	bl	15390 <__lll_lock_wait_private>$/;"	l
bca0	Test/a.s	/^    bca0:	eafffff7 	b	bc84 <_IO_list_lock+0x54>$/;"	l
bca4	Test/a.s	/^    bca4:	0008d2b8 	.word	0x0008d2b8$/;"	l
bca8	Test/a.s	/^    bca8:	e92d40f0 	push	{r4, r5, r6, r7, lr}$/;"	l
bcac	Test/a.s	/^    bcac:	e59f5074 	ldr	r5, [pc, #116]	; bd28 <_IO_list_unlock+0x80>$/;"	l
bcb0	Test/a.s	/^    bcb0:	e5953010 	ldr	r3, [r5, #16]$/;"	l
bcb4	Test/a.s	/^    bcb4:	e2433001 	sub	r3, r3, #1$/;"	l
bcb8	Test/a.s	/^    bcb8:	e3530000 	cmp	r3, #0$/;"	l
bcbc	Test/a.s	/^    bcbc:	e5853010 	str	r3, [r5, #16]$/;"	l
bcc0	Test/a.s	/^    bcc0:	18bd80f0 	popne	{r4, r5, r6, r7, pc}$/;"	l
bcc4	Test/a.s	/^    bcc4:	e5853014 	str	r3, [r5, #20]$/;"	l
bcc8	Test/a.s	/^    bcc8:	e595600c 	ldr	r6, [r5, #12]$/;"	l
bccc	Test/a.s	/^    bccc:	e3a01000 	mov	r1, #0$/;"	l
bcd0	Test/a.s	/^    bcd0:	e1a04006 	mov	r4, r6$/;"	l
bcd4	Test/a.s	/^    bcd4:	e59f2050 	ldr	r2, [pc, #80]	; bd2c <_IO_list_unlock+0x84>$/;"	l
bcd8	Test/a.s	/^    bcd8:	e5923000 	ldr	r3, [r2]$/;"	l
bcdc	Test/a.s	/^    bcdc:	e1530004 	cmp	r3, r4$/;"	l
bce0	Test/a.s	/^    bce0:	1a000005 	bne	bcfc <_IO_list_unlock+0x54>$/;"	l
bce4	Test/a.s	/^    bce4:	e1a00004 	mov	r0, r4$/;"	l
bce8	Test/a.s	/^    bce8:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
bcec	Test/a.s	/^    bcec:	e1a0e00f 	mov	lr, pc$/;"	l
bcf0	Test/a.s	/^    bcf0:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
bcf4	Test/a.s	/^    bcf4:	3afffff7 	bcc	bcd8 <_IO_list_unlock+0x30>$/;"	l
bcf8	Test/a.s	/^    bcf8:	e1a03004 	mov	r3, r4$/;"	l
bcfc	Test/a.s	/^    bcfc:	e1560003 	cmp	r6, r3$/;"	l
bd00	Test/a.s	/^    bd00:	1afffff0 	bne	bcc8 <_IO_list_unlock+0x20>$/;"	l
bd04	Test/a.s	/^    bd04:	e3560001 	cmp	r6, #1$/;"	l
bd08	Test/a.s	/^    bd08:	d8bd80f0 	pople	{r4, r5, r6, r7, pc}$/;"	l
bd0c	Test/a.s	/^    bd0c:	e1a00002 	mov	r0, r2$/;"	l
bd10	Test/a.s	/^    bd10:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
bd14	Test/a.s	/^    bd14:	e3a02001 	mov	r2, #1$/;"	l
bd18	Test/a.s	/^    bd18:	e3a03000 	mov	r3, #0$/;"	l
bd1c	Test/a.s	/^    bd1c:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
bd20	Test/a.s	/^    bd20:	ef000000 	svc	0x00000000$/;"	l
bd24	Test/a.s	/^    bd24:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}$/;"	l
bd28	Test/a.s	/^    bd28:	0008d2b8 	.word	0x0008d2b8$/;"	l
bd2c	Test/a.s	/^    bd2c:	0008d2c4 	.word	0x0008d2c4$/;"	l
bd30	Test/a.s	/^    bd30:	e59f3010 	ldr	r3, [pc, #16]	; bd48 <_IO_list_resetlock+0x18>$/;"	l
bd34	Test/a.s	/^    bd34:	e3a02000 	mov	r2, #0$/;"	l
bd38	Test/a.s	/^    bd38:	e583200c 	str	r2, [r3, #12]$/;"	l
bd3c	Test/a.s	/^    bd3c:	e5832010 	str	r2, [r3, #16]$/;"	l
bd40	Test/a.s	/^    bd40:	e5832014 	str	r2, [r3, #20]$/;"	l
bd44	Test/a.s	/^    bd44:	e12fff1e 	bx	lr$/;"	l
bd48	Test/a.s	/^    bd48:	0008d2b8 	.word	0x0008d2b8$/;"	l
bd4c	Test/a.s	/^    bd4c:	e3e02001 	mvn	r2, #1$/;"	l
bd50	Test/a.s	/^    bd50:	e282300e 	add	r3, r2, #14$/;"	l
bd54	Test/a.s	/^    bd54:	e2822002 	add	r2, r2, #2$/;"	l
bd58	Test/a.s	/^    bd58:	e0803103 	add	r3, r0, r3, lsl #2$/;"	l
bd5c	Test/a.s	/^    bd5c:	e35200fc 	cmp	r2, #252	; 0xfc$/;"	l
bd60	Test/a.s	/^    bd60:	e583300c 	str	r3, [r3, #12]$/;"	l
bd64	Test/a.s	/^    bd64:	e5833008 	str	r3, [r3, #8]$/;"	l
bd68	Test/a.s	/^    bd68:	1afffff8 	bne	bd50 <malloc_init_state+0x4>$/;"	l
bd6c	Test/a.s	/^    bd6c:	e59f3034 	ldr	r3, [pc, #52]	; bda8 <malloc_init_state+0x5c>$/;"	l
bd70	Test/a.s	/^    bd70:	e1500003 	cmp	r0, r3$/;"	l
bd74	Test/a.s	/^    bd74:	0a000006 	beq	bd94 <malloc_init_state+0x48>$/;"	l
bd78	Test/a.s	/^    bd78:	e5902004 	ldr	r2, [r0, #4]$/;"	l
bd7c	Test/a.s	/^    bd7c:	e3822002 	orr	r2, r2, #2$/;"	l
bd80	Test/a.s	/^    bd80:	e3822001 	orr	r2, r2, #1$/;"	l
bd84	Test/a.s	/^    bd84:	e2803030 	add	r3, r0, #48	; 0x30$/;"	l
bd88	Test/a.s	/^    bd88:	e5802004 	str	r2, [r0, #4]$/;"	l
bd8c	Test/a.s	/^    bd8c:	e5803030 	str	r3, [r0, #48]	; 0x30$/;"	l
bd90	Test/a.s	/^    bd90:	e12fff1e 	bx	lr$/;"	l
bd94	Test/a.s	/^    bd94:	e59f3010 	ldr	r3, [pc, #16]	; bdac <malloc_init_state+0x60>$/;"	l
bd98	Test/a.s	/^    bd98:	e3a02040 	mov	r2, #64	; 0x40$/;"	l
bd9c	Test/a.s	/^    bd9c:	e5832000 	str	r2, [r3]$/;"	l
bda0	Test/a.s	/^    bda0:	e5902004 	ldr	r2, [r0, #4]$/;"	l
bda4	Test/a.s	/^    bda4:	eafffff5 	b	bd80 <malloc_init_state+0x34>$/;"	l
bda8	Test/a.s	/^    bda8:	0008c4b4 	.word	0x0008c4b4$/;"	l
bdac	Test/a.s	/^    bdac:	0008d2f8 	.word	0x0008d2f8$/;"	l
bdb0	Test/a.s	/^    bdb0:	e59f107c 	ldr	r1, [pc, #124]	; be34 <ptmalloc_unlock_all2+0x84>$/;"	l
bdb4	Test/a.s	/^    bdb4:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}$/;"	l
bdb8	Test/a.s	/^    bdb8:	e5913450 	ldr	r3, [r1, #1104]	; 0x450$/;"	l
bdbc	Test/a.s	/^    bdbc:	e3530000 	cmp	r3, #0$/;"	l
bdc0	Test/a.s	/^    bdc0:	d8bd87f0 	pople	{r4, r5, r6, r7, r8, r9, sl, pc}$/;"	l
bdc4	Test/a.s	/^    bdc4:	e59f506c 	ldr	r5, [pc, #108]	; be38 <ptmalloc_unlock_all2+0x88>$/;"	l
bdc8	Test/a.s	/^    bdc8:	e59f306c 	ldr	r3, [pc, #108]	; be3c <ptmalloc_unlock_all2+0x8c>$/;"	l
bdcc	Test/a.s	/^    bdcc:	e59fa06c 	ldr	sl, [pc, #108]	; be40 <ptmalloc_unlock_all2+0x90>$/;"	l
bdd0	Test/a.s	/^    bdd0:	e595800c 	ldr	r8, [r5, #12]$/;"	l
bdd4	Test/a.s	/^    bdd4:	e59f7068 	ldr	r7, [pc, #104]	; be44 <ptmalloc_unlock_all2+0x94>$/;"	l
bdd8	Test/a.s	/^    bdd8:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
bddc	Test/a.s	/^    bddc:	e3a06000 	mov	r6, #0$/;"	l
bde0	Test/a.s	/^    bde0:	ebfff59e 	bl	9460 <__aeabi_read_tp>$/;"	l
bde4	Test/a.s	/^    bde4:	e9950210 	ldmib	r5, {r4, r9}$/;"	l
bde8	Test/a.s	/^    bde8:	e1a02006 	mov	r2, r6$/;"	l
bdec	Test/a.s	/^    bdec:	e7804003 	str	r4, [r0, r3]$/;"	l
bdf0	Test/a.s	/^    bdf0:	e58a9000 	str	r9, [sl]$/;"	l
bdf4	Test/a.s	/^    bdf4:	e5878000 	str	r8, [r7]$/;"	l
bdf8	Test/a.s	/^    bdf8:	e5856010 	str	r6, [r5, #16]$/;"	l
bdfc	Test/a.s	/^    bdfc:	e1a00006 	mov	r0, r6$/;"	l
be00	Test/a.s	/^    be00:	e1a03001 	mov	r3, r1$/;"	l
be04	Test/a.s	/^    be04:	e1530004 	cmp	r3, r4$/;"	l
be08	Test/a.s	/^    be08:	15832444 	strne	r2, [r3, #1092]	; 0x444$/;"	l
be0c	Test/a.s	/^    be0c:	e5830000 	str	r0, [r3]$/;"	l
be10	Test/a.s	/^    be10:	11a02003 	movne	r2, r3$/;"	l
be14	Test/a.s	/^    be14:	e5933440 	ldr	r3, [r3, #1088]	; 0x440$/;"	l
be18	Test/a.s	/^    be18:	e1530001 	cmp	r3, r1$/;"	l
be1c	Test/a.s	/^    be1c:	1afffff8 	bne	be04 <ptmalloc_unlock_all2+0x54>$/;"	l
be20	Test/a.s	/^    be20:	e3a03000 	mov	r3, #0$/;"	l
be24	Test/a.s	/^    be24:	e5852010 	str	r2, [r5, #16]$/;"	l
be28	Test/a.s	/^    be28:	e5853014 	str	r3, [r5, #20]$/;"	l
be2c	Test/a.s	/^    be2c:	e5853018 	str	r3, [r5, #24]$/;"	l
be30	Test/a.s	/^    be30:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}$/;"	l
be34	Test/a.s	/^    be34:	0008c4b4 	.word	0x0008c4b4$/;"	l
be38	Test/a.s	/^    be38:	0008d2f8 	.word	0x0008d2f8$/;"	l
be3c	Test/a.s	/^    be3c:	0008022c 	.word	0x0008022c$/;"	l
be40	Test/a.s	/^    be40:	0008c954 	.word	0x0008c954$/;"	l
be44	Test/a.s	/^    be44:	0008d350 	.word	0x0008d350$/;"	l
be48	Test/a.s	/^    be48:	e3500000 	cmp	r0, #0$/;"	l
be4c	Test/a.s	/^    be4c:	e52d4004 	push	{r4}		; (str r4, [sp, #-4]!)$/;"	l
be50	Test/a.s	/^    be50:	0a000017 	beq	beb4 <mem2mem_check+0x6c>$/;"	l
be54	Test/a.s	/^    be54:	e5103004 	ldr	r3, [r0, #-4]$/;"	l
be58	Test/a.s	/^    be58:	e2404008 	sub	r4, r0, #8$/;"	l
be5c	Test/a.s	/^    be5c:	e3130002 	tst	r3, #2$/;"	l
be60	Test/a.s	/^    be60:	03a02005 	moveq	r2, #5$/;"	l
be64	Test/a.s	/^    be64:	13a02009 	movne	r2, #9$/;"	l
be68	Test/a.s	/^    be68:	e3c33007 	bic	r3, r3, #7$/;"	l
be6c	Test/a.s	/^    be6c:	e0623003 	rsb	r3, r2, r3$/;"	l
be70	Test/a.s	/^    be70:	e1530001 	cmp	r3, r1$/;"	l
be74	Test/a.s	/^    be74:	9a00000b 	bls	bea8 <mem2mem_check+0x60>$/;"	l
be78	Test/a.s	/^    be78:	e0612003 	rsb	r2, r1, r3$/;"	l
be7c	Test/a.s	/^    be7c:	e35200ff 	cmp	r2, #255	; 0xff$/;"	l
be80	Test/a.s	/^    be80:	83e0c000 	mvnhi	ip, #0$/;"	l
be84	Test/a.s	/^    be84:	8a000002 	bhi	be94 <mem2mem_check+0x4c>$/;"	l
be88	Test/a.s	/^    be88:	ea00000b 	b	bebc <mem2mem_check+0x74>$/;"	l
be8c	Test/a.s	/^    be8c:	e35200ff 	cmp	r2, #255	; 0xff$/;"	l
be90	Test/a.s	/^    be90:	9a000009 	bls	bebc <mem2mem_check+0x74>$/;"	l
be94	Test/a.s	/^    be94:	e7c0c003 	strb	ip, [r0, r3]$/;"	l
be98	Test/a.s	/^    be98:	e24330ff 	sub	r3, r3, #255	; 0xff$/;"	l
be9c	Test/a.s	/^    be9c:	e1510003 	cmp	r1, r3$/;"	l
bea0	Test/a.s	/^    bea0:	e0612003 	rsb	r2, r1, r3$/;"	l
bea4	Test/a.s	/^    bea4:	3afffff8 	bcc	be8c <mem2mem_check+0x44>$/;"	l
bea8	Test/a.s	/^    bea8:	e1a031a4 	lsr	r3, r4, #3$/;"	l
beac	Test/a.s	/^    beac:	e02345a4 	eor	r4, r3, r4, lsr #11$/;"	l
beb0	Test/a.s	/^    beb0:	e7c04001 	strb	r4, [r0, r1]$/;"	l
beb4	Test/a.s	/^    beb4:	e8bd0010 	ldmfd	sp!, {r4}$/;"	l
beb8	Test/a.s	/^    beb8:	e12fff1e 	bx	lr$/;"	l
bebc	Test/a.s	/^    bebc:	e7c02003 	strb	r2, [r0, r3]$/;"	l
bec0	Test/a.s	/^    bec0:	eafffff8 	b	bea8 <mem2mem_check+0x60>$/;"	l
bec4	Test/a.s	/^    bec4:	e92d05f0 	push	{r4, r5, r6, r7, r8, sl}$/;"	l
bec8	Test/a.s	/^    bec8:	e2105007 	ands	r5, r0, #7$/;"	l
becc	Test/a.s	/^    becc:	1a000077 	bne	c0b0 <mem2chunk_check+0x1ec>$/;"	l
bed0	Test/a.s	/^    bed0:	e5103004 	ldr	r3, [r0, #-4]$/;"	l
bed4	Test/a.s	/^    bed4:	e2402008 	sub	r2, r0, #8$/;"	l
bed8	Test/a.s	/^    bed8:	e2137002 	ands	r7, r3, #2$/;"	l
bedc	Test/a.s	/^    bedc:	1a000036 	bne	bfbc <mem2chunk_check+0xf8>$/;"	l
bee0	Test/a.s	/^    bee0:	e59f4230 	ldr	r4, [pc, #560]	; c118 <mem2chunk_check+0x254>$/;"	l
bee4	Test/a.s	/^    bee4:	e3c3c007 	bic	ip, r3, #7$/;"	l
bee8	Test/a.s	/^    bee8:	e5945004 	ldr	r5, [r4, #4]$/;"	l
beec	Test/a.s	/^    beec:	e3150002 	tst	r5, #2$/;"	l
bef0	Test/a.s	/^    bef0:	13a06000 	movne	r6, #0$/;"	l
bef4	Test/a.s	/^    bef4:	03a06001 	moveq	r6, #1$/;"	l
bef8	Test/a.s	/^    bef8:	e3560000 	cmp	r6, #0$/;"	l
befc	Test/a.s	/^    befc:	0a000007 	beq	bf20 <mem2chunk_check+0x5c>$/;"	l
beq	Test/output.s	/^beq _elseLabel_11$/;"	l
beq	Test/output.s	/^beq _elseLabel_16$/;"	l
beq	Test/output.s	/^beq _elseLabel_19$/;"	l
beq	Test/output.s	/^beq _elseLabel_2$/;"	l
beq	Test/output.s	/^beq _elseLabel_22$/;"	l
beq	Test/output.s	/^beq _elseLabel_25$/;"	l
beq	Test/output.s	/^beq _elseLabel_27$/;"	l
beq	Test/output.s	/^beq _elseLabel_35$/;"	l
beq	Test/output.s	/^beq _elseLabel_5$/;"	l
beq	Test/output.s	/^beq _elseLabel_8$/;"	l
beq	Test/output.s	/^beq _whileExitLabel_30$/;"	l
beqz	Test/factotio_mips.s	/^beqz $16, _elseLabel_1$/;"	l
beqz	Test/factotio_mips.s	/^beqz $16, _elseLabel_4$/;"	l
bf00	Test/a.s	/^    bf00:	e5945484 	ldr	r5, [r4, #1156]	; 0x484$/;"	l
bf04	Test/a.s	/^    bf04:	e1520005 	cmp	r2, r5$/;"	l
bf08	Test/a.s	/^    bf08:	3a00007a 	bcc	c0f8 <mem2chunk_check+0x234>$/;"	l
bf0c	Test/a.s	/^    bf0c:	e594a448 	ldr	sl, [r4, #1096]	; 0x448$/;"	l
bf10	Test/a.s	/^    bf10:	e082800c 	add	r8, r2, ip$/;"	l
bf14	Test/a.s	/^    bf14:	e085500a 	add	r5, r5, sl$/;"	l
bf18	Test/a.s	/^    bf18:	e1580005 	cmp	r8, r5$/;"	l
bf1c	Test/a.s	/^    bf1c:	2a000075 	bcs	c0f8 <mem2chunk_check+0x234>$/;"	l
bf20	Test/a.s	/^    bf20:	e35c000f 	cmp	ip, #15$/;"	l
bf24	Test/a.s	/^    bf24:	9a000061 	bls	c0b0 <mem2chunk_check+0x1ec>$/;"	l
bf28	Test/a.s	/^    bf28:	e082500c 	add	r5, r2, ip$/;"	l
bf2c	Test/a.s	/^    bf2c:	e5955004 	ldr	r5, [r5, #4]$/;"	l
bf30	Test/a.s	/^    bf30:	e2155001 	ands	r5, r5, #1$/;"	l
bf34	Test/a.s	/^    bf34:	0a00006d 	beq	c0f0 <mem2chunk_check+0x22c>$/;"	l
bf38	Test/a.s	/^    bf38:	e2133001 	ands	r3, r3, #1$/;"	l
bf3c	Test/a.s	/^    bf3c:	0a00004d 	beq	c078 <mem2chunk_check+0x1b4>$/;"	l
bf40	Test/a.s	/^    bf40:	e28c0003 	add	r0, ip, #3$/;"	l
bf44	Test/a.s	/^    bf44:	e1a061a2 	lsr	r6, r2, #3$/;"	l
bf48	Test/a.s	/^    bf48:	e7d2c000 	ldrb	ip, [r2, r0]$/;"	l
bf4c	Test/a.s	/^    bf4c:	e02665a2 	eor	r6, r6, r2, lsr #11$/;"	l
bf50	Test/a.s	/^    bf50:	e20660ff 	and	r6, r6, #255	; 0xff$/;"	l
bf54	Test/a.s	/^    bf54:	e15c0006 	cmp	ip, r6$/;"	l
bf58	Test/a.s	/^    bf58:	e1a0300c 	mov	r3, ip$/;"	l
bf5c	Test/a.s	/^    bf5c:	e0824000 	add	r4, r2, r0$/;"	l
bf60	Test/a.s	/^    bf60:	0a000010 	beq	bfa8 <mem2chunk_check+0xe4>$/;"	l
bf64	Test/a.s	/^    bf64:	e35c0000 	cmp	ip, #0$/;"	l
bf68	Test/a.s	/^    bf68:	0a000066 	beq	c108 <mem2chunk_check+0x244>$/;"	l
bf6c	Test/a.s	/^    bf6c:	e28cc008 	add	ip, ip, #8$/;"	l
bf70	Test/a.s	/^    bf70:	e150000c 	cmp	r0, ip$/;"	l
bf74	Test/a.s	/^    bf74:	2a000004 	bcs	bf8c <mem2chunk_check+0xc8>$/;"	l
bf78	Test/a.s	/^    bf78:	ea00004c 	b	c0b0 <mem2chunk_check+0x1ec>$/;"	l
bf7c	Test/a.s	/^    bf7c:	e3530000 	cmp	r3, #0$/;"	l
bf80	Test/a.s	/^    bf80:	0a00005e 	beq	c100 <mem2chunk_check+0x23c>$/;"	l
bf84	Test/a.s	/^    bf84:	e1550000 	cmp	r5, r0$/;"	l
bf88	Test/a.s	/^    bf88:	8a000048 	bhi	c0b0 <mem2chunk_check+0x1ec>$/;"	l
bf8c	Test/a.s	/^    bf8c:	e0630000 	rsb	r0, r3, r0$/;"	l
bf90	Test/a.s	/^    bf90:	e7d23000 	ldrb	r3, [r2, r0]$/;"	l
bf94	Test/a.s	/^    bf94:	e0824000 	add	r4, r2, r0$/;"	l
bf98	Test/a.s	/^    bf98:	e1530006 	cmp	r3, r6$/;"	l
bf9c	Test/a.s	/^    bf9c:	e2835008 	add	r5, r3, #8$/;"	l
bfa0	Test/a.s	/^    bfa0:	e1a0c003 	mov	ip, r3$/;"	l
bfa4	Test/a.s	/^    bfa4:	1afffff4 	bne	bf7c <mem2chunk_check+0xb8>$/;"	l
bfa8	Test/a.s	/^    bfa8:	e1e0c00c 	mvn	ip, ip$/;"	l
bfac	Test/a.s	/^    bfac:	e3510000 	cmp	r1, #0$/;"	l
bfb0	Test/a.s	/^    bfb0:	e5c4c000 	strb	ip, [r4]$/;"	l
bfb4	Test/a.s	/^    bfb4:	15814000 	strne	r4, [r1]$/;"	l
bfb8	Test/a.s	/^    bfb8:	ea00003d 	b	c0b4 <mem2chunk_check+0x1f0>$/;"	l
bfbc	Test/a.s	/^    bfbc:	e59fc158 	ldr	ip, [pc, #344]	; c11c <mem2chunk_check+0x258>$/;"	l
bfc0	Test/a.s	/^    bfc0:	e59c4000 	ldr	r4, [ip]$/;"	l
bfc4	Test/a.s	/^    bfc4:	e2444001 	sub	r4, r4, #1$/;"	l
bfc8	Test/a.s	/^    bfc8:	e000c004 	and	ip, r0, r4$/;"	l
bfcc	Test/a.s	/^    bfcc:	e3dc6008 	bics	r6, ip, #8$/;"	l
bfd0	Test/a.s	/^    bfd0:	0a000002 	beq	bfe0 <mem2chunk_check+0x11c>$/;"	l
bfd4	Test/a.s	/^    bfd4:	e35c0020 	cmp	ip, #32$/;"	l
bfd8	Test/a.s	/^    bfd8:	135c0010 	cmpne	ip, #16$/;"	l
bfdc	Test/a.s	/^    bfdc:	1a000037 	bne	c0c0 <mem2chunk_check+0x1fc>$/;"	l
bfe0	Test/a.s	/^    bfe0:	e510c004 	ldr	ip, [r0, #-4]$/;"	l
bfe4	Test/a.s	/^    bfe4:	e20cc003 	and	ip, ip, #3$/;"	l
bfe8	Test/a.s	/^    bfe8:	e35c0002 	cmp	ip, #2$/;"	l
bfec	Test/a.s	/^    bfec:	1a00002f 	bne	c0b0 <mem2chunk_check+0x1ec>$/;"	l
bff0	Test/a.s	/^    bff0:	e5105008 	ldr	r5, [r0, #-8]$/;"	l
bff4	Test/a.s	/^    bff4:	e3c33007 	bic	r3, r3, #7$/;"	l
bff8	Test/a.s	/^    bff8:	e065c002 	rsb	ip, r5, r2$/;"	l
bffc	Test/a.s	/^    bffc:	e0835005 	add	r5, r3, r5$/;"	l
binaryOp	header.h	/^        BINARY_OPERATOR binaryOp;$/;"	m	union:EXPRSemanticValue::__anon6
bl	Test/can_linking_can_work/output.s	/^bl _start_f$/;"	l
bl	Test/output.s	/^bl write_int$/;"	l
bl	Test/output.s	/^bl write_str$/;"	l
block	parser.y	/^block           : decl_list stmt_list $/;"	l
bx	Test/Susceed/s1.s	/^bx lr$/;"	l
bx	Test/can_linking_can_work/output.s	/^bx lr$/;"	l
bx	Test/io_pro_eiplog.S	/^bx lr$/;"	l
bx	Test/output.s	/^bx lr$/;"	l
c	Test/s.s	/^   c:	b480      	push	{r7}$/;"	l
c	Test/simple.c	/^int c;$/;"	v
c000	Test/a.s	/^    c000:	e18cc005 	orr	ip, ip, r5$/;"	l
c004	Test/a.s	/^    c004:	e01c7004 	ands	r7, ip, r4$/;"	l
c008	Test/a.s	/^    c008:	1a000028 	bne	c0b0 <mem2chunk_check+0x1ec>$/;"	l
c00c	Test/a.s	/^    c00c:	e2430001 	sub	r0, r3, #1$/;"	l
c010	Test/a.s	/^    c010:	e1a061a2 	lsr	r6, r2, #3$/;"	l
c014	Test/a.s	/^    c014:	e7d2c000 	ldrb	ip, [r2, r0]$/;"	l
c018	Test/a.s	/^    c018:	e02665a2 	eor	r6, r6, r2, lsr #11$/;"	l
c01c	Test/a.s	/^    c01c:	e20660ff 	and	r6, r6, #255	; 0xff$/;"	l
c020	Test/a.s	/^    c020:	e15c0006 	cmp	ip, r6$/;"	l
c024	Test/a.s	/^    c024:	e1a0300c 	mov	r3, ip$/;"	l
c028	Test/a.s	/^    c028:	e0824000 	add	r4, r2, r0$/;"	l
c02c	Test/a.s	/^    c02c:	0affffdd 	beq	bfa8 <mem2chunk_check+0xe4>$/;"	l
c030	Test/a.s	/^    c030:	e35c0000 	cmp	ip, #0$/;"	l
c034	Test/a.s	/^    c034:	0a000033 	beq	c108 <mem2chunk_check+0x244>$/;"	l
c038	Test/a.s	/^    c038:	e28c5008 	add	r5, ip, #8$/;"	l
c03c	Test/a.s	/^    c03c:	e1500005 	cmp	r0, r5$/;"	l
c040	Test/a.s	/^    c040:	2a000004 	bcs	c058 <mem2chunk_check+0x194>$/;"	l
c044	Test/a.s	/^    c044:	ea00002b 	b	c0f8 <mem2chunk_check+0x234>$/;"	l
c048	Test/a.s	/^    c048:	e3530000 	cmp	r3, #0$/;"	l
c04c	Test/a.s	/^    c04c:	0a00002b 	beq	c100 <mem2chunk_check+0x23c>$/;"	l
c050	Test/a.s	/^    c050:	e1550000 	cmp	r5, r0$/;"	l
c054	Test/a.s	/^    c054:	8a000015 	bhi	c0b0 <mem2chunk_check+0x1ec>$/;"	l
c058	Test/a.s	/^    c058:	e0630000 	rsb	r0, r3, r0$/;"	l
c05c	Test/a.s	/^    c05c:	e7d23000 	ldrb	r3, [r2, r0]$/;"	l
c060	Test/a.s	/^    c060:	e0824000 	add	r4, r2, r0$/;"	l
c064	Test/a.s	/^    c064:	e1530006 	cmp	r3, r6$/;"	l
c068	Test/a.s	/^    c068:	e2835008 	add	r5, r3, #8$/;"	l
c06c	Test/a.s	/^    c06c:	e1a0c003 	mov	ip, r3$/;"	l
c070	Test/a.s	/^    c070:	1afffff4 	bne	c048 <mem2chunk_check+0x184>$/;"	l
c074	Test/a.s	/^    c074:	eaffffcb 	b	bfa8 <mem2chunk_check+0xe4>$/;"	l
c078	Test/a.s	/^    c078:	e5105008 	ldr	r5, [r0, #-8]$/;"	l
c07c	Test/a.s	/^    c07c:	e2150007 	ands	r0, r5, #7$/;"	l
c080	Test/a.s	/^    c080:	1a00001e 	bne	c100 <mem2chunk_check+0x23c>$/;"	l
c084	Test/a.s	/^    c084:	e3560000 	cmp	r6, #0$/;"	l
c088	Test/a.s	/^    c088:	00653002 	rsbeq	r3, r5, r2$/;"	l
c08c	Test/a.s	/^    c08c:	0a000003 	beq	c0a0 <mem2chunk_check+0x1dc>$/;"	l
c090	Test/a.s	/^    c090:	e5944484 	ldr	r4, [r4, #1156]	; 0x484$/;"	l
c094	Test/a.s	/^    c094:	e0653002 	rsb	r3, r5, r2$/;"	l
c098	Test/a.s	/^    c098:	e1530004 	cmp	r3, r4$/;"	l
c09c	Test/a.s	/^    c09c:	3a00001b 	bcc	c110 <mem2chunk_check+0x24c>$/;"	l
c0a0	Test/a.s	/^    c0a0:	e5933004 	ldr	r3, [r3, #4]$/;"	l
c0a4	Test/a.s	/^    c0a4:	e3c33007 	bic	r3, r3, #7$/;"	l
c0a8	Test/a.s	/^    c0a8:	e1550003 	cmp	r5, r3$/;"	l
c0ac	Test/a.s	/^    c0ac:	0affffa3 	beq	bf40 <mem2chunk_check+0x7c>$/;"	l
c0b0	Test/a.s	/^    c0b0:	e3a02000 	mov	r2, #0$/;"	l
c0b4	Test/a.s	/^    c0b4:	e1a00002 	mov	r0, r2$/;"	l
c0b8	Test/a.s	/^    c0b8:	e8bd05f0 	pop	{r4, r5, r6, r7, r8, sl}$/;"	l
c0bc	Test/a.s	/^    c0bc:	e12fff1e 	bx	lr$/;"	l
c0c0	Test/a.s	/^    c0c0:	e35c0080 	cmp	ip, #128	; 0x80$/;"	l
c0c4	Test/a.s	/^    c0c4:	135c0040 	cmpne	ip, #64	; 0x40$/;"	l
c0c8	Test/a.s	/^    c0c8:	0affffc4 	beq	bfe0 <mem2chunk_check+0x11c>$/;"	l
c0cc	Test/a.s	/^    c0cc:	e35c0c02 	cmp	ip, #512	; 0x200$/;"	l
c0d0	Test/a.s	/^    c0d0:	135c0c01 	cmpne	ip, #256	; 0x100$/;"	l
c0d4	Test/a.s	/^    c0d4:	0affffc1 	beq	bfe0 <mem2chunk_check+0x11c>$/;"	l
c0d8	Test/a.s	/^    c0d8:	e35c0b02 	cmp	ip, #2048	; 0x800$/;"	l
c0dc	Test/a.s	/^    c0dc:	135c0b01 	cmpne	ip, #1024	; 0x400$/;"	l
c0e0	Test/a.s	/^    c0e0:	0affffbe 	beq	bfe0 <mem2chunk_check+0x11c>$/;"	l
c0e4	Test/a.s	/^    c0e4:	e35c0a01 	cmp	ip, #4096	; 0x1000$/;"	l
c0e8	Test/a.s	/^    c0e8:	135c0a02 	cmpne	ip, #8192	; 0x2000$/;"	l
c0ec	Test/a.s	/^    c0ec:	2affffbb 	bcs	bfe0 <mem2chunk_check+0x11c>$/;"	l
c0f0	Test/a.s	/^    c0f0:	e1a02005 	mov	r2, r5$/;"	l
c0f4	Test/a.s	/^    c0f4:	eaffffee 	b	c0b4 <mem2chunk_check+0x1f0>$/;"	l
c0f8	Test/a.s	/^    c0f8:	e1a02007 	mov	r2, r7$/;"	l
c0fc	Test/a.s	/^    c0fc:	eaffffec 	b	c0b4 <mem2chunk_check+0x1f0>$/;"	l
c100	Test/a.s	/^    c100:	e1a02003 	mov	r2, r3$/;"	l
c104	Test/a.s	/^    c104:	eaffffea 	b	c0b4 <mem2chunk_check+0x1f0>$/;"	l
c108	Test/a.s	/^    c108:	e1a0200c 	mov	r2, ip$/;"	l
c10c	Test/a.s	/^    c10c:	eaffffe8 	b	c0b4 <mem2chunk_check+0x1f0>$/;"	l
c110	Test/a.s	/^    c110:	e1a02000 	mov	r2, r0$/;"	l
c114	Test/a.s	/^    c114:	eaffffe6 	b	c0b4 <mem2chunk_check+0x1f0>$/;"	l
c118	Test/a.s	/^    c118:	0008c4b4 	.word	0x0008c4b4$/;"	l
c11c	Test/a.s	/^    c11c:	0008c970 	.word	0x0008c970$/;"	l
c120	Test/a.s	/^    c120:	e5912030 	ldr	r2, [r1, #48]	; 0x30$/;"	l
c124	Test/a.s	/^    c124:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}$/;"	l
c128	Test/a.s	/^    c128:	e59f30b0 	ldr	r3, [pc, #176]	; c1e0 <systrim+0xc0>$/;"	l
c12c	Test/a.s	/^    c12c:	e5925004 	ldr	r5, [r2, #4]$/;"	l
c130	Test/a.s	/^    c130:	e5933000 	ldr	r3, [r3]$/;"	l
c134	Test/a.s	/^    c134:	e3c55007 	bic	r5, r5, #7$/;"	l
c138	Test/a.s	/^    c138:	e0600005 	rsb	r0, r0, r5$/;"	l
c13c	Test/a.s	/^    c13c:	e2406011 	sub	r6, r0, #17$/;"	l
c140	Test/a.s	/^    c140:	e2633000 	rsb	r3, r3, #0$/;"	l
c144	Test/a.s	/^    c144:	e0066003 	and	r6, r6, r3$/;"	l
c148	Test/a.s	/^    c148:	e3560000 	cmp	r6, #0$/;"	l
c14c	Test/a.s	/^    c14c:	e1a04001 	mov	r4, r1$/;"	l
c150	Test/a.s	/^    c150:	da000007 	ble	c174 <systrim+0x54>$/;"	l
c154	Test/a.s	/^    c154:	e59f7088 	ldr	r7, [pc, #136]	; c1e4 <systrim+0xc4>$/;"	l
c158	Test/a.s	/^    c158:	e3a00000 	mov	r0, #0$/;"	l
c15c	Test/a.s	/^    c15c:	e5973488 	ldr	r3, [r7, #1160]	; 0x488$/;"	l
c160	Test/a.s	/^    c160:	e12fff33 	blx	r3$/;"	l
c164	Test/a.s	/^    c164:	e5948030 	ldr	r8, [r4, #48]	; 0x30$/;"	l
c168	Test/a.s	/^    c168:	e0888005 	add	r8, r8, r5$/;"	l
c16c	Test/a.s	/^    c16c:	e1580000 	cmp	r8, r0$/;"	l
c170	Test/a.s	/^    c170:	0a000001 	beq	c17c <systrim+0x5c>$/;"	l
c174	Test/a.s	/^    c174:	e3a00000 	mov	r0, #0$/;"	l
c178	Test/a.s	/^    c178:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}$/;"	l
c17c	Test/a.s	/^    c17c:	e5973488 	ldr	r3, [r7, #1160]	; 0x488$/;"	l
c180	Test/a.s	/^    c180:	e2660000 	rsb	r0, r6, #0$/;"	l
c184	Test/a.s	/^    c184:	e12fff33 	blx	r3$/;"	l
c188	Test/a.s	/^    c188:	e59f3058 	ldr	r3, [pc, #88]	; c1e8 <systrim+0xc8>$/;"	l
c18c	Test/a.s	/^    c18c:	e5933000 	ldr	r3, [r3]$/;"	l
c190	Test/a.s	/^    c190:	e3530000 	cmp	r3, #0$/;"	l
c194	Test/a.s	/^    c194:	1a00000f 	bne	c1d8 <systrim+0xb8>$/;"	l
c198	Test/a.s	/^    c198:	e5973488 	ldr	r3, [r7, #1160]	; 0x488$/;"	l
c19c	Test/a.s	/^    c19c:	e3a00000 	mov	r0, #0$/;"	l
c1a0	Test/a.s	/^    c1a0:	e12fff33 	blx	r3$/;"	l
c1a4	Test/a.s	/^    c1a4:	e3500000 	cmp	r0, #0$/;"	l
c1a8	Test/a.s	/^    c1a8:	0afffff1 	beq	c174 <systrim+0x54>$/;"	l
c1ac	Test/a.s	/^    c1ac:	e0580000 	subs	r0, r8, r0$/;"	l
c1b0	Test/a.s	/^    c1b0:	0affffef 	beq	c174 <systrim+0x54>$/;"	l
c1b4	Test/a.s	/^    c1b4:	e5942448 	ldr	r2, [r4, #1096]	; 0x448$/;"	l
c1b8	Test/a.s	/^    c1b8:	e0605005 	rsb	r5, r0, r5$/;"	l
c1bc	Test/a.s	/^    c1bc:	e5943030 	ldr	r3, [r4, #48]	; 0x30$/;"	l
c1c0	Test/a.s	/^    c1c0:	e0600002 	rsb	r0, r0, r2$/;"	l
c1c4	Test/a.s	/^    c1c4:	e3855001 	orr	r5, r5, #1$/;"	l
c1c8	Test/a.s	/^    c1c8:	e5840448 	str	r0, [r4, #1096]	; 0x448$/;"	l
c1cc	Test/a.s	/^    c1cc:	e3a00001 	mov	r0, #1$/;"	l
c1d0	Test/a.s	/^    c1d0:	e5835004 	str	r5, [r3, #4]$/;"	l
c1d4	Test/a.s	/^    c1d4:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}$/;"	l
c1d8	Test/a.s	/^    c1d8:	e12fff33 	blx	r3$/;"	l
c1dc	Test/a.s	/^    c1dc:	eaffffed 	b	c198 <systrim+0x78>$/;"	l
c1e0	Test/a.s	/^    c1e0:	0008c970 	.word	0x0008c970$/;"	l
c1e4	Test/a.s	/^    c1e4:	0008c4b4 	.word	0x0008c4b4$/;"	l
c1e8	Test/a.s	/^    c1e8:	0008d34c 	.word	0x0008d34c$/;"	l
c1ec	Test/a.s	/^    c1ec:	e92d4070 	push	{r4, r5, r6, lr}$/;"	l
c1f0	Test/a.s	/^    c1f0:	e59f6140 	ldr	r6, [pc, #320]	; c338 <ptmalloc_lock_all+0x14c>$/;"	l
c1f4	Test/a.s	/^    c1f4:	e5963450 	ldr	r3, [r6, #1104]	; 0x450$/;"	l
c1f8	Test/a.s	/^    c1f8:	e3530000 	cmp	r3, #0$/;"	l
c1fc	Test/a.s	/^    c1fc:	d8bd8070 	pople	{r4, r5, r6, pc}$/;"	l
c200	Test/a.s	/^    c200:	e3a01001 	mov	r1, #1$/;"	l
c204	Test/a.s	/^    c204:	e59f2130 	ldr	r2, [pc, #304]	; c33c <ptmalloc_lock_all+0x150>$/;"	l
c208	Test/a.s	/^    c208:	e3a04000 	mov	r4, #0$/;"	l
c20c	Test/a.s	/^    c20c:	e5923000 	ldr	r3, [r2]$/;"	l
c210	Test/a.s	/^    c210:	e1530004 	cmp	r3, r4$/;"	l
c214	Test/a.s	/^    c214:	1a000005 	bne	c230 <ptmalloc_lock_all+0x44>$/;"	l
c218	Test/a.s	/^    c218:	e1a00004 	mov	r0, r4$/;"	l
c21c	Test/a.s	/^    c21c:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
c220	Test/a.s	/^    c220:	e1a0e00f 	mov	lr, pc$/;"	l
c224	Test/a.s	/^    c224:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
c228	Test/a.s	/^    c228:	3afffff7 	bcc	c20c <ptmalloc_lock_all+0x20>$/;"	l
c22c	Test/a.s	/^    c22c:	e1a03004 	mov	r3, r4$/;"	l
c230	Test/a.s	/^    c230:	e1530004 	cmp	r3, r4$/;"	l
c234	Test/a.s	/^    c234:	1a000027 	bne	c2d8 <ptmalloc_lock_all+0xec>$/;"	l
c238	Test/a.s	/^    c238:	e59f50f8 	ldr	r5, [pc, #248]	; c338 <ptmalloc_lock_all+0x14c>$/;"	l
c23c	Test/a.s	/^    c23c:	e3a01001 	mov	r1, #1$/;"	l
c240	Test/a.s	/^    c240:	e1a02005 	mov	r2, r5$/;"	l
c244	Test/a.s	/^    c244:	e3a04000 	mov	r4, #0$/;"	l
c248	Test/a.s	/^    c248:	e5923000 	ldr	r3, [r2]$/;"	l
c24c	Test/a.s	/^    c24c:	e1530004 	cmp	r3, r4$/;"	l
c250	Test/a.s	/^    c250:	1a000005 	bne	c26c <ptmalloc_lock_all+0x80>$/;"	l
c254	Test/a.s	/^    c254:	e1a00004 	mov	r0, r4$/;"	l
c258	Test/a.s	/^    c258:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
c25c	Test/a.s	/^    c25c:	e1a0e00f 	mov	lr, pc$/;"	l
c260	Test/a.s	/^    c260:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
c264	Test/a.s	/^    c264:	3afffff7 	bcc	c248 <ptmalloc_lock_all+0x5c>$/;"	l
c268	Test/a.s	/^    c268:	e1a03004 	mov	r3, r4$/;"	l
c26c	Test/a.s	/^    c26c:	e1530004 	cmp	r3, r4$/;"	l
c270	Test/a.s	/^    c270:	1a00002d 	bne	c32c <ptmalloc_lock_all+0x140>$/;"	l
c274	Test/a.s	/^    c274:	e5955440 	ldr	r5, [r5, #1088]	; 0x440$/;"	l
c278	Test/a.s	/^    c278:	e1550006 	cmp	r5, r6$/;"	l
c27c	Test/a.s	/^    c27c:	1affffee 	bne	c23c <ptmalloc_lock_all+0x50>$/;"	l
c280	Test/a.s	/^    c280:	e59f00b8 	ldr	r0, [pc, #184]	; c340 <ptmalloc_lock_all+0x154>$/;"	l
c284	Test/a.s	/^    c284:	e59f10b8 	ldr	r1, [pc, #184]	; c344 <ptmalloc_lock_all+0x158>$/;"	l
c288	Test/a.s	/^    c288:	e5904000 	ldr	r4, [r0]$/;"	l
c28c	Test/a.s	/^    c28c:	e591e000 	ldr	lr, [r1]$/;"	l
c290	Test/a.s	/^    c290:	e59f20b0 	ldr	r2, [pc, #176]	; c348 <ptmalloc_lock_all+0x15c>$/;"	l
c294	Test/a.s	/^    c294:	e59fc0b0 	ldr	ip, [pc, #176]	; c34c <ptmalloc_lock_all+0x160>$/;"	l
c298	Test/a.s	/^    c298:	e59f50b0 	ldr	r5, [pc, #176]	; c350 <ptmalloc_lock_all+0x164>$/;"	l
c29c	Test/a.s	/^    c29c:	e59f30b0 	ldr	r3, [pc, #176]	; c354 <ptmalloc_lock_all+0x168>$/;"	l
c2a0	Test/a.s	/^    c2a0:	e581c000 	str	ip, [r1]$/;"	l
c2a4	Test/a.s	/^    c2a4:	e5805000 	str	r5, [r0]$/;"	l
c2a8	Test/a.s	/^    c2a8:	e582e00c 	str	lr, [r2, #12]$/;"	l
c2ac	Test/a.s	/^    c2ac:	e5824008 	str	r4, [r2, #8]$/;"	l
c2b0	Test/a.s	/^    c2b0:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
c2b4	Test/a.s	/^    c2b4:	ebfff469 	bl	9460 <__aeabi_read_tp>$/;"	l
c2b8	Test/a.s	/^    c2b8:	e790c003 	ldr	ip, [r0, r3]$/;"	l
c2bc	Test/a.s	/^    c2bc:	e3e01000 	mvn	r1, #0$/;"	l
c2c0	Test/a.s	/^    c2c0:	e582c004 	str	ip, [r2, #4]$/;"	l
c2c4	Test/a.s	/^    c2c4:	e7801003 	str	r1, [r0, r3]$/;"	l
c2c8	Test/a.s	/^    c2c8:	e5923018 	ldr	r3, [r2, #24]$/;"	l
c2cc	Test/a.s	/^    c2cc:	e2833001 	add	r3, r3, #1$/;"	l
c2d0	Test/a.s	/^    c2d0:	e5823018 	str	r3, [r2, #24]$/;"	l
c2d4	Test/a.s	/^    c2d4:	e8bd8070 	pop	{r4, r5, r6, pc}$/;"	l
c2d8	Test/a.s	/^    c2d8:	e59f3078 	ldr	r3, [pc, #120]	; c358 <ptmalloc_lock_all+0x16c>$/;"	l
c2dc	Test/a.s	/^    c2dc:	ebfff45f 	bl	9460 <__aeabi_read_tp>$/;"	l
c2e0	Test/a.s	/^    c2e0:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
c2e4	Test/a.s	/^    c2e4:	e7903003 	ldr	r3, [r0, r3]$/;"	l
c2e8	Test/a.s	/^    c2e8:	e3730001 	cmn	r3, #1$/;"	l
c2ec	Test/a.s	/^    c2ec:	02422014 	subeq	r2, r2, #20$/;"	l
c2f0	Test/a.s	/^    c2f0:	0afffff4 	beq	c2c8 <ptmalloc_lock_all+0xdc>$/;"	l
c2f4	Test/a.s	/^    c2f4:	e5923000 	ldr	r3, [r2]$/;"	l
c2f8	Test/a.s	/^    c2f8:	e1530004 	cmp	r3, r4$/;"	l
c2fc	Test/a.s	/^    c2fc:	1a000005 	bne	c318 <ptmalloc_lock_all+0x12c>$/;"	l
c300	Test/a.s	/^    c300:	e1a00004 	mov	r0, r4$/;"	l
c304	Test/a.s	/^    c304:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
c308	Test/a.s	/^    c308:	e1a0e00f 	mov	lr, pc$/;"	l
c30c	Test/a.s	/^    c30c:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
c310	Test/a.s	/^    c310:	3afffff7 	bcc	c2f4 <ptmalloc_lock_all+0x108>$/;"	l
c314	Test/a.s	/^    c314:	e1a03004 	mov	r3, r4$/;"	l
c318	Test/a.s	/^    c318:	e3530000 	cmp	r3, #0$/;"	l
c31c	Test/a.s	/^    c31c:	0affffc5 	beq	c238 <ptmalloc_lock_all+0x4c>$/;"	l
c320	Test/a.s	/^    c320:	e1a00002 	mov	r0, r2$/;"	l
c324	Test/a.s	/^    c324:	eb002419 	bl	15390 <__lll_lock_wait_private>$/;"	l
c328	Test/a.s	/^    c328:	eaffffc2 	b	c238 <ptmalloc_lock_all+0x4c>$/;"	l
c32c	Test/a.s	/^    c32c:	e1a00005 	mov	r0, r5$/;"	l
c330	Test/a.s	/^    c330:	eb002416 	bl	15390 <__lll_lock_wait_private>$/;"	l
c334	Test/a.s	/^    c334:	eaffffce 	b	c274 <ptmalloc_lock_all+0x88>$/;"	l
c338	Test/a.s	/^    c338:	0008c4b4 	.word	0x0008c4b4$/;"	l
c33c	Test/a.s	/^    c33c:	0008d30c 	.word	0x0008d30c$/;"	l
c340	Test/a.s	/^    c340:	0008c954 	.word	0x0008c954$/;"	l
c344	Test/a.s	/^    c344:	0008d350 	.word	0x0008d350$/;"	l
c348	Test/a.s	/^    c348:	0008d2f8 	.word	0x0008d2f8$/;"	l
c34c	Test/a.s	/^    c34c:	0000fb04 	.word	0x0000fb04$/;"	l
c350	Test/a.s	/^    c350:	000108a4 	.word	0x000108a4$/;"	l
c354	Test/a.s	/^    c354:	0007fd54 	.word	0x0007fd54$/;"	l
c358	Test/a.s	/^    c358:	0007fd24 	.word	0x0007fd24$/;"	l
c35c	Test/a.s	/^    c35c:	e92d4070 	push	{r4, r5, r6, lr}$/;"	l
c360	Test/a.s	/^    c360:	e59fc054 	ldr	ip, [pc, #84]	; c3bc <__malloc_assert+0x60>$/;"	l
c364	Test/a.s	/^    c364:	e59fe054 	ldr	lr, [pc, #84]	; c3c0 <__malloc_assert+0x64>$/;"	l
c368	Test/a.s	/^    c368:	e59cc000 	ldr	ip, [ip]$/;"	l
c36c	Test/a.s	/^    c36c:	e59f5050 	ldr	r5, [pc, #80]	; c3c4 <__malloc_assert+0x68>$/;"	l
c370	Test/a.s	/^    c370:	e5dc4000 	ldrb	r4, [ip]$/;"	l
c374	Test/a.s	/^    c374:	e24dd018 	sub	sp, sp, #24$/;"	l
c378	Test/a.s	/^    c378:	e3540000 	cmp	r4, #0$/;"	l
c37c	Test/a.s	/^    c37c:	11a0600e 	movne	r6, lr$/;"	l
c380	Test/a.s	/^    c380:	01a06005 	moveq	r6, r5$/;"	l
c384	Test/a.s	/^    c384:	e3530000 	cmp	r3, #0$/;"	l
c388	Test/a.s	/^    c388:	01a03005 	moveq	r3, r5$/;"	l
c38c	Test/a.s	/^    c38c:	01a0e003 	moveq	lr, r3$/;"	l
c390	Test/a.s	/^    c390:	e88d400e 	stm	sp, {r1, r2, r3, lr}$/;"	l
c394	Test/a.s	/^    c394:	e58d0010 	str	r0, [sp, #16]$/;"	l
c398	Test/a.s	/^    c398:	e1a0200c 	mov	r2, ip$/;"	l
c39c	Test/a.s	/^    c39c:	e1a03006 	mov	r3, r6$/;"	l
c3a0	Test/a.s	/^    c3a0:	e59f1020 	ldr	r1, [pc, #32]	; c3c8 <__malloc_assert+0x6c>$/;"	l
c3a4	Test/a.s	/^    c3a4:	e3a00000 	mov	r0, #0$/;"	l
c3a8	Test/a.s	/^    c3a8:	eb006b67 	bl	2714c <__fxprintf>$/;"	l
c3ac	Test/a.s	/^    c3ac:	e59f3018 	ldr	r3, [pc, #24]	; c3cc <__malloc_assert+0x70>$/;"	l
c3b0	Test/a.s	/^    c3b0:	e5930000 	ldr	r0, [r3]$/;"	l
c3b4	Test/a.s	/^    c3b4:	eb006c68 	bl	2755c <_IO_fflush>$/;"	l
c3b8	Test/a.s	/^    c3b8:	ebfff430 	bl	9480 <abort>$/;"	l
c3bc	Test/a.s	/^    c3bc:	0008c968 	.word	0x0008c968$/;"	l
c3c0	Test/a.s	/^    c3c0:	00071b44 	.word	0x00071b44$/;"	l
c3c4	Test/a.s	/^    c3c4:	00082260 	.word	0x00082260$/;"	l
c3c8	Test/a.s	/^    c3c8:	0006c76c 	.word	0x0006c76c$/;"	l
c3cc	Test/a.s	/^    c3cc:	0008c4a8 	.word	0x0008c4a8$/;"	l
c3d0	Test/a.s	/^    c3d0:	e92d40f0 	push	{r4, r5, r6, r7, lr}$/;"	l
c3d4	Test/a.s	/^    c3d4:	e59f317c 	ldr	r3, [pc, #380]	; c558 <new_heap+0x188>$/;"	l
c3d8	Test/a.s	/^    c3d8:	e0811000 	add	r1, r1, r0$/;"	l
c3dc	Test/a.s	/^    c3dc:	e5935000 	ldr	r5, [r3]$/;"	l
c3e0	Test/a.s	/^    c3e0:	e3510902 	cmp	r1, #32768	; 0x8000$/;"	l
c3e4	Test/a.s	/^    c3e4:	e24dd00c 	sub	sp, sp, #12$/;"	l
c3e8	Test/a.s	/^    c3e8:	e2455001 	sub	r5, r5, #1$/;"	l
c3ec	Test/a.s	/^    c3ec:	3a000039 	bcc	c4d8 <new_heap+0x108>$/;"	l
c3f0	Test/a.s	/^    c3f0:	e3510601 	cmp	r1, #1048576	; 0x100000$/;"	l
c3f4	Test/a.s	/^    c3f4:	8a000039 	bhi	c4e0 <new_heap+0x110>$/;"	l
c3f8	Test/a.s	/^    c3f8:	e59f615c 	ldr	r6, [pc, #348]	; c55c <new_heap+0x18c>$/;"	l
c3fc	Test/a.s	/^    c3fc:	e0811005 	add	r1, r1, r5$/;"	l
c400	Test/a.s	/^    c400:	e596001c 	ldr	r0, [r6, #28]$/;"	l
c404	Test/a.s	/^    c404:	e1c15005 	bic	r5, r1, r5$/;"	l
c408	Test/a.s	/^    c408:	e3500000 	cmp	r0, #0$/;"	l
c40c	Test/a.s	/^    c40c:	0a00001b 	beq	c480 <new_heap+0xb0>$/;"	l
c410	Test/a.s	/^    c410:	e3a07000 	mov	r7, #0$/;"	l
c414	Test/a.s	/^    c414:	e3e03000 	mvn	r3, #0$/;"	l
c418	Test/a.s	/^    c418:	e88d0088 	stm	sp, {r3, r7}$/;"	l
c41c	Test/a.s	/^    c41c:	e1a02007 	mov	r2, r7$/;"	l
c420	Test/a.s	/^    c420:	e3a01601 	mov	r1, #1048576	; 0x100000$/;"	l
c424	Test/a.s	/^    c424:	e59f3134 	ldr	r3, [pc, #308]	; c560 <new_heap+0x190>$/;"	l
c428	Test/a.s	/^    c428:	eb002168 	bl	149d0 <__mmap>$/;"	l
c42c	Test/a.s	/^    c42c:	e3700001 	cmn	r0, #1$/;"	l
c430	Test/a.s	/^    c430:	e1a04000 	mov	r4, r0$/;"	l
c434	Test/a.s	/^    c434:	e586701c 	str	r7, [r6, #28]$/;"	l
c438	Test/a.s	/^    c438:	0a000010 	beq	c480 <new_heap+0xb0>$/;"	l
c43c	Test/a.s	/^    c43c:	e3c034ff 	bic	r3, r0, #-16777216	; 0xff000000$/;"	l
c440	Test/a.s	/^    c440:	e3c3360f 	bic	r3, r3, #15728640	; 0xf00000$/;"	l
c444	Test/a.s	/^    c444:	e1530007 	cmp	r3, r7$/;"	l
c448	Test/a.s	/^    c448:	1a00000a 	bne	c478 <new_heap+0xa8>$/;"	l
c44c	Test/a.s	/^    c44c:	e1a00004 	mov	r0, r4$/;"	l
c450	Test/a.s	/^    c450:	e1a01005 	mov	r1, r5$/;"	l
c454	Test/a.s	/^    c454:	e3a02003 	mov	r2, #3$/;"	l
c458	Test/a.s	/^    c458:	eb002178 	bl	14a40 <__mprotect>$/;"	l
c45c	Test/a.s	/^    c45c:	e3500000 	cmp	r0, #0$/;"	l
c460	Test/a.s	/^    c460:	05845008 	streq	r5, [r4, #8]$/;"	l
c464	Test/a.s	/^    c464:	0584500c 	streq	r5, [r4, #12]$/;"	l
c468	Test/a.s	/^    c468:	1a000025 	bne	c504 <new_heap+0x134>$/;"	l
c46c	Test/a.s	/^    c46c:	e1a00004 	mov	r0, r4$/;"	l
c470	Test/a.s	/^    c470:	e28dd00c 	add	sp, sp, #12$/;"	l
c474	Test/a.s	/^    c474:	e8bd80f0 	pop	{r4, r5, r6, r7, pc}$/;"	l
c478	Test/a.s	/^    c478:	e3a01601 	mov	r1, #1048576	; 0x100000$/;"	l
c47c	Test/a.s	/^    c47c:	eb002167 	bl	14a20 <__munmap>$/;"	l
c480	Test/a.s	/^    c480:	e3a07000 	mov	r7, #0$/;"	l
c484	Test/a.s	/^    c484:	e3e03000 	mvn	r3, #0$/;"	l
c488	Test/a.s	/^    c488:	e88d0088 	stm	sp, {r3, r7}$/;"	l
c48c	Test/a.s	/^    c48c:	e3a01602 	mov	r1, #2097152	; 0x200000$/;"	l
c490	Test/a.s	/^    c490:	e1a00007 	mov	r0, r7$/;"	l
c494	Test/a.s	/^    c494:	e1a02007 	mov	r2, r7$/;"	l
c498	Test/a.s	/^    c498:	e59f30c0 	ldr	r3, [pc, #192]	; c560 <new_heap+0x190>$/;"	l
c49c	Test/a.s	/^    c49c:	eb00214b 	bl	149d0 <__mmap>$/;"	l
c4a0	Test/a.s	/^    c4a0:	e3700001 	cmn	r0, #1$/;"	l
c4a4	Test/a.s	/^    c4a4:	e1a01000 	mov	r1, r0$/;"	l
c4a8	Test/a.s	/^    c4a8:	0a000019 	beq	c514 <new_heap+0x144>$/;"	l
c4ac	Test/a.s	/^    c4ac:	e241437f 	sub	r4, r1, #-67108863	; 0xfc000001$/;"	l
c4b0	Test/a.s	/^    c4b0:	e244463f 	sub	r4, r4, #66060288	; 0x3f00000$/;"	l
c4b4	Test/a.s	/^    c4b4:	e1a04a24 	lsr	r4, r4, #20$/;"	l
c4b8	Test/a.s	/^    c4b8:	e1a04a04 	lsl	r4, r4, #20$/;"	l
c4bc	Test/a.s	/^    c4bc:	e0547001 	subs	r7, r4, r1$/;"	l
c4c0	Test/a.s	/^    c4c0:	02840601 	addeq	r0, r4, #1048576	; 0x100000$/;"	l
c4c4	Test/a.s	/^    c4c4:	0586001c 	streq	r0, [r6, #28]$/;"	l
c4c8	Test/a.s	/^    c4c8:	1a000009 	bne	c4f4 <new_heap+0x124>$/;"	l
c4cc	Test/a.s	/^    c4cc:	e2671601 	rsb	r1, r7, #1048576	; 0x100000$/;"	l
c4d0	Test/a.s	/^    c4d0:	eb002152 	bl	14a20 <__munmap>$/;"	l
c4d4	Test/a.s	/^    c4d4:	eaffffdc 	b	c44c <new_heap+0x7c>$/;"	l
c4d8	Test/a.s	/^    c4d8:	e3a01902 	mov	r1, #32768	; 0x8000$/;"	l
c4dc	Test/a.s	/^    c4dc:	eaffffc5 	b	c3f8 <new_heap+0x28>$/;"	l
c4e0	Test/a.s	/^    c4e0:	e3500601 	cmp	r0, #1048576	; 0x100000$/;"	l
c4e4	Test/a.s	/^    c4e4:	93a01601 	movls	r1, #1048576	; 0x100000$/;"	l
c4e8	Test/a.s	/^    c4e8:	9affffc2 	bls	c3f8 <new_heap+0x28>$/;"	l
c4ec	Test/a.s	/^    c4ec:	e3a04000 	mov	r4, #0$/;"	l
c4f0	Test/a.s	/^    c4f0:	eaffffdd 	b	c46c <new_heap+0x9c>$/;"	l
c4f4	Test/a.s	/^    c4f4:	e1a01007 	mov	r1, r7$/;"	l
c4f8	Test/a.s	/^    c4f8:	eb002148 	bl	14a20 <__munmap>$/;"	l
c4fc	Test/a.s	/^    c4fc:	e2840601 	add	r0, r4, #1048576	; 0x100000$/;"	l
c500	Test/a.s	/^    c500:	eafffff1 	b	c4cc <new_heap+0xfc>$/;"	l
c504	Test/a.s	/^    c504:	e1a00004 	mov	r0, r4$/;"	l
c508	Test/a.s	/^    c508:	e3a01601 	mov	r1, #1048576	; 0x100000$/;"	l
c50c	Test/a.s	/^    c50c:	eb002143 	bl	14a20 <__munmap>$/;"	l
c510	Test/a.s	/^    c510:	eafffff5 	b	c4ec <new_heap+0x11c>$/;"	l
c514	Test/a.s	/^    c514:	e88d0082 	stm	sp, {r1, r7}$/;"	l
c518	Test/a.s	/^    c518:	e1a00007 	mov	r0, r7$/;"	l
c51c	Test/a.s	/^    c51c:	e3a01601 	mov	r1, #1048576	; 0x100000$/;"	l
c520	Test/a.s	/^    c520:	e1a02007 	mov	r2, r7$/;"	l
c524	Test/a.s	/^    c524:	e59f3034 	ldr	r3, [pc, #52]	; c560 <new_heap+0x190>$/;"	l
c528	Test/a.s	/^    c528:	eb002128 	bl	149d0 <__mmap>$/;"	l
c52c	Test/a.s	/^    c52c:	e3700001 	cmn	r0, #1$/;"	l
c530	Test/a.s	/^    c530:	e1a04000 	mov	r4, r0$/;"	l
c534	Test/a.s	/^    c534:	0affffec 	beq	c4ec <new_heap+0x11c>$/;"	l
c538	Test/a.s	/^    c538:	e3c034ff 	bic	r3, r0, #-16777216	; 0xff000000$/;"	l
c53c	Test/a.s	/^    c53c:	e3c3360f 	bic	r3, r3, #15728640	; 0xf00000$/;"	l
c540	Test/a.s	/^    c540:	e3530000 	cmp	r3, #0$/;"	l
c544	Test/a.s	/^    c544:	0affffc0 	beq	c44c <new_heap+0x7c>$/;"	l
c548	Test/a.s	/^    c548:	e3a01601 	mov	r1, #1048576	; 0x100000$/;"	l
c54c	Test/a.s	/^    c54c:	e1a04007 	mov	r4, r7$/;"	l
c550	Test/a.s	/^    c550:	eb002132 	bl	14a20 <__munmap>$/;"	l
c554	Test/a.s	/^    c554:	eaffffc4 	b	c46c <new_heap+0x9c>$/;"	l
c558	Test/a.s	/^    c558:	0008c970 	.word	0x0008c970$/;"	l
c55c	Test/a.s	/^    c55c:	0008d2f8 	.word	0x0008d2f8$/;"	l
c560	Test/a.s	/^    c560:	00004022 	.word	0x00004022$/;"	l
c564	Test/a.s	/^    c564:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
c568	Test/a.s	/^    c568:	e59c2024 	ldr	r2, [ip, #36]	; 0x24$/;"	l
c56c	Test/a.s	/^    c56c:	e24dde8b 	sub	sp, sp, #2224	; 0x8b0$/;"	l
c570	Test/a.s	/^    c570:	e2823001 	add	r3, r2, #1$/;"	l
c574	Test/a.s	/^    c574:	e24dd004 	sub	sp, sp, #4$/;"	l
c578	Test/a.s	/^    c578:	e1a0a000 	mov	sl, r0$/;"	l
c57c	Test/a.s	/^    c57c:	e58c3024 	str	r3, [ip, #36]	; 0x24$/;"	l
c580	Test/a.s	/^    c580:	e59c0020 	ldr	r0, [ip, #32]$/;"	l
c584	Test/a.s	/^    c584:	e59f1428 	ldr	r1, [pc, #1064]	; c9b4 <mi_arena.15829+0x450>$/;"	l
c588	Test/a.s	/^    c588:	e58dc014 	str	ip, [sp, #20]$/;"	l
c58c	Test/a.s	/^    c58c:	e3a04000 	mov	r4, #0$/;"	l
c590	Test/a.s	/^    c590:	eb006875 	bl	2676c <__fprintf>$/;"	l
c594	Test/a.s	/^    c594:	e1a0200a 	mov	r2, sl$/;"	l
c598	Test/a.s	/^    c598:	e3a01001 	mov	r1, #1$/;"	l
c59c	Test/a.s	/^    c59c:	e5923000 	ldr	r3, [r2]$/;"	l
c5a0	Test/a.s	/^    c5a0:	e1530004 	cmp	r3, r4$/;"	l
c5a4	Test/a.s	/^    c5a4:	1a000005 	bne	c5c0 <mi_arena.15829+0x5c>$/;"	l
c5a8	Test/a.s	/^    c5a8:	e1a00004 	mov	r0, r4$/;"	l
c5ac	Test/a.s	/^    c5ac:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
c5b0	Test/a.s	/^    c5b0:	e1a0e00f 	mov	lr, pc$/;"	l
c5b4	Test/a.s	/^    c5b4:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
c5b8	Test/a.s	/^    c5b8:	3afffff7 	bcc	c59c <mi_arena.15829+0x38>$/;"	l
c5bc	Test/a.s	/^    c5bc:	e1a03004 	mov	r3, r4$/;"	l
c5c0	Test/a.s	/^    c5c0:	e1530004 	cmp	r3, r4$/;"	l
c5c4	Test/a.s	/^    c5c4:	1a0000f7 	bne	c9a8 <mi_arena.15829+0x444>$/;"	l
c5c8	Test/a.s	/^    c5c8:	e3a02000 	mov	r2, #0$/;"	l
c5cc	Test/a.s	/^    c5cc:	e3a05000 	mov	r5, #0$/;"	l
c5d0	Test/a.s	/^    c5d0:	e28dc020 	add	ip, sp, #32$/;"	l
c5d4	Test/a.s	/^    c5d4:	e58d5018 	str	r5, [sp, #24]$/;"	l
c5d8	Test/a.s	/^    c5d8:	e28d0024 	add	r0, sp, #36	; 0x24$/;"	l
c5dc	Test/a.s	/^    c5dc:	e28d1028 	add	r1, sp, #40	; 0x28$/;"	l
c5e0	Test/a.s	/^    c5e0:	e1a0500c 	mov	r5, ip$/;"	l
c5e4	Test/a.s	/^    c5e4:	e28c40a8 	add	r4, ip, #168	; 0xa8$/;"	l
c5e8	Test/a.s	/^    c5e8:	e58d201c 	str	r2, [sp, #28]$/;"	l
c5ec	Test/a.s	/^    c5ec:	e1a0e00a 	mov	lr, sl$/;"	l
c5f0	Test/a.s	/^    c5f0:	e1a06002 	mov	r6, r2$/;"	l
c5f4	Test/a.s	/^    c5f4:	e1a07002 	mov	r7, r2$/;"	l
c5f8	Test/a.s	/^    c5f8:	e59e3008 	ldr	r3, [lr, #8]$/;"	l
c5fc	Test/a.s	/^    c5fc:	e3530000 	cmp	r3, #0$/;"	l
c600	Test/a.s	/^    c600:	0a0000c3 	beq	c914 <mi_arena.15829+0x3b0>$/;"	l
c604	Test/a.s	/^    c604:	e593c004 	ldr	ip, [r3, #4]$/;"	l
c608	Test/a.s	/^    c608:	e3a02000 	mov	r2, #0$/;"	l
c60c	Test/a.s	/^    c60c:	e3ccc007 	bic	ip, ip, #7$/;"	l
c610	Test/a.s	/^    c610:	e5933008 	ldr	r3, [r3, #8]$/;"	l
c614	Test/a.s	/^    c614:	e2822001 	add	r2, r2, #1$/;"	l
c618	Test/a.s	/^    c618:	e3530000 	cmp	r3, #0$/;"	l
c61c	Test/a.s	/^    c61c:	1afffffb 	bne	c610 <mi_arena.15829+0xac>$/;"	l
c620	Test/a.s	/^    c620:	e027729c 	mla	r7, ip, r2, r7$/;"	l
c624	Test/a.s	/^    c624:	e24c3007 	sub	r3, ip, #7$/;"	l
c628	Test/a.s	/^    c628:	e501c004 	str	ip, [r1, #-4]$/;"	l
c62c	Test/a.s	/^    c62c:	e5013008 	str	r3, [r1, #-8]$/;"	l
c630	Test/a.s	/^    c630:	e0866002 	add	r6, r6, r2$/;"	l
c634	Test/a.s	/^    c634:	e5802008 	str	r2, [r0, #8]$/;"	l
c638	Test/a.s	/^    c638:	e5113004 	ldr	r3, [r1, #-4]$/;"	l
c63c	Test/a.s	/^    c63c:	e2811010 	add	r1, r1, #16$/;"	l
c640	Test/a.s	/^    c640:	e0020293 	mul	r2, r3, r2$/;"	l
c644	Test/a.s	/^    c644:	e1510004 	cmp	r1, r4$/;"	l
c648	Test/a.s	/^    c648:	e5802004 	str	r2, [r0, #4]$/;"	l
c64c	Test/a.s	/^    c64c:	e28ee004 	add	lr, lr, #4$/;"	l
c650	Test/a.s	/^    c650:	e2800010 	add	r0, r0, #16$/;"	l
c654	Test/a.s	/^    c654:	1affffe7 	bne	c5f8 <mi_arena.15829+0x94>$/;"	l
c658	Test/a.s	/^    c658:	e59a3038 	ldr	r3, [sl, #56]	; 0x38$/;"	l
c65c	Test/a.s	/^    c65c:	e58d601c 	str	r6, [sp, #28]$/;"	l
c660	Test/a.s	/^    c660:	e3530000 	cmp	r3, #0$/;"	l
c664	Test/a.s	/^    c664:	e58d7018 	str	r7, [sp, #24]$/;"	l
c668	Test/a.s	/^    c668:	e28ac030 	add	ip, sl, #48	; 0x30$/;"	l
c66c	Test/a.s	/^    c66c:	0a0000b6 	beq	c94c <mi_arena.15829+0x3e8>$/;"	l
c670	Test/a.s	/^    c670:	e15c0003 	cmp	ip, r3$/;"	l
c674	Test/a.s	/^    c674:	e59d80cc 	ldr	r8, [sp, #204]	; 0xcc$/;"	l
c678	Test/a.s	/^    c678:	e59d60c8 	ldr	r6, [sp, #200]	; 0xc8$/;"	l
c67c	Test/a.s	/^    c67c:	0a000011 	beq	c6c8 <mi_arena.15829+0x164>$/;"	l
c680	Test/a.s	/^    c680:	e2888001 	add	r8, r8, #1$/;"	l
c684	Test/a.s	/^    c684:	e59d00c0 	ldr	r0, [sp, #192]	; 0xc0$/;"	l
c688	Test/a.s	/^    c688:	e59d10c4 	ldr	r1, [sp, #196]	; 0xc4$/;"	l
c68c	Test/a.s	/^    c68c:	ea000000 	b	c694 <mi_arena.15829+0x130>$/;"	l
c690	Test/a.s	/^    c690:	e1a08002 	mov	r8, r2$/;"	l
c694	Test/a.s	/^    c694:	e993000c 	ldmib	r3, {r2, r3}$/;"	l
c698	Test/a.s	/^    c698:	e1500002 	cmp	r0, r2$/;"	l
c69c	Test/a.s	/^    c69c:	21a00002 	movcs	r0, r2$/;"	l
c6a0	Test/a.s	/^    c6a0:	e1510002 	cmp	r1, r2$/;"	l
c6a4	Test/a.s	/^    c6a4:	31a01002 	movcc	r1, r2$/;"	l
c6a8	Test/a.s	/^    c6a8:	e15c0003 	cmp	ip, r3$/;"	l
c6ac	Test/a.s	/^    c6ac:	e0866002 	add	r6, r6, r2$/;"	l
c6b0	Test/a.s	/^    c6b0:	e2882001 	add	r2, r8, #1$/;"	l
c6b4	Test/a.s	/^    c6b4:	1afffff5 	bne	c690 <mi_arena.15829+0x12c>$/;"	l
c6b8	Test/a.s	/^    c6b8:	e58d80cc 	str	r8, [sp, #204]	; 0xcc$/;"	l
c6bc	Test/a.s	/^    c6bc:	e58d60c8 	str	r6, [sp, #200]	; 0xc8$/;"	l
c6c0	Test/a.s	/^    c6c0:	e58d00c0 	str	r0, [sp, #192]	; 0xc0$/;"	l
c6c4	Test/a.s	/^    c6c4:	e58d10c4 	str	r1, [sp, #196]	; 0xc4$/;"	l
c6c8	Test/a.s	/^    c6c8:	e3a09000 	mov	r9, #0$/;"	l
c6cc	Test/a.s	/^    c6cc:	e1a0b009 	mov	fp, r9$/;"	l
c6d0	Test/a.s	/^    c6d0:	e28d4020 	add	r4, sp, #32$/;"	l
c6d4	Test/a.s	/^    c6d4:	e289700e 	add	r7, r9, #14$/;"	l
c6d8	Test/a.s	/^    c6d8:	e08a7107 	add	r7, sl, r7, lsl #2$/;"	l
c6dc	Test/a.s	/^    c6dc:	e5973008 	ldr	r3, [r7, #8]$/;"	l
c6e0	Test/a.s	/^    c6e0:	e3e0c000 	mvn	ip, #0$/;"	l
c6e4	Test/a.s	/^    c6e4:	e3530000 	cmp	r3, #0$/;"	l
c6e8	Test/a.s	/^    c6e8:	e584c0b0 	str	ip, [r4, #176]	; 0xb0$/;"	l
c6ec	Test/a.s	/^    c6ec:	e584b0bc 	str	fp, [r4, #188]	; 0xbc$/;"	l
c6f0	Test/a.s	/^    c6f0:	e584b0b8 	str	fp, [r4, #184]	; 0xb8$/;"	l
c6f4	Test/a.s	/^    c6f4:	e584b0b4 	str	fp, [r4, #180]	; 0xb4$/;"	l
c6f8	Test/a.s	/^    c6f8:	0a000014 	beq	c750 <mi_arena.15829+0x1ec>$/;"	l
c6fc	Test/a.s	/^    c6fc:	e1570003 	cmp	r7, r3$/;"	l
c700	Test/a.s	/^    c700:	0a000012 	beq	c750 <mi_arena.15829+0x1ec>$/;"	l
c704	Test/a.s	/^    c704:	e3a01000 	mov	r1, #0$/;"	l
c708	Test/a.s	/^    c708:	e1a00001 	mov	r0, r1$/;"	l
c70c	Test/a.s	/^    c70c:	e3e0c000 	mvn	ip, #0$/;"	l
c710	Test/a.s	/^    c710:	e3a0e001 	mov	lr, #1$/;"	l
c714	Test/a.s	/^    c714:	ea000000 	b	c71c <mi_arena.15829+0x1b8>$/;"	l
c718	Test/a.s	/^    c718:	e1a0e002 	mov	lr, r2$/;"	l
c71c	Test/a.s	/^    c71c:	e993000c 	ldmib	r3, {r2, r3}$/;"	l
c720	Test/a.s	/^    c720:	e15c0002 	cmp	ip, r2$/;"	l
c724	Test/a.s	/^    c724:	21a0c002 	movcs	ip, r2$/;"	l
c728	Test/a.s	/^    c728:	e1500002 	cmp	r0, r2$/;"	l
c72c	Test/a.s	/^    c72c:	31a00002 	movcc	r0, r2$/;"	l
c730	Test/a.s	/^    c730:	e1570003 	cmp	r7, r3$/;"	l
c734	Test/a.s	/^    c734:	e0811002 	add	r1, r1, r2$/;"	l
c738	Test/a.s	/^    c738:	e28e2001 	add	r2, lr, #1$/;"	l
c73c	Test/a.s	/^    c73c:	1afffff5 	bne	c718 <mi_arena.15829+0x1b4>$/;"	l
c740	Test/a.s	/^    c740:	e584c0b0 	str	ip, [r4, #176]	; 0xb0$/;"	l
c744	Test/a.s	/^    c744:	e584e0bc 	str	lr, [r4, #188]	; 0xbc$/;"	l
c748	Test/a.s	/^    c748:	e58410b8 	str	r1, [r4, #184]	; 0xb8$/;"	l
c74c	Test/a.s	/^    c74c:	e58400b4 	str	r0, [r4, #180]	; 0xb4$/;"	l
c750	Test/a.s	/^    c750:	e59430bc 	ldr	r3, [r4, #188]	; 0xbc$/;"	l
c754	Test/a.s	/^    c754:	e59420b8 	ldr	r2, [r4, #184]	; 0xb8$/;"	l
c758	Test/a.s	/^    c758:	e3530000 	cmp	r3, #0$/;"	l
c75c	Test/a.s	/^    c75c:	e2899002 	add	r9, r9, #2$/;"	l
c760	Test/a.s	/^    c760:	058430b0 	streq	r3, [r4, #176]	; 0xb0$/;"	l
c764	Test/a.s	/^    c764:	e35900fc 	cmp	r9, #252	; 0xfc$/;"	l
c768	Test/a.s	/^    c768:	e0888003 	add	r8, r8, r3$/;"	l
c76c	Test/a.s	/^    c76c:	e0866002 	add	r6, r6, r2$/;"	l
c770	Test/a.s	/^    c770:	e2844010 	add	r4, r4, #16$/;"	l
c774	Test/a.s	/^    c774:	1affffd6 	bne	c6d4 <mi_arena.15829+0x170>$/;"	l
c778	Test/a.s	/^    c778:	e59a7000 	ldr	r7, [sl]$/;"	l
c77c	Test/a.s	/^    c77c:	e3a01000 	mov	r1, #0$/;"	l
c780	Test/a.s	/^    c780:	e1a04007 	mov	r4, r7$/;"	l
c784	Test/a.s	/^    c784:	e1a0200a 	mov	r2, sl$/;"	l
c788	Test/a.s	/^    c788:	e5923000 	ldr	r3, [r2]$/;"	l
c78c	Test/a.s	/^    c78c:	e1530004 	cmp	r3, r4$/;"	l
c790	Test/a.s	/^    c790:	1a000005 	bne	c7ac <mi_arena.15829+0x248>$/;"	l
c794	Test/a.s	/^    c794:	e1a00004 	mov	r0, r4$/;"	l
c798	Test/a.s	/^    c798:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
c79c	Test/a.s	/^    c79c:	e1a0e00f 	mov	lr, pc$/;"	l
c7a0	Test/a.s	/^    c7a0:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
c7a4	Test/a.s	/^    c7a4:	3afffff7 	bcc	c788 <mi_arena.15829+0x224>$/;"	l
c7a8	Test/a.s	/^    c7a8:	e1a03004 	mov	r3, r4$/;"	l
c7ac	Test/a.s	/^    c7ac:	e1570003 	cmp	r7, r3$/;"	l
c7b0	Test/a.s	/^    c7b0:	1afffff0 	bne	c778 <mi_arena.15829+0x214>$/;"	l
c7b4	Test/a.s	/^    c7b4:	e3570001 	cmp	r7, #1$/;"	l
c7b8	Test/a.s	/^    c7b8:	ca000073 	bgt	c98c <mi_arena.15829+0x428>$/;"	l
c7bc	Test/a.s	/^    c7bc:	e59d1014 	ldr	r1, [sp, #20]$/;"	l
c7c0	Test/a.s	/^    c7c0:	e59d3014 	ldr	r3, [sp, #20]$/;"	l
c7c4	Test/a.s	/^    c7c4:	e591001c 	ldr	r0, [r1, #28]$/;"	l
c7c8	Test/a.s	/^    c7c8:	e59dc018 	ldr	ip, [sp, #24]$/;"	l
c7cc	Test/a.s	/^    c7cc:	e5911018 	ldr	r1, [r1, #24]$/;"	l
c7d0	Test/a.s	/^    c7d0:	e5932014 	ldr	r2, [r3, #20]$/;"	l
c7d4	Test/a.s	/^    c7d4:	e59d401c 	ldr	r4, [sp, #28]$/;"	l
c7d8	Test/a.s	/^    c7d8:	e5933010 	ldr	r3, [r3, #16]$/;"	l
c7dc	Test/a.s	/^    c7dc:	e081100c 	add	r1, r1, ip$/;"	l
c7e0	Test/a.s	/^    c7e0:	e59dc014 	ldr	ip, [sp, #20]$/;"	l
c7e4	Test/a.s	/^    c7e4:	e0800004 	add	r0, r0, r4$/;"	l
c7e8	Test/a.s	/^    c7e8:	e0822008 	add	r2, r2, r8$/;"	l
c7ec	Test/a.s	/^    c7ec:	e0833006 	add	r3, r3, r6$/;"	l
c7f0	Test/a.s	/^    c7f0:	e28d702c 	add	r7, sp, #44	; 0x2c$/;"	l
c7f4	Test/a.s	/^    c7f4:	e58c001c 	str	r0, [ip, #28]$/;"	l
c7f8	Test/a.s	/^    c7f8:	e58c1018 	str	r1, [ip, #24]$/;"	l
c7fc	Test/a.s	/^    c7fc:	e58c2014 	str	r2, [ip, #20]$/;"	l
c800	Test/a.s	/^    c800:	e58c3010 	str	r3, [ip, #16]$/;"	l
c804	Test/a.s	/^    c804:	e3a04001 	mov	r4, #1$/;"	l
c808	Test/a.s	/^    c808:	e1a0900c 	mov	r9, ip$/;"	l
c80c	Test/a.s	/^    c80c:	ea000002 	b	c81c <mi_arena.15829+0x2b8>$/;"	l
c810	Test/a.s	/^    c810:	e2877010 	add	r7, r7, #16$/;"	l
c814	Test/a.s	/^    c814:	e2855010 	add	r5, r5, #16$/;"	l
c818	Test/a.s	/^    c818:	e2844001 	add	r4, r4, #1$/;"	l
c81c	Test/a.s	/^    c81c:	e595c00c 	ldr	ip, [r5, #12]$/;"	l
c820	Test/a.s	/^    c820:	e35c0000 	cmp	ip, #0$/;"	l
c824	Test/a.s	/^    c824:	0a000009 	beq	c850 <mi_arena.15829+0x2ec>$/;"	l
c828	Test/a.s	/^    c828:	e354000b 	cmp	r4, #11$/;"	l
c82c	Test/a.s	/^    c82c:	e59f1184 	ldr	r1, [pc, #388]	; c9b8 <mi_arena.15829+0x454>$/;"	l
c830	Test/a.s	/^    c830:	0afffff6 	beq	c810 <mi_arena.15829+0x2ac>$/;"	l
c834	Test/a.s	/^    c834:	e595e008 	ldr	lr, [r5, #8]$/;"	l
c838	Test/a.s	/^    c838:	e5990020 	ldr	r0, [r9, #32]$/;"	l
c83c	Test/a.s	/^    c83c:	e517200c 	ldr	r2, [r7, #-12]$/;"	l
c840	Test/a.s	/^    c840:	e5173008 	ldr	r3, [r7, #-8]$/;"	l
c844	Test/a.s	/^    c844:	e58dc004 	str	ip, [sp, #4]$/;"	l
c848	Test/a.s	/^    c848:	e58de000 	str	lr, [sp]$/;"	l
c84c	Test/a.s	/^    c84c:	eb0067c6 	bl	2676c <__fprintf>$/;"	l
c850	Test/a.s	/^    c850:	e3540089 	cmp	r4, #137	; 0x89$/;"	l
c854	Test/a.s	/^    c854:	1affffed 	bne	c810 <mi_arena.15829+0x2ac>$/;"	l
c858	Test/a.s	/^    c858:	e59d10cc 	ldr	r1, [sp, #204]	; 0xcc$/;"	l
c85c	Test/a.s	/^    c85c:	e3510000 	cmp	r1, #0$/;"	l
c860	Test/a.s	/^    c860:	1a000030 	bne	c928 <mi_arena.15829+0x3c4>$/;"	l
c864	Test/a.s	/^    c864:	e59d5014 	ldr	r5, [sp, #20]$/;"	l
c868	Test/a.s	/^    c868:	e59a144c 	ldr	r1, [sl, #1100]	; 0x44c$/;"	l
c86c	Test/a.s	/^    c86c:	e59ac448 	ldr	ip, [sl, #1096]	; 0x448$/;"	l
c870	Test/a.s	/^    c870:	e595400c 	ldr	r4, [r5, #12]$/;"	l
c874	Test/a.s	/^    c874:	e595e008 	ldr	lr, [r5, #8]$/;"	l
c878	Test/a.s	/^    c878:	e084400c 	add	r4, r4, ip$/;"	l
c87c	Test/a.s	/^    c87c:	e08ee001 	add	lr, lr, r1$/;"	l
c880	Test/a.s	/^    c880:	e5950020 	ldr	r0, [r5, #32]$/;"	l
c884	Test/a.s	/^    c884:	e585400c 	str	r4, [r5, #12]$/;"	l
c888	Test/a.s	/^    c888:	e585e008 	str	lr, [r5, #8]$/;"	l
c88c	Test/a.s	/^    c88c:	e59d3018 	ldr	r3, [sp, #24]$/;"	l
c890	Test/a.s	/^    c890:	e58d100c 	str	r1, [sp, #12]$/;"	l
c894	Test/a.s	/^    c894:	e59d201c 	ldr	r2, [sp, #28]$/;"	l
c898	Test/a.s	/^    c898:	e58dc008 	str	ip, [sp, #8]$/;"	l
c89c	Test/a.s	/^    c89c:	e58d8000 	str	r8, [sp]$/;"	l
c8a0	Test/a.s	/^    c8a0:	e58d6004 	str	r6, [sp, #4]$/;"	l
c8a4	Test/a.s	/^    c8a4:	e59f1110 	ldr	r1, [pc, #272]	; c9bc <mi_arena.15829+0x458>$/;"	l
c8a8	Test/a.s	/^    c8a8:	eb0067af 	bl	2676c <__fprintf>$/;"	l
c8ac	Test/a.s	/^    c8ac:	e59f310c 	ldr	r3, [pc, #268]	; c9c0 <mi_arena.15829+0x45c>$/;"	l
c8b0	Test/a.s	/^    c8b0:	e15a0003 	cmp	sl, r3$/;"	l
c8b4	Test/a.s	/^    c8b4:	0a000027 	beq	c958 <mi_arena.15829+0x3f4>$/;"	l
c8b8	Test/a.s	/^    c8b8:	e59a4030 	ldr	r4, [sl, #48]	; 0x30$/;"	l
c8bc	Test/a.s	/^    c8bc:	e59f1100 	ldr	r1, [pc, #256]	; c9c4 <mi_arena.15829+0x460>$/;"	l
c8c0	Test/a.s	/^    c8c0:	e1a04a24 	lsr	r4, r4, #20$/;"	l
c8c4	Test/a.s	/^    c8c4:	e1a04a04 	lsl	r4, r4, #20$/;"	l
c8c8	Test/a.s	/^    c8c8:	e5942008 	ldr	r2, [r4, #8]$/;"	l
c8cc	Test/a.s	/^    c8cc:	e594300c 	ldr	r3, [r4, #12]$/;"	l
c8d0	Test/a.s	/^    c8d0:	e5950020 	ldr	r0, [r5, #32]$/;"	l
c8d4	Test/a.s	/^    c8d4:	eb0067a4 	bl	2676c <__fprintf>$/;"	l
c8d8	Test/a.s	/^    c8d8:	e5942008 	ldr	r2, [r4, #8]$/;"	l
c8dc	Test/a.s	/^    c8dc:	e594300c 	ldr	r3, [r4, #12]$/;"	l
c8e0	Test/a.s	/^    c8e0:	e5950004 	ldr	r0, [r5, #4]$/;"	l
c8e4	Test/a.s	/^    c8e4:	e5951000 	ldr	r1, [r5]$/;"	l
c8e8	Test/a.s	/^    c8e8:	e0802002 	add	r2, r0, r2$/;"	l
c8ec	Test/a.s	/^    c8ec:	e0813003 	add	r3, r1, r3$/;"	l
c8f0	Test/a.s	/^    c8f0:	e5852004 	str	r2, [r5, #4]$/;"	l
c8f4	Test/a.s	/^    c8f4:	e5853000 	str	r3, [r5]$/;"	l
c8f8	Test/a.s	/^    c8f8:	e59d5014 	ldr	r5, [sp, #20]$/;"	l
c8fc	Test/a.s	/^    c8fc:	e59f00c4 	ldr	r0, [pc, #196]	; c9c8 <mi_arena.15829+0x464>$/;"	l
c900	Test/a.s	/^    c900:	e5951020 	ldr	r1, [r5, #32]$/;"	l
c904	Test/a.s	/^    c904:	e28dd0b4 	add	sp, sp, #180	; 0xb4$/;"	l
c908	Test/a.s	/^    c908:	e28ddb02 	add	sp, sp, #2048	; 0x800$/;"	l
c90c	Test/a.s	/^    c90c:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
c910	Test/a.s	/^    c910:	ea006bd2 	b	27860 <_IO_fputs>$/;"	l
c914	Test/a.s	/^    c914:	e5803008 	str	r3, [r0, #8]$/;"	l
c918	Test/a.s	/^    c918:	e5013004 	str	r3, [r1, #-4]$/;"	l
c91c	Test/a.s	/^    c91c:	e5013008 	str	r3, [r1, #-8]$/;"	l
c920	Test/a.s	/^    c920:	e5902008 	ldr	r2, [r0, #8]$/;"	l
c924	Test/a.s	/^    c924:	eaffff43 	b	c638 <mi_arena.15829+0xd4>$/;"	l
c928	Test/a.s	/^    c928:	e59d5014 	ldr	r5, [sp, #20]$/;"	l
c92c	Test/a.s	/^    c92c:	e28d20c0 	add	r2, sp, #192	; 0xc0$/;"	l
c930	Test/a.s	/^    c930:	e5950020 	ldr	r0, [r5, #32]$/;"	l
c934	Test/a.s	/^    c934:	e892100c 	ldm	r2, {r2, r3, ip}$/;"	l
c938	Test/a.s	/^    c938:	e58d1004 	str	r1, [sp, #4]$/;"	l
c93c	Test/a.s	/^    c93c:	e58dc000 	str	ip, [sp]$/;"	l
c940	Test/a.s	/^    c940:	e59f1084 	ldr	r1, [pc, #132]	; c9cc <mi_arena.15829+0x468>$/;"	l
c944	Test/a.s	/^    c944:	eb006788 	bl	2676c <__fprintf>$/;"	l
c948	Test/a.s	/^    c948:	eaffffc5 	b	c864 <mi_arena.15829+0x300>$/;"	l
c94c	Test/a.s	/^    c94c:	e1a06003 	mov	r6, r3$/;"	l
c950	Test/a.s	/^    c950:	e1a08003 	mov	r8, r3$/;"	l
c954	Test/a.s	/^    c954:	eaffff5b 	b	c6c8 <mi_arena.15829+0x164>$/;"	l
c958	Test/a.s	/^    c958:	e59d5014 	ldr	r5, [sp, #20]$/;"	l
c95c	Test/a.s	/^    c95c:	e59a2448 	ldr	r2, [sl, #1096]	; 0x448$/;"	l
c960	Test/a.s	/^    c960:	e59f105c 	ldr	r1, [pc, #92]	; c9c4 <mi_arena.15829+0x460>$/;"	l
c964	Test/a.s	/^    c964:	e1a03002 	mov	r3, r2$/;"	l
c968	Test/a.s	/^    c968:	e5950020 	ldr	r0, [r5, #32]$/;"	l
c96c	Test/a.s	/^    c96c:	eb00677e 	bl	2676c <__fprintf>$/;"	l
c970	Test/a.s	/^    c970:	e8950006 	ldm	r5, {r1, r2}$/;"	l
c974	Test/a.s	/^    c974:	e59a3448 	ldr	r3, [sl, #1096]	; 0x448$/;"	l
c978	Test/a.s	/^    c978:	e0822003 	add	r2, r2, r3$/;"	l
c97c	Test/a.s	/^    c97c:	e0813003 	add	r3, r1, r3$/;"	l
c980	Test/a.s	/^    c980:	e5852004 	str	r2, [r5, #4]$/;"	l
c984	Test/a.s	/^    c984:	e5853000 	str	r3, [r5]$/;"	l
c988	Test/a.s	/^    c988:	eaffffda 	b	c8f8 <mi_arena.15829+0x394>$/;"	l
c98c	Test/a.s	/^    c98c:	e1a0000a 	mov	r0, sl$/;"	l
c990	Test/a.s	/^    c990:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
c994	Test/a.s	/^    c994:	e3a02001 	mov	r2, #1$/;"	l
c998	Test/a.s	/^    c998:	e3a03000 	mov	r3, #0$/;"	l
c99c	Test/a.s	/^    c99c:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
c9a0	Test/a.s	/^    c9a0:	ef000000 	svc	0x00000000$/;"	l
c9a4	Test/a.s	/^    c9a4:	eaffff84 	b	c7bc <mi_arena.15829+0x258>$/;"	l
c9a8	Test/a.s	/^    c9a8:	e1a0000a 	mov	r0, sl$/;"	l
c9ac	Test/a.s	/^    c9ac:	eb002277 	bl	15390 <__lll_lock_wait_private>$/;"	l
c9b0	Test/a.s	/^    c9b0:	eaffff04 	b	c5c8 <mi_arena.15829+0x64>$/;"	l
c9b4	Test/a.s	/^    c9b4:	0006c794 	.word	0x0006c794$/;"	l
c9b8	Test/a.s	/^    c9b8:	0006c7ac 	.word	0x0006c7ac$/;"	l
c9bc	Test/a.s	/^    c9bc:	0006c820 	.word	0x0006c820$/;"	l
c9c0	Test/a.s	/^    c9c0:	0008c4b4 	.word	0x0008c4b4$/;"	l
c9c4	Test/a.s	/^    c9c4:	0006c8c8 	.word	0x0006c8c8$/;"	l
c9c8	Test/a.s	/^    c9c8:	0006c910 	.word	0x0006c910$/;"	l
c9cc	Test/a.s	/^    c9cc:	0006c7e4 	.word	0x0006c7e4$/;"	l
c9d0	Test/a.s	/^    c9d0:	e92d40f8 	push	{r3, r4, r5, r6, r7, lr}$/;"	l
c9d4	Test/a.s	/^    c9d4:	e59f30fc 	ldr	r3, [pc, #252]	; cad8 <mremap_chunk+0x108>$/;"	l
c9d8	Test/a.s	/^    c9d8:	e5905004 	ldr	r5, [r0, #4]$/;"	l
c9dc	Test/a.s	/^    c9dc:	e5933000 	ldr	r3, [r3]$/;"	l
c9e0	Test/a.s	/^    c9e0:	e3150002 	tst	r5, #2$/;"	l
c9e4	Test/a.s	/^    c9e4:	e2433001 	sub	r3, r3, #1$/;"	l
c9e8	Test/a.s	/^    c9e8:	e3c55007 	bic	r5, r5, #7$/;"	l
c9ec	Test/a.s	/^    c9ec:	e5904000 	ldr	r4, [r0]$/;"	l
c9f0	Test/a.s	/^    c9f0:	0a000029 	beq	ca9c <mremap_chunk+0xcc>$/;"	l
c9f4	Test/a.s	/^    c9f4:	e0855004 	add	r5, r5, r4$/;"	l
c9f8	Test/a.s	/^    c9f8:	e0157003 	ands	r7, r5, r3$/;"	l
c9fc	Test/a.s	/^    c9fc:	1a000021 	bne	ca88 <mremap_chunk+0xb8>$/;"	l
ca00	Test/a.s	/^    ca00:	e2846004 	add	r6, r4, #4$/;"	l
ca04	Test/a.s	/^    ca04:	e0866003 	add	r6, r6, r3$/;"	l
ca08	Test/a.s	/^    ca08:	e0866001 	add	r6, r6, r1$/;"	l
ca0c	Test/a.s	/^    ca0c:	e1c66003 	bic	r6, r6, r3$/;"	l
ca10	Test/a.s	/^    ca10:	e1550006 	cmp	r5, r6$/;"	l
ca14	Test/a.s	/^    ca14:	08bd80f8 	popeq	{r3, r4, r5, r6, r7, pc}$/;"	l
ca18	Test/a.s	/^    ca18:	e3a03001 	mov	r3, #1$/;"	l
ca1c	Test/a.s	/^    ca1c:	e0640000 	rsb	r0, r4, r0$/;"	l
ca20	Test/a.s	/^    ca20:	e1a01005 	mov	r1, r5$/;"	l
ca24	Test/a.s	/^    ca24:	e1a02006 	mov	r2, r6$/;"	l
ca28	Test/a.s	/^    ca28:	eb0021f4 	bl	15200 <__mremap>$/;"	l
ca2c	Test/a.s	/^    ca2c:	e3700001 	cmn	r0, #1$/;"	l
ca30	Test/a.s	/^    ca30:	e1a03000 	mov	r3, r0$/;"	l
ca34	Test/a.s	/^    ca34:	0a000011 	beq	ca80 <mremap_chunk+0xb0>$/;"	l
ca38	Test/a.s	/^    ca38:	e0800004 	add	r0, r0, r4$/;"	l
ca3c	Test/a.s	/^    ca3c:	e3100007 	tst	r0, #7$/;"	l
ca40	Test/a.s	/^    ca40:	1a00001f 	bne	cac4 <mremap_chunk+0xf4>$/;"	l
ca44	Test/a.s	/^    ca44:	e7933004 	ldr	r3, [r3, r4]$/;"	l
ca48	Test/a.s	/^    ca48:	e1530004 	cmp	r3, r4$/;"	l
ca4c	Test/a.s	/^    ca4c:	1a000017 	bne	cab0 <mremap_chunk+0xe0>$/;"	l
ca50	Test/a.s	/^    ca50:	e59f2084 	ldr	r2, [pc, #132]	; cadc <mremap_chunk+0x10c>$/;"	l
ca54	Test/a.s	/^    ca54:	e0633006 	rsb	r3, r3, r6$/;"	l
ca58	Test/a.s	/^    ca58:	e592c478 	ldr	ip, [r2, #1144]	; 0x478$/;"	l
ca5c	Test/a.s	/^    ca5c:	e592147c 	ldr	r1, [r2, #1148]	; 0x47c$/;"	l
ca60	Test/a.s	/^    ca60:	e065500c 	rsb	r5, r5, ip$/;"	l
ca64	Test/a.s	/^    ca64:	e0856006 	add	r6, r5, r6$/;"	l
ca68	Test/a.s	/^    ca68:	e3833002 	orr	r3, r3, #2$/;"	l
ca6c	Test/a.s	/^    ca6c:	e1560001 	cmp	r6, r1$/;"	l
ca70	Test/a.s	/^    ca70:	e5803004 	str	r3, [r0, #4]$/;"	l
ca74	Test/a.s	/^    ca74:	e5826478 	str	r6, [r2, #1144]	; 0x478$/;"	l
ca78	Test/a.s	/^    ca78:	8582647c 	strhi	r6, [r2, #1148]	; 0x47c$/;"	l
ca7c	Test/a.s	/^    ca7c:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}$/;"	l
ca80	Test/a.s	/^    ca80:	e1a00007 	mov	r0, r7$/;"	l
ca84	Test/a.s	/^    ca84:	e8bd80f8 	pop	{r3, r4, r5, r6, r7, pc}$/;"	l
ca88	Test/a.s	/^    ca88:	e59f0050 	ldr	r0, [pc, #80]	; cae0 <mremap_chunk+0x110>$/;"	l
ca8c	Test/a.s	/^    ca8c:	e59f1050 	ldr	r1, [pc, #80]	; cae4 <mremap_chunk+0x114>$/;"	l
ca90	Test/a.s	/^    ca90:	e59f2050 	ldr	r2, [pc, #80]	; cae8 <mremap_chunk+0x118>$/;"	l
ca94	Test/a.s	/^    ca94:	e59f3050 	ldr	r3, [pc, #80]	; caec <mremap_chunk+0x11c>$/;"	l
ca98	Test/a.s	/^    ca98:	ebfffe2f 	bl	c35c <__malloc_assert>$/;"	l
ca9c	Test/a.s	/^    ca9c:	e59f004c 	ldr	r0, [pc, #76]	; caf0 <mremap_chunk+0x120>$/;"	l
caa0	Test/a.s	/^    caa0:	e59f103c 	ldr	r1, [pc, #60]	; cae4 <mremap_chunk+0x114>$/;"	l
caa4	Test/a.s	/^    caa4:	e59f2048 	ldr	r2, [pc, #72]	; caf4 <mremap_chunk+0x124>$/;"	l
caa8	Test/a.s	/^    caa8:	e59f303c 	ldr	r3, [pc, #60]	; caec <mremap_chunk+0x11c>$/;"	l
caac	Test/a.s	/^    caac:	ebfffe2a 	bl	c35c <__malloc_assert>$/;"	l
cab0	Test/a.s	/^    cab0:	e59f0040 	ldr	r0, [pc, #64]	; caf8 <mremap_chunk+0x128>$/;"	l
cab4	Test/a.s	/^    cab4:	e59f1028 	ldr	r1, [pc, #40]	; cae4 <mremap_chunk+0x114>$/;"	l
cab8	Test/a.s	/^    cab8:	e59f203c 	ldr	r2, [pc, #60]	; cafc <mremap_chunk+0x12c>$/;"	l
cabc	Test/a.s	/^    cabc:	e59f3028 	ldr	r3, [pc, #40]	; caec <mremap_chunk+0x11c>$/;"	l
cac0	Test/a.s	/^    cac0:	ebfffe25 	bl	c35c <__malloc_assert>$/;"	l
cac4	Test/a.s	/^    cac4:	e59f0034 	ldr	r0, [pc, #52]	; cb00 <mremap_chunk+0x130>$/;"	l
cac8	Test/a.s	/^    cac8:	e59f1014 	ldr	r1, [pc, #20]	; cae4 <mremap_chunk+0x114>$/;"	l
cacc	Test/a.s	/^    cacc:	e59f2030 	ldr	r2, [pc, #48]	; cb04 <mremap_chunk+0x134>$/;"	l
cad0	Test/a.s	/^    cad0:	e59f3014 	ldr	r3, [pc, #20]	; caec <mremap_chunk+0x11c>$/;"	l
cad4	Test/a.s	/^    cad4:	ebfffe20 	bl	c35c <__malloc_assert>$/;"	l
cad8	Test/a.s	/^    cad8:	0008c970 	.word	0x0008c970$/;"	l
cadc	Test/a.s	/^    cadc:	0008c4b4 	.word	0x0008c4b4$/;"	l
cae0	Test/a.s	/^    cae0:	0006c93c 	.word	0x0006c93c$/;"	l
cae4	Test/a.s	/^    cae4:	0006c930 	.word	0x0006c930$/;"	l
cae8	Test/a.s	/^    cae8:	00000afb 	.word	0x00000afb$/;"	l
caec	Test/a.s	/^    caec:	0006deac 	.word	0x0006deac$/;"	l
caf0	Test/a.s	/^    caf0:	0006c91c 	.word	0x0006c91c$/;"	l
caf4	Test/a.s	/^    caf4:	00000afa 	.word	0x00000afa$/;"	l
caf8	Test/a.s	/^    caf8:	0006ca1c 	.word	0x0006ca1c$/;"	l
cafc	Test/a.s	/^    cafc:	00000b0d 	.word	0x00000b0d$/;"	l
capacity	myIntVector.h	/^    int capacity;$/;"	m	struct:MyIntVector
cb00	Test/a.s	/^    cb00:	0006c968 	.word	0x0006c968$/;"	l
cb04	Test/a.s	/^    cb04:	00000b0b 	.word	0x00000b0b$/;"	l
cb08	Test/a.s	/^    cb08:	e92d45f0 	push	{r4, r5, r6, r7, r8, sl, lr}$/;"	l
cb0c	Test/a.s	/^    cb0c:	e59f811c 	ldr	r8, [pc, #284]	; cc30 <ptmalloc_unlock_all+0x128>$/;"	l
cb10	Test/a.s	/^    cb10:	e5983450 	ldr	r3, [r8, #1104]	; 0x450$/;"	l
cb14	Test/a.s	/^    cb14:	e3530000 	cmp	r3, #0$/;"	l
cb18	Test/a.s	/^    cb18:	d8bd85f0 	pople	{r4, r5, r6, r7, r8, sl, pc}$/;"	l
cb1c	Test/a.s	/^    cb1c:	e59fa110 	ldr	sl, [pc, #272]	; cc34 <ptmalloc_unlock_all+0x12c>$/;"	l
cb20	Test/a.s	/^    cb20:	e59a3018 	ldr	r3, [sl, #24]$/;"	l
cb24	Test/a.s	/^    cb24:	e2433001 	sub	r3, r3, #1$/;"	l
cb28	Test/a.s	/^    cb28:	e3530000 	cmp	r3, #0$/;"	l
cb2c	Test/a.s	/^    cb2c:	e58a3018 	str	r3, [sl, #24]$/;"	l
cb30	Test/a.s	/^    cb30:	18bd85f0 	popne	{r4, r5, r6, r7, r8, sl, pc}$/;"	l
cb34	Test/a.s	/^    cb34:	e59f30fc 	ldr	r3, [pc, #252]	; cc38 <ptmalloc_unlock_all+0x130>$/;"	l
cb38	Test/a.s	/^    cb38:	e59a5008 	ldr	r5, [sl, #8]$/;"	l
cb3c	Test/a.s	/^    cb3c:	e59a6004 	ldr	r6, [sl, #4]$/;"	l
cb40	Test/a.s	/^    cb40:	e59f40f4 	ldr	r4, [pc, #244]	; cc3c <ptmalloc_unlock_all+0x134>$/;"	l
cb44	Test/a.s	/^    cb44:	e59f20f4 	ldr	r2, [pc, #244]	; cc40 <ptmalloc_unlock_all+0x138>$/;"	l
cb48	Test/a.s	/^    cb48:	e59a100c 	ldr	r1, [sl, #12]$/;"	l
cb4c	Test/a.s	/^    cb4c:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
cb50	Test/a.s	/^    cb50:	ebfff242 	bl	9460 <__aeabi_read_tp>$/;"	l
cb54	Test/a.s	/^    cb54:	e5845000 	str	r5, [r4]$/;"	l
cb58	Test/a.s	/^    cb58:	e7806003 	str	r6, [r0, r3]$/;"	l
cb5c	Test/a.s	/^    cb5c:	e5821000 	str	r1, [r2]$/;"	l
cb60	Test/a.s	/^    cb60:	e1a05008 	mov	r5, r8$/;"	l
cb64	Test/a.s	/^    cb64:	e5956000 	ldr	r6, [r5]$/;"	l
cb68	Test/a.s	/^    cb68:	e3a01000 	mov	r1, #0$/;"	l
cb6c	Test/a.s	/^    cb6c:	e1a04006 	mov	r4, r6$/;"	l
cb70	Test/a.s	/^    cb70:	e1a02005 	mov	r2, r5$/;"	l
cb74	Test/a.s	/^    cb74:	e5923000 	ldr	r3, [r2]$/;"	l
cb78	Test/a.s	/^    cb78:	e1530004 	cmp	r3, r4$/;"	l
cb7c	Test/a.s	/^    cb7c:	1a000005 	bne	cb98 <ptmalloc_unlock_all+0x90>$/;"	l
cb80	Test/a.s	/^    cb80:	e1a00004 	mov	r0, r4$/;"	l
cb84	Test/a.s	/^    cb84:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
cb88	Test/a.s	/^    cb88:	e1a0e00f 	mov	lr, pc$/;"	l
cb8c	Test/a.s	/^    cb8c:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
cb90	Test/a.s	/^    cb90:	3afffff7 	bcc	cb74 <ptmalloc_unlock_all+0x6c>$/;"	l
cb94	Test/a.s	/^    cb94:	e1a03004 	mov	r3, r4$/;"	l
cb98	Test/a.s	/^    cb98:	e1560003 	cmp	r6, r3$/;"	l
cb9c	Test/a.s	/^    cb9c:	1afffff0 	bne	cb64 <ptmalloc_unlock_all+0x5c>$/;"	l
cba0	Test/a.s	/^    cba0:	e3560001 	cmp	r6, #1$/;"	l
cba4	Test/a.s	/^    cba4:	ca00001a 	bgt	cc14 <ptmalloc_unlock_all+0x10c>$/;"	l
cba8	Test/a.s	/^    cba8:	e5955440 	ldr	r5, [r5, #1088]	; 0x440$/;"	l
cbac	Test/a.s	/^    cbac:	e1550008 	cmp	r5, r8$/;"	l
cbb0	Test/a.s	/^    cbb0:	1affffeb 	bne	cb64 <ptmalloc_unlock_all+0x5c>$/;"	l
cbb4	Test/a.s	/^    cbb4:	e59a5014 	ldr	r5, [sl, #20]$/;"	l
cbb8	Test/a.s	/^    cbb8:	e3a01000 	mov	r1, #0$/;"	l
cbbc	Test/a.s	/^    cbbc:	e1a04005 	mov	r4, r5$/;"	l
cbc0	Test/a.s	/^    cbc0:	e59f207c 	ldr	r2, [pc, #124]	; cc44 <ptmalloc_unlock_all+0x13c>$/;"	l
cbc4	Test/a.s	/^    cbc4:	e5923000 	ldr	r3, [r2]$/;"	l
cbc8	Test/a.s	/^    cbc8:	e1530004 	cmp	r3, r4$/;"	l
cbcc	Test/a.s	/^    cbcc:	1a000005 	bne	cbe8 <ptmalloc_unlock_all+0xe0>$/;"	l
cbd0	Test/a.s	/^    cbd0:	e1a00004 	mov	r0, r4$/;"	l
cbd4	Test/a.s	/^    cbd4:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
cbd8	Test/a.s	/^    cbd8:	e1a0e00f 	mov	lr, pc$/;"	l
cbdc	Test/a.s	/^    cbdc:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
cbe0	Test/a.s	/^    cbe0:	3afffff7 	bcc	cbc4 <ptmalloc_unlock_all+0xbc>$/;"	l
cbe4	Test/a.s	/^    cbe4:	e1a03004 	mov	r3, r4$/;"	l
cbe8	Test/a.s	/^    cbe8:	e1550003 	cmp	r5, r3$/;"	l
cbec	Test/a.s	/^    cbec:	1afffff0 	bne	cbb4 <ptmalloc_unlock_all+0xac>$/;"	l
cbf0	Test/a.s	/^    cbf0:	e3550001 	cmp	r5, #1$/;"	l
cbf4	Test/a.s	/^    cbf4:	d8bd85f0 	pople	{r4, r5, r6, r7, r8, sl, pc}$/;"	l
cbf8	Test/a.s	/^    cbf8:	e1a00002 	mov	r0, r2$/;"	l
cbfc	Test/a.s	/^    cbfc:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
cc00	Test/a.s	/^    cc00:	e3a02001 	mov	r2, #1$/;"	l
cc04	Test/a.s	/^    cc04:	e3a03000 	mov	r3, #0$/;"	l
cc08	Test/a.s	/^    cc08:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
cc0c	Test/a.s	/^    cc0c:	ef000000 	svc	0x00000000$/;"	l
cc10	Test/a.s	/^    cc10:	e8bd85f0 	pop	{r4, r5, r6, r7, r8, sl, pc}$/;"	l
cc14	Test/a.s	/^    cc14:	e1a00005 	mov	r0, r5$/;"	l
cc18	Test/a.s	/^    cc18:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
cc1c	Test/a.s	/^    cc1c:	e3a02001 	mov	r2, #1$/;"	l
cc20	Test/a.s	/^    cc20:	e3a03000 	mov	r3, #0$/;"	l
cc24	Test/a.s	/^    cc24:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
cc28	Test/a.s	/^    cc28:	ef000000 	svc	0x00000000$/;"	l
cc2c	Test/a.s	/^    cc2c:	eaffffdd 	b	cba8 <ptmalloc_unlock_all+0xa0>$/;"	l
cc30	Test/a.s	/^    cc30:	0008c4b4 	.word	0x0008c4b4$/;"	l
cc34	Test/a.s	/^    cc34:	0008d2f8 	.word	0x0008d2f8$/;"	l
cc38	Test/a.s	/^    cc38:	0007f4b8 	.word	0x0007f4b8$/;"	l
cc3c	Test/a.s	/^    cc3c:	0008c954 	.word	0x0008c954$/;"	l
cc40	Test/a.s	/^    cc40:	0008d350 	.word	0x0008d350$/;"	l
cc44	Test/a.s	/^    cc44:	0008d30c 	.word	0x0008d30c$/;"	l
cc48	Test/a.s	/^    cc48:	e92d4070 	push	{r4, r5, r6, lr}$/;"	l
cc4c	Test/a.s	/^    cc4c:	e2003005 	and	r3, r0, #5$/;"	l
cc50	Test/a.s	/^    cc50:	e3530005 	cmp	r3, #5$/;"	l
cc54	Test/a.s	/^    cc54:	e24dd018 	sub	sp, sp, #24$/;"	l
cc58	Test/a.s	/^    cc58:	e1a04000 	mov	r4, r0$/;"	l
cc5c	Test/a.s	/^    cc5c:	e1a06001 	mov	r6, r1$/;"	l
cc60	Test/a.s	/^    cc60:	0a000020 	beq	cce8 <malloc_printerr+0xa0>$/;"	l
cc64	Test/a.s	/^    cc64:	e3100001 	tst	r0, #1$/;"	l
cc68	Test/a.s	/^    cc68:	1a000003 	bne	cc7c <malloc_printerr+0x34>$/;"	l
cc6c	Test/a.s	/^    cc6c:	e3100002 	tst	r0, #2$/;"	l
cc70	Test/a.s	/^    cc70:	1a000021 	bne	ccfc <malloc_printerr+0xb4>$/;"	l
cc74	Test/a.s	/^    cc74:	e28dd018 	add	sp, sp, #24$/;"	l
cc78	Test/a.s	/^    cc78:	e8bd8070 	pop	{r4, r5, r6, pc}$/;"	l
cc7c	Test/a.s	/^    cc7c:	e3a0c000 	mov	ip, #0$/;"	l
cc80	Test/a.s	/^    cc80:	e1a00002 	mov	r0, r2$/;"	l
cc84	Test/a.s	/^    cc84:	e1a0300c 	mov	r3, ip$/;"	l
cc88	Test/a.s	/^    cc88:	e28d1014 	add	r1, sp, #20$/;"	l
cc8c	Test/a.s	/^    cc8c:	e3a02010 	mov	r2, #16$/;"	l
cc90	Test/a.s	/^    cc90:	e5cdc014 	strb	ip, [sp, #20]$/;"	l
cc94	Test/a.s	/^    cc94:	eb004367 	bl	1da38 <_itoa_word>$/;"	l
cc98	Test/a.s	/^    cc98:	e28d500c 	add	r5, sp, #12$/;"	l
cc9c	Test/a.s	/^    cc9c:	e1500005 	cmp	r0, r5$/;"	l
cca0	Test/a.s	/^    cca0:	e1a0c000 	mov	ip, r0$/;"	l
cca4	Test/a.s	/^    cca4:	9a000003 	bls	ccb8 <malloc_printerr+0x70>$/;"	l
cca8	Test/a.s	/^    cca8:	e3a00030 	mov	r0, #48	; 0x30$/;"	l
ccac	Test/a.s	/^    ccac:	e56c0001 	strb	r0, [ip, #-1]!$/;"	l
ccb0	Test/a.s	/^    ccb0:	e15c0005 	cmp	ip, r5$/;"	l
ccb4	Test/a.s	/^    ccb4:	1afffffc 	bne	ccac <malloc_printerr+0x64>$/;"	l
ccb8	Test/a.s	/^    ccb8:	e59f3040 	ldr	r3, [pc, #64]	; cd00 <malloc_printerr+0xb8>$/;"	l
ccbc	Test/a.s	/^    ccbc:	e59f1040 	ldr	r1, [pc, #64]	; cd04 <malloc_printerr+0xbc>$/;"	l
ccc0	Test/a.s	/^    ccc0:	e5933000 	ldr	r3, [r3]$/;"	l
ccc4	Test/a.s	/^    ccc4:	e2040002 	and	r0, r4, #2$/;"	l
ccc8	Test/a.s	/^    ccc8:	e5932000 	ldr	r2, [r3]$/;"	l
cccc	Test/a.s	/^    cccc:	e1a03006 	mov	r3, r6$/;"	l
ccd0	Test/a.s	/^    ccd0:	e3520000 	cmp	r2, #0$/;"	l
ccd4	Test/a.s	/^    ccd4:	01a02001 	moveq	r2, r1$/;"	l
ccd8	Test/a.s	/^    ccd8:	e58dc000 	str	ip, [sp]$/;"	l
ccdc	Test/a.s	/^    ccdc:	e59f1024 	ldr	r1, [pc, #36]	; cd08 <malloc_printerr+0xc0>$/;"	l
cce0	Test/a.s	/^    cce0:	ebfff364 	bl	9a78 <__libc_message>$/;"	l
cce4	Test/a.s	/^    cce4:	eaffffe2 	b	cc74 <malloc_printerr+0x2c>$/;"	l
cce8	Test/a.s	/^    cce8:	e1a02001 	mov	r2, r1$/;"	l
ccec	Test/a.s	/^    ccec:	e2000002 	and	r0, r0, #2$/;"	l
ccf0	Test/a.s	/^    ccf0:	e59f1014 	ldr	r1, [pc, #20]	; cd0c <malloc_printerr+0xc4>$/;"	l
ccf4	Test/a.s	/^    ccf4:	ebfff35f 	bl	9a78 <__libc_message>$/;"	l
ccf8	Test/a.s	/^    ccf8:	eaffffdd 	b	cc74 <malloc_printerr+0x2c>$/;"	l
ccfc	Test/a.s	/^    ccfc:	ebfff1df 	bl	9480 <abort>$/;"	l
cd00	Test/a.s	/^    cd00:	0008dfc0 	.word	0x0008dfc0$/;"	l
cd04	Test/a.s	/^    cd04:	0006ca38 	.word	0x0006ca38$/;"	l
cd08	Test/a.s	/^    cd08:	0006ca44 	.word	0x0006ca44$/;"	l
cd0c	Test/a.s	/^    cd0c:	00081990 	.word	0x00081990$/;"	l
cd10	Test/a.s	/^    cd10:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
cd14	Test/a.s	/^    cd14:	e59f3360 	ldr	r3, [pc, #864]	; d07c <malloc_consolidate+0x36c>$/;"	l
cd18	Test/a.s	/^    cd18:	e24dd01c 	sub	sp, sp, #28$/;"	l
cd1c	Test/a.s	/^    cd1c:	e5933000 	ldr	r3, [r3]$/;"	l
cd20	Test/a.s	/^    cd20:	e1a06000 	mov	r6, r0$/;"	l
cd24	Test/a.s	/^    cd24:	e3530000 	cmp	r3, #0$/;"	l
cd28	Test/a.s	/^    cd28:	0a000075 	beq	cf04 <malloc_consolidate+0x1f4>$/;"	l
cd2c	Test/a.s	/^    cd2c:	e2805004 	add	r5, r0, #4$/;"	l
cd30	Test/a.s	/^    cd30:	e5964004 	ldr	r4, [r6, #4]$/;"	l
cd34	Test/a.s	/^    cd34:	e1a02005 	mov	r2, r5$/;"	l
cd38	Test/a.s	/^    cd38:	e3841001 	orr	r1, r4, #1$/;"	l
cd3c	Test/a.s	/^    cd3c:	e5923000 	ldr	r3, [r2]$/;"	l
cd40	Test/a.s	/^    cd40:	e1530004 	cmp	r3, r4$/;"	l
cd44	Test/a.s	/^    cd44:	1a000005 	bne	cd60 <malloc_consolidate+0x50>$/;"	l
cd48	Test/a.s	/^    cd48:	e1a00004 	mov	r0, r4$/;"	l
cd4c	Test/a.s	/^    cd4c:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
cd50	Test/a.s	/^    cd50:	e1a0e00f 	mov	lr, pc$/;"	l
cd54	Test/a.s	/^    cd54:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
cd58	Test/a.s	/^    cd58:	3afffff7 	bcc	cd3c <malloc_consolidate+0x2c>$/;"	l
cd5c	Test/a.s	/^    cd5c:	e1a03004 	mov	r3, r4$/;"	l
cd60	Test/a.s	/^    cd60:	e1540003 	cmp	r4, r3$/;"	l
cd64	Test/a.s	/^    cd64:	1afffff1 	bne	cd30 <malloc_consolidate+0x20>$/;"	l
cd68	Test/a.s	/^    cd68:	e286002c 	add	r0, r6, #44	; 0x2c$/;"	l
cd6c	Test/a.s	/^    cd6c:	e59f730c 	ldr	r7, [pc, #780]	; d080 <malloc_consolidate+0x370>$/;"	l
cd70	Test/a.s	/^    cd70:	e286a030 	add	sl, r6, #48	; 0x30$/;"	l
cd74	Test/a.s	/^    cd74:	e58d0014 	str	r0, [sp, #20]$/;"	l
cd78	Test/a.s	/^    cd78:	e2869008 	add	r9, r6, #8$/;"	l
cd7c	Test/a.s	/^    cd7c:	e3a08000 	mov	r8, #0$/;"	l
cd80	Test/a.s	/^    cd80:	e5995000 	ldr	r5, [r9]$/;"	l
cd84	Test/a.s	/^    cd84:	e3a01000 	mov	r1, #0$/;"	l
cd88	Test/a.s	/^    cd88:	e1a04005 	mov	r4, r5$/;"	l
cd8c	Test/a.s	/^    cd8c:	e1a02009 	mov	r2, r9$/;"	l
cd90	Test/a.s	/^    cd90:	e5923000 	ldr	r3, [r2]$/;"	l
cd94	Test/a.s	/^    cd94:	e1530004 	cmp	r3, r4$/;"	l
cd98	Test/a.s	/^    cd98:	1a000005 	bne	cdb4 <malloc_consolidate+0xa4>$/;"	l
cd9c	Test/a.s	/^    cd9c:	e1a00004 	mov	r0, r4$/;"	l
cda0	Test/a.s	/^    cda0:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
cda4	Test/a.s	/^    cda4:	e1a0e00f 	mov	lr, pc$/;"	l
cda8	Test/a.s	/^    cda8:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
cdac	Test/a.s	/^    cdac:	3afffff7 	bcc	cd90 <malloc_consolidate+0x80>$/;"	l
cdb0	Test/a.s	/^    cdb0:	e1a03004 	mov	r3, r4$/;"	l
cdb4	Test/a.s	/^    cdb4:	e1550003 	cmp	r5, r3$/;"	l
cdb8	Test/a.s	/^    cdb8:	1afffff0 	bne	cd80 <malloc_consolidate+0x70>$/;"	l
cdbc	Test/a.s	/^    cdbc:	e1550001 	cmp	r5, r1$/;"	l
cdc0	Test/a.s	/^    cdc0:	1a00001e 	bne	ce40 <malloc_consolidate+0x130>$/;"	l
cdc4	Test/a.s	/^    cdc4:	ea000042 	b	ced4 <malloc_consolidate+0x1c4>$/;"	l
cdc8	Test/a.s	/^    cdc8:	e59b2008 	ldr	r2, [fp, #8]$/;"	l
cdcc	Test/a.s	/^    cdcc:	e084400c 	add	r4, r4, ip$/;"	l
cdd0	Test/a.s	/^    cdd0:	e592000c 	ldr	r0, [r2, #12]$/;"	l
cdd4	Test/a.s	/^    cdd4:	e59b100c 	ldr	r1, [fp, #12]$/;"	l
cdd8	Test/a.s	/^    cdd8:	e15b0000 	cmp	fp, r0$/;"	l
cddc	Test/a.s	/^    cddc:	1a000055 	bne	cf38 <malloc_consolidate+0x228>$/;"	l
cde0	Test/a.s	/^    cde0:	e5910008 	ldr	r0, [r1, #8]$/;"	l
cde4	Test/a.s	/^    cde4:	e15b0000 	cmp	fp, r0$/;"	l
cde8	Test/a.s	/^    cde8:	1a000052 	bne	cf38 <malloc_consolidate+0x228>$/;"	l
cdec	Test/a.s	/^    cdec:	e59b0004 	ldr	r0, [fp, #4]$/;"	l
cdf0	Test/a.s	/^    cdf0:	e582100c 	str	r1, [r2, #12]$/;"	l
cdf4	Test/a.s	/^    cdf4:	e1500007 	cmp	r0, r7$/;"	l
cdf8	Test/a.s	/^    cdf8:	e5812008 	str	r2, [r1, #8]$/;"	l
cdfc	Test/a.s	/^    cdfc:	9a000002 	bls	ce0c <malloc_consolidate+0xfc>$/;"	l
ce00	Test/a.s	/^    ce00:	e59b1010 	ldr	r1, [fp, #16]$/;"	l
ce04	Test/a.s	/^    ce04:	e3510000 	cmp	r1, #0$/;"	l
ce08	Test/a.s	/^    ce08:	1a000062 	bne	cf98 <malloc_consolidate+0x288>$/;"	l
ce0c	Test/a.s	/^    ce0c:	e5962038 	ldr	r2, [r6, #56]	; 0x38$/;"	l
ce10	Test/a.s	/^    ce10:	e1540007 	cmp	r4, r7$/;"	l
ce14	Test/a.s	/^    ce14:	e3841001 	orr	r1, r4, #1$/;"	l
ce18	Test/a.s	/^    ce18:	e582500c 	str	r5, [r2, #12]$/;"	l
ce1c	Test/a.s	/^    ce1c:	e5865038 	str	r5, [r6, #56]	; 0x38$/;"	l
ce20	Test/a.s	/^    ce20:	85858010 	strhi	r8, [r5, #16]$/;"	l
ce24	Test/a.s	/^    ce24:	85858014 	strhi	r8, [r5, #20]$/;"	l
ce28	Test/a.s	/^    ce28:	e585a00c 	str	sl, [r5, #12]$/;"	l
ce2c	Test/a.s	/^    ce2c:	e5852008 	str	r2, [r5, #8]$/;"	l
ce30	Test/a.s	/^    ce30:	e7854004 	str	r4, [r5, r4]$/;"	l
ce34	Test/a.s	/^    ce34:	e5851004 	str	r1, [r5, #4]$/;"	l
ce38	Test/a.s	/^    ce38:	e2535000 	subs	r5, r3, #0$/;"	l
ce3c	Test/a.s	/^    ce3c:	0a000024 	beq	ced4 <malloc_consolidate+0x1c4>$/;"	l
ce40	Test/a.s	/^    ce40:	e995000c 	ldmib	r5, {r2, r3}$/;"	l
ce44	Test/a.s	/^    ce44:	e3c24005 	bic	r4, r2, #5$/;"	l
ce48	Test/a.s	/^    ce48:	e085b004 	add	fp, r5, r4$/;"	l
ce4c	Test/a.s	/^    ce4c:	e59bc004 	ldr	ip, [fp, #4]$/;"	l
ce50	Test/a.s	/^    ce50:	e3120001 	tst	r2, #1$/;"	l
ce54	Test/a.s	/^    ce54:	e3ccc007 	bic	ip, ip, #7$/;"	l
ce58	Test/a.s	/^    ce58:	1a000012 	bne	cea8 <malloc_consolidate+0x198>$/;"	l
ce5c	Test/a.s	/^    ce5c:	e5951000 	ldr	r1, [r5]$/;"	l
ce60	Test/a.s	/^    ce60:	e0615005 	rsb	r5, r1, r5$/;"	l
ce64	Test/a.s	/^    ce64:	e5952008 	ldr	r2, [r5, #8]$/;"	l
ce68	Test/a.s	/^    ce68:	e0844001 	add	r4, r4, r1$/;"	l
ce6c	Test/a.s	/^    ce6c:	e592000c 	ldr	r0, [r2, #12]$/;"	l
ce70	Test/a.s	/^    ce70:	e595100c 	ldr	r1, [r5, #12]$/;"	l
ce74	Test/a.s	/^    ce74:	e1550000 	cmp	r5, r0$/;"	l
ce78	Test/a.s	/^    ce78:	1a000024 	bne	cf10 <malloc_consolidate+0x200>$/;"	l
ce7c	Test/a.s	/^    ce7c:	e5910008 	ldr	r0, [r1, #8]$/;"	l
ce80	Test/a.s	/^    ce80:	e1550000 	cmp	r5, r0$/;"	l
ce84	Test/a.s	/^    ce84:	1a000021 	bne	cf10 <malloc_consolidate+0x200>$/;"	l
ce88	Test/a.s	/^    ce88:	e5950004 	ldr	r0, [r5, #4]$/;"	l
ce8c	Test/a.s	/^    ce8c:	e582100c 	str	r1, [r2, #12]$/;"	l
ce90	Test/a.s	/^    ce90:	e1500007 	cmp	r0, r7$/;"	l
ce94	Test/a.s	/^    ce94:	e5812008 	str	r2, [r1, #8]$/;"	l
ce98	Test/a.s	/^    ce98:	9a000002 	bls	cea8 <malloc_consolidate+0x198>$/;"	l
ce9c	Test/a.s	/^    ce9c:	e5951010 	ldr	r1, [r5, #16]$/;"	l
cea0	Test/a.s	/^    cea0:	e3510000 	cmp	r1, #0$/;"	l
cea4	Test/a.s	/^    cea4:	1a00002b 	bne	cf58 <malloc_consolidate+0x248>$/;"	l
cea8	Test/a.s	/^    cea8:	e5962030 	ldr	r2, [r6, #48]	; 0x30$/;"	l
ceac	Test/a.s	/^    ceac:	e152000b 	cmp	r2, fp$/;"	l
ceb0	Test/a.s	/^    ceb0:	0a00000e 	beq	cef0 <malloc_consolidate+0x1e0>$/;"	l
ceb4	Test/a.s	/^    ceb4:	e08b200c 	add	r2, fp, ip$/;"	l
ceb8	Test/a.s	/^    ceb8:	e5922004 	ldr	r2, [r2, #4]$/;"	l
cebc	Test/a.s	/^    cebc:	e3120001 	tst	r2, #1$/;"	l
cec0	Test/a.s	/^    cec0:	0affffc0 	beq	cdc8 <malloc_consolidate+0xb8>$/;"	l
cec4	Test/a.s	/^    cec4:	e59b2004 	ldr	r2, [fp, #4]$/;"	l
cec8	Test/a.s	/^    cec8:	e3c22001 	bic	r2, r2, #1$/;"	l
cecc	Test/a.s	/^    cecc:	e58b2004 	str	r2, [fp, #4]$/;"	l
ced0	Test/a.s	/^    ced0:	eaffffcd 	b	ce0c <malloc_consolidate+0xfc>$/;"	l
ced4	Test/a.s	/^    ced4:	e2899004 	add	r9, r9, #4$/;"	l
ced8	Test/a.s	/^    ced8:	e59d1014 	ldr	r1, [sp, #20]$/;"	l
cedc	Test/a.s	/^    cedc:	e2493004 	sub	r3, r9, #4$/;"	l
cee0	Test/a.s	/^    cee0:	e1510003 	cmp	r1, r3$/;"	l
cee4	Test/a.s	/^    cee4:	1affffa5 	bne	cd80 <malloc_consolidate+0x70>$/;"	l
cee8	Test/a.s	/^    cee8:	e28dd01c 	add	sp, sp, #28$/;"	l
ceec	Test/a.s	/^    ceec:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}$/;"	l
cef0	Test/a.s	/^    cef0:	e084c00c 	add	ip, r4, ip$/;"	l
cef4	Test/a.s	/^    cef4:	e38cc001 	orr	ip, ip, #1$/;"	l
cef8	Test/a.s	/^    cef8:	e585c004 	str	ip, [r5, #4]$/;"	l
cefc	Test/a.s	/^    cefc:	e5865030 	str	r5, [r6, #48]	; 0x30$/;"	l
cexpr	parser.y	/^cexpr		: cexpr OP_PLUS mcexpr $/;"	l
cf00	Test/a.s	/^    cf00:	eaffffcc 	b	ce38 <malloc_consolidate+0x128>$/;"	l
cf04	Test/a.s	/^    cf04:	e28dd01c 	add	sp, sp, #28$/;"	l
cf08	Test/a.s	/^    cf08:	e8bd4ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
cf0c	Test/a.s	/^    cf0c:	eafffb8e 	b	bd4c <malloc_init_state>$/;"	l
cf10	Test/a.s	/^    cf10:	e59f216c 	ldr	r2, [pc, #364]	; d084 <malloc_consolidate+0x374>$/;"	l
cf14	Test/a.s	/^    cf14:	e59f116c 	ldr	r1, [pc, #364]	; d088 <malloc_consolidate+0x378>$/;"	l
cf18	Test/a.s	/^    cf18:	e592048c 	ldr	r0, [r2, #1164]	; 0x48c$/;"	l
cf1c	Test/a.s	/^    cf1c:	e1a02005 	mov	r2, r5$/;"	l
cf20	Test/a.s	/^    cf20:	e58d300c 	str	r3, [sp, #12]$/;"	l
cf24	Test/a.s	/^    cf24:	e58dc010 	str	ip, [sp, #16]$/;"	l
cf28	Test/a.s	/^    cf28:	ebffff46 	bl	cc48 <malloc_printerr>$/;"	l
cf2c	Test/a.s	/^    cf2c:	e59d300c 	ldr	r3, [sp, #12]$/;"	l
cf30	Test/a.s	/^    cf30:	e59dc010 	ldr	ip, [sp, #16]$/;"	l
cf34	Test/a.s	/^    cf34:	eaffffdb 	b	cea8 <malloc_consolidate+0x198>$/;"	l
cf38	Test/a.s	/^    cf38:	e59fc144 	ldr	ip, [pc, #324]	; d084 <malloc_consolidate+0x374>$/;"	l
cf3c	Test/a.s	/^    cf3c:	e1a0200b 	mov	r2, fp$/;"	l
cf40	Test/a.s	/^    cf40:	e59c048c 	ldr	r0, [ip, #1164]	; 0x48c$/;"	l
cf44	Test/a.s	/^    cf44:	e59f113c 	ldr	r1, [pc, #316]	; d088 <malloc_consolidate+0x378>$/;"	l
cf48	Test/a.s	/^    cf48:	e58d300c 	str	r3, [sp, #12]$/;"	l
cf4c	Test/a.s	/^    cf4c:	ebffff3d 	bl	cc48 <malloc_printerr>$/;"	l
cf50	Test/a.s	/^    cf50:	e59d300c 	ldr	r3, [sp, #12]$/;"	l
cf54	Test/a.s	/^    cf54:	eaffffac 	b	ce0c <malloc_consolidate+0xfc>$/;"	l
cf58	Test/a.s	/^    cf58:	e5910014 	ldr	r0, [r1, #20]$/;"	l
cf5c	Test/a.s	/^    cf5c:	e1500005 	cmp	r0, r5$/;"	l
cf60	Test/a.s	/^    cf60:	1a000040 	bne	d068 <malloc_consolidate+0x358>$/;"	l
cf64	Test/a.s	/^    cf64:	e5950014 	ldr	r0, [r5, #20]$/;"	l
cf68	Test/a.s	/^    cf68:	e58d0008 	str	r0, [sp, #8]$/;"	l
cf6c	Test/a.s	/^    cf6c:	e5900010 	ldr	r0, [r0, #16]$/;"	l
cf70	Test/a.s	/^    cf70:	e1550000 	cmp	r5, r0$/;"	l
cf74	Test/a.s	/^    cf74:	1a000036 	bne	d054 <malloc_consolidate+0x344>$/;"	l
cf78	Test/a.s	/^    cf78:	e5920010 	ldr	r0, [r2, #16]$/;"	l
cf7c	Test/a.s	/^    cf7c:	e3500000 	cmp	r0, #0$/;"	l
cf80	Test/a.s	/^    cf80:	0a000013 	beq	cfd4 <malloc_consolidate+0x2c4>$/;"	l
cf84	Test/a.s	/^    cf84:	e59d2008 	ldr	r2, [sp, #8]$/;"	l
cf88	Test/a.s	/^    cf88:	e5812014 	str	r2, [r1, #20]$/;"	l
cf8c	Test/a.s	/^    cf8c:	e5952014 	ldr	r2, [r5, #20]$/;"	l
cf90	Test/a.s	/^    cf90:	e5821010 	str	r1, [r2, #16]$/;"	l
cf94	Test/a.s	/^    cf94:	eaffffc3 	b	cea8 <malloc_consolidate+0x198>$/;"	l
cf98	Test/a.s	/^    cf98:	e5910014 	ldr	r0, [r1, #20]$/;"	l
cf9c	Test/a.s	/^    cf9c:	e150000b 	cmp	r0, fp$/;"	l
cfa0	Test/a.s	/^    cfa0:	e58d0008 	str	r0, [sp, #8]$/;"	l
cfa4	Test/a.s	/^    cfa4:	1a000025 	bne	d040 <malloc_consolidate+0x330>$/;"	l
cfa8	Test/a.s	/^    cfa8:	e59b0014 	ldr	r0, [fp, #20]$/;"	l
cfac	Test/a.s	/^    cfac:	e590c010 	ldr	ip, [r0, #16]$/;"	l
cfactor	parser.y	/^cfactor:	CONST $/;"	l
cfb0	Test/a.s	/^    cfb0:	e15b000c 	cmp	fp, ip$/;"	l
cfb4	Test/a.s	/^    cfb4:	1a00001c 	bne	d02c <malloc_consolidate+0x31c>$/;"	l
cfb8	Test/a.s	/^    cfb8:	e592c010 	ldr	ip, [r2, #16]$/;"	l
cfbc	Test/a.s	/^    cfbc:	e35c0000 	cmp	ip, #0$/;"	l
cfc0	Test/a.s	/^    cfc0:	0a00000e 	beq	d000 <malloc_consolidate+0x2f0>$/;"	l
cfc4	Test/a.s	/^    cfc4:	e5810014 	str	r0, [r1, #20]$/;"	l
cfc8	Test/a.s	/^    cfc8:	e59b2014 	ldr	r2, [fp, #20]$/;"	l
cfcc	Test/a.s	/^    cfcc:	e5821010 	str	r1, [r2, #16]$/;"	l
cfd0	Test/a.s	/^    cfd0:	eaffff8d 	b	ce0c <malloc_consolidate+0xfc>$/;"	l
cfd4	Test/a.s	/^    cfd4:	e1510005 	cmp	r1, r5$/;"	l
cfd8	Test/a.s	/^    cfd8:	15821010 	strne	r1, [r2, #16]$/;"	l
cfdc	Test/a.s	/^    cfdc:	15951010 	ldrne	r1, [r5, #16]$/;"	l
cfe0	Test/a.s	/^    cfe0:	159d0008 	ldrne	r0, [sp, #8]$/;"	l
cfe4	Test/a.s	/^    cfe4:	05822014 	streq	r2, [r2, #20]$/;"	l
cfe8	Test/a.s	/^    cfe8:	15820014 	strne	r0, [r2, #20]$/;"	l
cfec	Test/a.s	/^    cfec:	15812014 	strne	r2, [r1, #20]$/;"	l
cff0	Test/a.s	/^    cff0:	15951014 	ldrne	r1, [r5, #20]$/;"	l
cff4	Test/a.s	/^    cff4:	05822010 	streq	r2, [r2, #16]$/;"	l
cff8	Test/a.s	/^    cff8:	15812010 	strne	r2, [r1, #16]$/;"	l
cffc	Test/a.s	/^    cffc:	eaffffa9 	b	cea8 <malloc_consolidate+0x198>$/;"	l
checkAssignOrExpr	semanticAnalysis.c	/^void checkAssignOrExpr(AST_NODE* assignOrExprRelatedNode)$/;"	f
checkAssignmentStmt	semanticAnalysis.c	/^void checkAssignmentStmt(AST_NODE* assignmentNode)$/;"	f
checkForStmt	semanticAnalysis.c	/^void checkForStmt(AST_NODE* forNode)$/;"	f
checkFunctionCall	semanticAnalysis.c	/^void checkFunctionCall(AST_NODE* functionCallNode)$/;"	f
checkIfStmt	semanticAnalysis.c	/^void checkIfStmt(AST_NODE* ifNode)$/;"	f
checkInit	semanticAnalysis.c	/^void checkInit(AST_NODE* initNode, AST_NODE *declNode)$/;"	f
checkParameterPassing	semanticAnalysis.c	/^void checkParameterPassing(Parameter* formalParameter, AST_NODE* actualParameter)$/;"	f
checkReturnStmt	semanticAnalysis.c	/^void checkReturnStmt(AST_NODE* returnNode)$/;"	f
checkWhileStmt	semanticAnalysis.c	/^void checkWhileStmt(AST_NODE* whileNode)$/;"	f
checkWriteFunction	semanticAnalysis.c	/^void checkWriteFunction(AST_NODE* functionCallNode)$/;"	f
child	header.h	/^	struct AST_NODE *child;$/;"	m	struct:AST_NODE	typeref:struct:AST_NODE::AST_NODE
closeScope	symbolTable.c	/^void closeScope()$/;"	f
closeSystem	parser.tab.c	/^void closeSystem()$/;"	f
cmp	Test/output.s	/^cmp r4, #0$/;"	l
cmp	Test/output.s	/^cmp r4, r5$/;"	l
cmp	Test/output.s	/^cmp r5, #0$/;"	l
codeGen1Reg1ImmInstruction	codeGeneration.c	/^void codeGen1Reg1ImmInstruction(ProcessorType processorType, char* instruction, int reg1Index, int *value){$/;"	f
codeGen2Reg1ImmInstruction	codeGeneration.c	/^void codeGen2Reg1ImmInstruction(ProcessorType processorType, char* instruction, int reg1Index, int reg2Index, void* imm)$/;"	f
codeGen2RegInstruction	codeGeneration.c	/^void codeGen2RegInstruction(ProcessorType processorType, char* instruction, int reg1Index, int reg2Index)$/;"	f
codeGen3RegInstruction	codeGeneration.c	/^void codeGen3RegInstruction(ProcessorType processorType, char* instruction, int reg1Index, int reg2Index, int reg3Index)$/;"	f
codeGenAssignOrExpr	codeGeneration.c	/^void codeGenAssignOrExpr(AST_NODE* testNode)$/;"	f
codeGenAssignmentStmt	codeGeneration.c	/^void codeGenAssignmentStmt(AST_NODE* assignmentStmtNode)$/;"	f
codeGenBlockNode	codeGeneration.c	/^void codeGenBlockNode(AST_NODE* blockNode)$/;"	f
codeGenCalcArrayElemenetAddress	codeGeneration.c	/^int codeGenCalcArrayElemenetAddress(AST_NODE* idNode)$/;"	f
codeGenConstantLabel	codeGeneration.c	/^int codeGenConstantLabel(C_type constantType, void* valuePtr)$/;"	f
codeGenConstantReference	codeGeneration.c	/^void codeGenConstantReference(AST_NODE* constantNode)$/;"	f
codeGenConvertFromFloatToInt	codeGeneration.c	/^int codeGenConvertFromFloatToInt(int floatRegIndex)$/;"	f
codeGenConvertFromIntToFloat	codeGeneration.c	/^int codeGenConvertFromIntToFloat(int intRegIndex)$/;"	f
codeGenExprNode	codeGeneration.c	/^void codeGenExprNode(AST_NODE* exprNode)$/;"	f
codeGenExprRelatedNode	codeGeneration.c	/^void codeGenExprRelatedNode(AST_NODE* exprRelatedNode)$/;"	f
codeGenFloatCompInstruction	codeGeneration.c	/^void codeGenFloatCompInstruction(char *notRealInstruction, int dstRegIndex, int srcReg1Index, int srcReg2Index)$/;"	f
codeGenForStmt	codeGeneration.c	/^void codeGenForStmt(AST_NODE* forStmtNode)$/;"	f
codeGenFunctionCall	codeGeneration.c	/^void codeGenFunctionCall(AST_NODE* functionCallNode)$/;"	f
codeGenFunctionDeclaration	codeGeneration.c	/^void codeGenFunctionDeclaration(AST_NODE *functionDeclNode)$/;"	f
codeGenGeneralNode	codeGeneration.c	/^void codeGenGeneralNode(AST_NODE* node)$/;"	f
codeGenGetBoolOfFloat	codeGeneration.c	/^void codeGenGetBoolOfFloat(int boolRegIndex, int floatRegIndex)$/;"	f
codeGenGlobalVariable	codeGeneration.c	/^void codeGenGlobalVariable(AST_NODE* varaibleDeclListNode)$/;"	f
codeGenIfStmt	codeGeneration.c	/^void codeGenIfStmt(AST_NODE* ifStmtNode)$/;"	f
codeGenLogicalInstruction	codeGeneration.c	/^void codeGenLogicalInstruction(ProcessorType processorType, char *instruction, int dstRegIndex, int srcReg1Index, int srcReg2Index)$/;"	f
codeGenPrepareRegister	codeGeneration.c	/^void codeGenPrepareRegister(ProcessorType processorType, int regIndex, int needToBeLoaded, int workRegIndexIfPseudo, char** regName)$/;"	f
codeGenProgramNode	codeGeneration.c	/^void codeGenProgramNode(AST_NODE *programNode)$/;"	f
codeGenReturnStmt	codeGeneration.c	/^void codeGenReturnStmt(AST_NODE* returnStmtNode)$/;"	f
codeGenSaveToMemoryIfPsuedoRegister	codeGeneration.c	/^void codeGenSaveToMemoryIfPsuedoRegister(ProcessorType processorType, int regIndex, char* regName)$/;"	f
codeGenSetReg	codeGeneration.c	/^void codeGenSetReg(ProcessorType processorType, char* instruction, int reg1Index, int value){$/;"	f
codeGenStmtNode	codeGeneration.c	/^void codeGenStmtNode(AST_NODE* stmtNode)$/;"	f
codeGenVariableReference	codeGeneration.c	/^void codeGenVariableReference(AST_NODE* idNode)$/;"	f
codeGenWhileStmt	codeGeneration.c	/^void codeGenWhileStmt(AST_NODE* whileStmtNode)$/;"	f
codeGenerate	codeGeneration.c	/^void codeGenerate(AST_NODE *root)$/;"	f
const1	header.h	/^		CON_Type *const1;$/;"	m	union:AST_NODE::__anon8
const1	parser.tab.c	/^	CON_Type  *const1;$/;"	m	union:YYSTYPE	file:
const1	parser.tab.h	/^	CON_Type  *const1;$/;"	m	union:YYSTYPE
constEvalValue	header.h	/^    } constEvalValue;$/;"	m	struct:EXPRSemanticValue	typeref:union:EXPRSemanticValue::__anon5
const_type	header.h	/^        C_type  const_type;$/;"	m	struct:CON_Type
const_u	header.h	/^		const_u;$/;"	m	struct:CON_Type	typeref:union:CON_Type::__anon7
currentLevel	symbolTable.h	/^    int currentLevel;$/;"	m	struct:SymbolTable
d000	Test/a.s	/^    d000:	e151000b 	cmp	r1, fp$/;"	l
d004	Test/a.s	/^    d004:	159dc008 	ldrne	ip, [sp, #8]$/;"	l
d008	Test/a.s	/^    d008:	15821010 	strne	r1, [r2, #16]$/;"	l
d00c	Test/a.s	/^    d00c:	159c1010 	ldrne	r1, [ip, #16]$/;"	l
d010	Test/a.s	/^    d010:	15820014 	strne	r0, [r2, #20]$/;"	l
d014	Test/a.s	/^    d014:	15812014 	strne	r2, [r1, #20]$/;"	l
d018	Test/a.s	/^    d018:	159c1014 	ldrne	r1, [ip, #20]$/;"	l
d01c	Test/a.s	/^    d01c:	05822014 	streq	r2, [r2, #20]$/;"	l
d020	Test/a.s	/^    d020:	05822010 	streq	r2, [r2, #16]$/;"	l
d024	Test/a.s	/^    d024:	15812010 	strne	r2, [r1, #16]$/;"	l
d028	Test/a.s	/^    d028:	eaffff77 	b	ce0c <malloc_consolidate+0xfc>$/;"	l
d02c	Test/a.s	/^    d02c:	e59f0058 	ldr	r0, [pc, #88]	; d08c <malloc_consolidate+0x37c>$/;"	l
d030	Test/a.s	/^    d030:	e59f1058 	ldr	r1, [pc, #88]	; d090 <malloc_consolidate+0x380>$/;"	l
d034	Test/a.s	/^    d034:	e59f2058 	ldr	r2, [pc, #88]	; d094 <malloc_consolidate+0x384>$/;"	l
d038	Test/a.s	/^    d038:	e59f3058 	ldr	r3, [pc, #88]	; d098 <malloc_consolidate+0x388>$/;"	l
d03c	Test/a.s	/^    d03c:	ebfffcc6 	bl	c35c <__malloc_assert>$/;"	l
d040	Test/a.s	/^    d040:	e59f0054 	ldr	r0, [pc, #84]	; d09c <malloc_consolidate+0x38c>$/;"	l
d044	Test/a.s	/^    d044:	e59f1044 	ldr	r1, [pc, #68]	; d090 <malloc_consolidate+0x380>$/;"	l
d048	Test/a.s	/^    d048:	e59f2044 	ldr	r2, [pc, #68]	; d094 <malloc_consolidate+0x384>$/;"	l
d04c	Test/a.s	/^    d04c:	e59f3044 	ldr	r3, [pc, #68]	; d098 <malloc_consolidate+0x388>$/;"	l
d050	Test/a.s	/^    d050:	ebfffcc1 	bl	c35c <__malloc_assert>$/;"	l
d054	Test/a.s	/^    d054:	e59f0044 	ldr	r0, [pc, #68]	; d0a0 <malloc_consolidate+0x390>$/;"	l
d058	Test/a.s	/^    d058:	e59f1030 	ldr	r1, [pc, #48]	; d090 <malloc_consolidate+0x380>$/;"	l
d05c	Test/a.s	/^    d05c:	e59f2040 	ldr	r2, [pc, #64]	; d0a4 <malloc_consolidate+0x394>$/;"	l
d060	Test/a.s	/^    d060:	e59f3030 	ldr	r3, [pc, #48]	; d098 <malloc_consolidate+0x388>$/;"	l
d064	Test/a.s	/^    d064:	ebfffcbc 	bl	c35c <__malloc_assert>$/;"	l
d068	Test/a.s	/^    d068:	e59f0038 	ldr	r0, [pc, #56]	; d0a8 <malloc_consolidate+0x398>$/;"	l
d06c	Test/a.s	/^    d06c:	e59f101c 	ldr	r1, [pc, #28]	; d090 <malloc_consolidate+0x380>$/;"	l
d070	Test/a.s	/^    d070:	e59f202c 	ldr	r2, [pc, #44]	; d0a4 <malloc_consolidate+0x394>$/;"	l
d074	Test/a.s	/^    d074:	e59f301c 	ldr	r3, [pc, #28]	; d098 <malloc_consolidate+0x388>$/;"	l
d078	Test/a.s	/^    d078:	ebfffcb7 	bl	c35c <__malloc_assert>$/;"	l
d07c	Test/a.s	/^    d07c:	0008d2f8 	.word	0x0008d2f8$/;"	l
d080	Test/a.s	/^    d080:	000001ff 	.word	0x000001ff$/;"	l
d084	Test/a.s	/^    d084:	0008c4b4 	.word	0x0008c4b4$/;"	l
d088	Test/a.s	/^    d088:	0006ca68 	.word	0x0006ca68$/;"	l
d08c	Test/a.s	/^    d08c:	0006cb04 	.word	0x0006cb04$/;"	l
d090	Test/a.s	/^    d090:	0006c930 	.word	0x0006c930$/;"	l
d094	Test/a.s	/^    d094:	00000ff1 	.word	0x00000ff1$/;"	l
d098	Test/a.s	/^    d098:	0006de64 	.word	0x0006de64$/;"	l
d09c	Test/a.s	/^    d09c:	0006cad0 	.word	0x0006cad0$/;"	l
d0a0	Test/a.s	/^    d0a0:	0006caac 	.word	0x0006caac$/;"	l
d0a4	Test/a.s	/^    d0a4:	00000fe9 	.word	0x00000fe9$/;"	l
d0a8	Test/a.s	/^    d0a8:	0006ca88 	.word	0x0006ca88$/;"	l
d0ac	Test/a.s	/^    d0ac:	e92d4ff8 	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
d0b0	Test/a.s	/^    d0b0:	e5903030 	ldr	r3, [r0, #48]	; 0x30$/;"	l
d0b4	Test/a.s	/^    d0b4:	e1a0a000 	mov	sl, r0$/;"	l
d0b8	Test/a.s	/^    d0b8:	e3530000 	cmp	r3, #0$/;"	l
d0bc	Test/a.s	/^    d0bc:	e1a09001 	mov	r9, r1$/;"	l
d0c0	Test/a.s	/^    d0c0:	0a000041 	beq	d1cc <int_mallinfo+0x120>$/;"	l
d0c4	Test/a.s	/^    d0c4:	e5931004 	ldr	r1, [r3, #4]$/;"	l
d0c8	Test/a.s	/^    d0c8:	e3a08000 	mov	r8, #0$/;"	l
d0cc	Test/a.s	/^    d0cc:	e3c11007 	bic	r1, r1, #7$/;"	l
d0d0	Test/a.s	/^    d0d0:	e1a07008 	mov	r7, r8$/;"	l
d0d4	Test/a.s	/^    d0d4:	e1a0c00a 	mov	ip, sl$/;"	l
d0d8	Test/a.s	/^    d0d8:	e3a0000a 	mov	r0, #10$/;"	l
d0dc	Test/a.s	/^    d0dc:	e59c3008 	ldr	r3, [ip, #8]$/;"	l
d0e0	Test/a.s	/^    d0e0:	e3530000 	cmp	r3, #0$/;"	l
d0e4	Test/a.s	/^    d0e4:	0a000005 	beq	d100 <int_mallinfo+0x54>$/;"	l
d0e8	Test/a.s	/^    d0e8:	e993000c 	ldmib	r3, {r2, r3}$/;"	l
d0ec	Test/a.s	/^    d0ec:	e3c22007 	bic	r2, r2, #7$/;"	l
d0f0	Test/a.s	/^    d0f0:	e3530000 	cmp	r3, #0$/;"	l
d0f4	Test/a.s	/^    d0f4:	e2888001 	add	r8, r8, #1$/;"	l
d0f8	Test/a.s	/^    d0f8:	e0877002 	add	r7, r7, r2$/;"	l
d0fc	Test/a.s	/^    d0fc:	1afffff9 	bne	d0e8 <int_mallinfo+0x3c>$/;"	l
d100	Test/a.s	/^    d100:	e2500001 	subs	r0, r0, #1$/;"	l
d104	Test/a.s	/^    d104:	e28cc004 	add	ip, ip, #4$/;"	l
d108	Test/a.s	/^    d108:	1afffff3 	bne	d0dc <int_mallinfo+0x30>$/;"	l
d10c	Test/a.s	/^    d10c:	e0872001 	add	r2, r7, r1$/;"	l
d110	Test/a.s	/^    d110:	e3e06001 	mvn	r6, #1$/;"	l
d114	Test/a.s	/^    d114:	e3a0c001 	mov	ip, #1$/;"	l
d118	Test/a.s	/^    d118:	e286500e 	add	r5, r6, #14$/;"	l
d11c	Test/a.s	/^    d11c:	e08a5105 	add	r5, sl, r5, lsl #2$/;"	l
d120	Test/a.s	/^    d120:	e595300c 	ldr	r3, [r5, #12]$/;"	l
d124	Test/a.s	/^    d124:	e1550003 	cmp	r5, r3$/;"	l
d128	Test/a.s	/^    d128:	0a000006 	beq	d148 <int_mallinfo+0x9c>$/;"	l
d12c	Test/a.s	/^    d12c:	e5934004 	ldr	r4, [r3, #4]$/;"	l
d130	Test/a.s	/^    d130:	e593300c 	ldr	r3, [r3, #12]$/;"	l
d134	Test/a.s	/^    d134:	e3c44007 	bic	r4, r4, #7$/;"	l
d138	Test/a.s	/^    d138:	e1550003 	cmp	r5, r3$/;"	l
d13c	Test/a.s	/^    d13c:	e28cc001 	add	ip, ip, #1$/;"	l
d140	Test/a.s	/^    d140:	e0822004 	add	r2, r2, r4$/;"	l
d144	Test/a.s	/^    d144:	1afffff8 	bne	d12c <int_mallinfo+0x80>$/;"	l
d148	Test/a.s	/^    d148:	e2866002 	add	r6, r6, #2$/;"	l
d14c	Test/a.s	/^    d14c:	e35600fc 	cmp	r6, #252	; 0xfc$/;"	l
d150	Test/a.s	/^    d150:	1afffff0 	bne	d118 <int_mallinfo+0x6c>$/;"	l
d154	Test/a.s	/^    d154:	e59a3448 	ldr	r3, [sl, #1096]	; 0x448$/;"	l
d158	Test/a.s	/^    d158:	e599b000 	ldr	fp, [r9]$/;"	l
d15c	Test/a.s	/^    d15c:	e599001c 	ldr	r0, [r9, #28]$/;"	l
d160	Test/a.s	/^    d160:	e9990060 	ldmib	r9, {r5, r6}$/;"	l
d164	Test/a.s	/^    d164:	e5994020 	ldr	r4, [r9, #32]$/;"	l
d168	Test/a.s	/^    d168:	e0830000 	add	r0, r3, r0$/;"	l
d16c	Test/a.s	/^    d16c:	e0866008 	add	r6, r6, r8$/;"	l
d170	Test/a.s	/^    d170:	e08b3003 	add	r3, fp, r3$/;"	l
d174	Test/a.s	/^    d174:	e59f805c 	ldr	r8, [pc, #92]	; d1d8 <int_mallinfo+0x12c>$/;"	l
d178	Test/a.s	/^    d178:	e599b018 	ldr	fp, [r9, #24]$/;"	l
d17c	Test/a.s	/^    d17c:	e0620000 	rsb	r0, r2, r0$/;"	l
d180	Test/a.s	/^    d180:	e085c00c 	add	ip, r5, ip$/;"	l
d184	Test/a.s	/^    d184:	e0842002 	add	r2, r4, r2$/;"	l
d188	Test/a.s	/^    d188:	e08b7007 	add	r7, fp, r7$/;"	l
d18c	Test/a.s	/^    d18c:	e15a0008 	cmp	sl, r8$/;"	l
d190	Test/a.s	/^    d190:	e589001c 	str	r0, [r9, #28]$/;"	l
d194	Test/a.s	/^    d194:	e5893000 	str	r3, [r9]$/;"	l
d198	Test/a.s	/^    d198:	e5896008 	str	r6, [r9, #8]$/;"	l
d19c	Test/a.s	/^    d19c:	e589c004 	str	ip, [r9, #4]$/;"	l
d1a0	Test/a.s	/^    d1a0:	e5892020 	str	r2, [r9, #32]$/;"	l
d1a4	Test/a.s	/^    d1a4:	e5897018 	str	r7, [r9, #24]$/;"	l
d1a8	Test/a.s	/^    d1a8:	18bd8ff8 	popne	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}$/;"	l
d1ac	Test/a.s	/^    d1ac:	e59a0468 	ldr	r0, [sl, #1128]	; 0x468$/;"	l
d1b0	Test/a.s	/^    d1b0:	e59a2478 	ldr	r2, [sl, #1144]	; 0x478$/;"	l
d1b4	Test/a.s	/^    d1b4:	e59a3480 	ldr	r3, [sl, #1152]	; 0x480$/;"	l
d1b8	Test/a.s	/^    d1b8:	e5891024 	str	r1, [r9, #36]	; 0x24$/;"	l
d1bc	Test/a.s	/^    d1bc:	e589000c 	str	r0, [r9, #12]$/;"	l
d1c0	Test/a.s	/^    d1c0:	e5892010 	str	r2, [r9, #16]$/;"	l
d1c4	Test/a.s	/^    d1c4:	e5893014 	str	r3, [r9, #20]$/;"	l
d1c8	Test/a.s	/^    d1c8:	e8bd8ff8 	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}$/;"	l
d1cc	Test/a.s	/^    d1cc:	ebfffecf 	bl	cd10 <malloc_consolidate>$/;"	l
d1d0	Test/a.s	/^    d1d0:	e59a3030 	ldr	r3, [sl, #48]	; 0x30$/;"	l
d1d4	Test/a.s	/^    d1d4:	eaffffba 	b	d0c4 <int_mallinfo+0x18>$/;"	l
d1d8	Test/a.s	/^    d1d8:	0008c4b4 	.word	0x0008c4b4$/;"	l
d1dc	Test/a.s	/^    d1dc:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}$/;"	l
d1e0	Test/a.s	/^    d1e0:	e59f4114 	ldr	r4, [pc, #276]	; d2fc <top_check+0x120>$/;"	l
d1e4	Test/a.s	/^    d1e4:	e59f1114 	ldr	r1, [pc, #276]	; d300 <top_check+0x124>$/;"	l
d1e8	Test/a.s	/^    d1e8:	e1a03004 	mov	r3, r4$/;"	l
d1ec	Test/a.s	/^    d1ec:	e5b32030 	ldr	r2, [r3, #48]!	; 0x30$/;"	l
d1f0	Test/a.s	/^    d1f0:	e5918000 	ldr	r8, [r1]$/;"	l
d1f4	Test/a.s	/^    d1f4:	e1520003 	cmp	r2, r3$/;"	l
d1f8	Test/a.s	/^    d1f8:	0a000036 	beq	d2d8 <top_check+0xfc>$/;"	l
d1fc	Test/a.s	/^    d1fc:	e5923004 	ldr	r3, [r2, #4]$/;"	l
d200	Test/a.s	/^    d200:	e2130002 	ands	r0, r3, #2$/;"	l
d204	Test/a.s	/^    d204:	1a000002 	bne	d214 <top_check+0x38>$/;"	l
d208	Test/a.s	/^    d208:	e3c31007 	bic	r1, r3, #7$/;"	l
d20c	Test/a.s	/^    d20c:	e351000f 	cmp	r1, #15$/;"	l
d210	Test/a.s	/^    d210:	8a000025 	bhi	d2ac <top_check+0xd0>$/;"	l
d214	Test/a.s	/^    d214:	e59f10e8 	ldr	r1, [pc, #232]	; d304 <top_check+0x128>$/;"	l
d218	Test/a.s	/^    d218:	e594048c 	ldr	r0, [r4, #1164]	; 0x48c$/;"	l
d21c	Test/a.s	/^    d21c:	ebfffe89 	bl	cc48 <malloc_printerr>$/;"	l
d220	Test/a.s	/^    d220:	e5943488 	ldr	r3, [r4, #1160]	; 0x488$/;"	l
d224	Test/a.s	/^    d224:	e3a00000 	mov	r0, #0$/;"	l
d228	Test/a.s	/^    d228:	e12fff33 	blx	r3$/;"	l
d22c	Test/a.s	/^    d22c:	e5943458 	ldr	r3, [r4, #1112]	; 0x458$/;"	l
d230	Test/a.s	/^    d230:	e2106007 	ands	r6, r0, #7$/;"	l
d234	Test/a.s	/^    d234:	12666008 	rsbne	r6, r6, #8$/;"	l
d238	Test/a.s	/^    d238:	e2833010 	add	r3, r3, #16$/;"	l
d23c	Test/a.s	/^    d23c:	e0833006 	add	r3, r3, r6$/;"	l
d240	Test/a.s	/^    d240:	e0807003 	add	r7, r0, r3$/;"	l
d244	Test/a.s	/^    d244:	e2482001 	sub	r2, r8, #1$/;"	l
d248	Test/a.s	/^    d248:	e0072002 	and	r2, r7, r2$/;"	l
d24c	Test/a.s	/^    d24c:	e0838008 	add	r8, r3, r8$/;"	l
d250	Test/a.s	/^    d250:	e0627008 	rsb	r7, r2, r8$/;"	l
d254	Test/a.s	/^    d254:	e1a05000 	mov	r5, r0$/;"	l
d258	Test/a.s	/^    d258:	e5943488 	ldr	r3, [r4, #1160]	; 0x488$/;"	l
d25c	Test/a.s	/^    d25c:	e1a00007 	mov	r0, r7$/;"	l
d260	Test/a.s	/^    d260:	e12fff33 	blx	r3$/;"	l
d264	Test/a.s	/^    d264:	e2508000 	subs	r8, r0, #0$/;"	l
d268	Test/a.s	/^    d268:	0a00001c 	beq	d2e0 <top_check+0x104>$/;"	l
d26c	Test/a.s	/^    d26c:	e59f3094 	ldr	r3, [pc, #148]	; d308 <top_check+0x12c>$/;"	l
d270	Test/a.s	/^    d270:	e5933000 	ldr	r3, [r3]$/;"	l
d274	Test/a.s	/^    d274:	e3530000 	cmp	r3, #0$/;"	l
d278	Test/a.s	/^    d278:	0a000000 	beq	d280 <top_check+0xa4>$/;"	l
d27c	Test/a.s	/^    d27c:	e12fff33 	blx	r3$/;"	l
d280	Test/a.s	/^    d280:	e5942484 	ldr	r2, [r4, #1156]	; 0x484$/;"	l
d284	Test/a.s	/^    d284:	e0663007 	rsb	r3, r6, r7$/;"	l
d288	Test/a.s	/^    d288:	e0628008 	rsb	r8, r2, r8$/;"	l
d28c	Test/a.s	/^    d28c:	e0855006 	add	r5, r5, r6$/;"	l
d290	Test/a.s	/^    d290:	e3833001 	orr	r3, r3, #1$/;"	l
d294	Test/a.s	/^    d294:	e0877008 	add	r7, r7, r8$/;"	l
d298	Test/a.s	/^    d298:	e5845030 	str	r5, [r4, #48]	; 0x30$/;"	l
d29c	Test/a.s	/^    d29c:	e5847448 	str	r7, [r4, #1096]	; 0x448$/;"	l
d2a0	Test/a.s	/^    d2a0:	e3a00000 	mov	r0, #0$/;"	l
d2a4	Test/a.s	/^    d2a4:	e5853004 	str	r3, [r5, #4]$/;"	l
d2a8	Test/a.s	/^    d2a8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}$/;"	l
d2ac	Test/a.s	/^    d2ac:	e3130001 	tst	r3, #1$/;"	l
d2b0	Test/a.s	/^    d2b0:	0affffd7 	beq	d214 <top_check+0x38>$/;"	l
d2b4	Test/a.s	/^    d2b4:	e5943004 	ldr	r3, [r4, #4]$/;"	l
d2b8	Test/a.s	/^    d2b8:	e2133002 	ands	r3, r3, #2$/;"	l
d2bc	Test/a.s	/^    d2bc:	18bd81f0 	popne	{r4, r5, r6, r7, r8, pc}$/;"	l
d2c0	Test/a.s	/^    d2c0:	e5945484 	ldr	r5, [r4, #1156]	; 0x484$/;"	l
d2c4	Test/a.s	/^    d2c4:	e594c448 	ldr	ip, [r4, #1096]	; 0x448$/;"	l
d2c8	Test/a.s	/^    d2c8:	e0821001 	add	r1, r2, r1$/;"	l
d2cc	Test/a.s	/^    d2cc:	e085c00c 	add	ip, r5, ip$/;"	l
d2d0	Test/a.s	/^    d2d0:	e151000c 	cmp	r1, ip$/;"	l
d2d4	Test/a.s	/^    d2d4:	1affffce 	bne	d214 <top_check+0x38>$/;"	l
d2d8	Test/a.s	/^    d2d8:	e3a00000 	mov	r0, #0$/;"	l
d2dc	Test/a.s	/^    d2dc:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}$/;"	l
d2e0	Test/a.s	/^    d2e0:	e59f3024 	ldr	r3, [pc, #36]	; d30c <top_check+0x130>$/;"	l
d2e4	Test/a.s	/^    d2e4:	ebfff05d 	bl	9460 <__aeabi_read_tp>$/;"	l
d2e8	Test/a.s	/^    d2e8:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
d2ec	Test/a.s	/^    d2ec:	e3a0200c 	mov	r2, #12$/;"	l
d2f0	Test/a.s	/^    d2f0:	e7802003 	str	r2, [r0, r3]$/;"	l
d2f4	Test/a.s	/^    d2f4:	e3e00000 	mvn	r0, #0$/;"	l
d2f8	Test/a.s	/^    d2f8:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}$/;"	l
d2fc	Test/a.s	/^    d2fc:	0008c4b4 	.word	0x0008c4b4$/;"	l
d300	Test/a.s	/^    d300:	0008c970 	.word	0x0008c970$/;"	l
d304	Test/a.s	/^    d304:	0006cb38 	.word	0x0006cb38$/;"	l
d308	Test/a.s	/^    d308:	0008d34c 	.word	0x0008d34c$/;"	l
d30c	Test/a.s	/^    d30c:	0007ed50 	.word	0x0007ed50$/;"	l
d310	Test/a.s	/^    d310:	e5901004 	ldr	r1, [r0, #4]$/;"	l
d314	Test/a.s	/^    d314:	e92d4008 	push	{r3, lr}$/;"	l
d318	Test/a.s	/^    d318:	e3110002 	tst	r1, #2$/;"	l
d31c	Test/a.s	/^    d31c:	e1a02000 	mov	r2, r0$/;"	l
d320	Test/a.s	/^    d320:	e3c11007 	bic	r1, r1, #7$/;"	l
d324	Test/a.s	/^    d324:	0a000011 	beq	d370 <munmap_chunk+0x60>$/;"	l
d328	Test/a.s	/^    d328:	e59f3068 	ldr	r3, [pc, #104]	; d398 <munmap_chunk+0x88>$/;"	l
d32c	Test/a.s	/^    d32c:	e5900000 	ldr	r0, [r0]$/;"	l
d330	Test/a.s	/^    d330:	e5933000 	ldr	r3, [r3]$/;"	l
d334	Test/a.s	/^    d334:	e0811000 	add	r1, r1, r0$/;"	l
d338	Test/a.s	/^    d338:	e0600002 	rsb	r0, r0, r2$/;"	l
d33c	Test/a.s	/^    d33c:	e2433001 	sub	r3, r3, #1$/;"	l
d340	Test/a.s	/^    d340:	e180c001 	orr	ip, r0, r1$/;"	l
d344	Test/a.s	/^    d344:	e11c0003 	tst	ip, r3$/;"	l
d348	Test/a.s	/^    d348:	e59f304c 	ldr	r3, [pc, #76]	; d39c <munmap_chunk+0x8c>$/;"	l
d34c	Test/a.s	/^    d34c:	1a00000c 	bne	d384 <munmap_chunk+0x74>$/;"	l
d350	Test/a.s	/^    d350:	e593c468 	ldr	ip, [r3, #1128]	; 0x468$/;"	l
d354	Test/a.s	/^    d354:	e5932478 	ldr	r2, [r3, #1144]	; 0x478$/;"	l
d358	Test/a.s	/^    d358:	e24cc001 	sub	ip, ip, #1$/;"	l
d35c	Test/a.s	/^    d35c:	e0612002 	rsb	r2, r1, r2$/;"	l
d360	Test/a.s	/^    d360:	e583c468 	str	ip, [r3, #1128]	; 0x468$/;"	l
d364	Test/a.s	/^    d364:	e5832478 	str	r2, [r3, #1144]	; 0x478$/;"	l
d368	Test/a.s	/^    d368:	e8bd4008 	pop	{r3, lr}$/;"	l
d36c	Test/a.s	/^    d36c:	ea001dab 	b	14a20 <__munmap>$/;"	l
d370	Test/a.s	/^    d370:	e59f0028 	ldr	r0, [pc, #40]	; d3a0 <munmap_chunk+0x90>$/;"	l
d374	Test/a.s	/^    d374:	e59f1028 	ldr	r1, [pc, #40]	; d3a4 <munmap_chunk+0x94>$/;"	l
d378	Test/a.s	/^    d378:	e59f2028 	ldr	r2, [pc, #40]	; d3a8 <munmap_chunk+0x98>$/;"	l
d37c	Test/a.s	/^    d37c:	e59f3028 	ldr	r3, [pc, #40]	; d3ac <munmap_chunk+0x9c>$/;"	l
d380	Test/a.s	/^    d380:	ebfffbf5 	bl	c35c <__malloc_assert>$/;"	l
d384	Test/a.s	/^    d384:	e593048c 	ldr	r0, [r3, #1164]	; 0x48c$/;"	l
d388	Test/a.s	/^    d388:	e59f1020 	ldr	r1, [pc, #32]	; d3b0 <munmap_chunk+0xa0>$/;"	l
d38c	Test/a.s	/^    d38c:	e2822008 	add	r2, r2, #8$/;"	l
d390	Test/a.s	/^    d390:	e8bd4008 	pop	{r3, lr}$/;"	l
d394	Test/a.s	/^    d394:	eafffe2b 	b	cc48 <malloc_printerr>$/;"	l
d398	Test/a.s	/^    d398:	0008c970 	.word	0x0008c970$/;"	l
d39c	Test/a.s	/^    d39c:	0008c4b4 	.word	0x0008c4b4$/;"	l
d3a0	Test/a.s	/^    d3a0:	0006c91c 	.word	0x0006c91c$/;"	l
d3a4	Test/a.s	/^    d3a4:	0006c930 	.word	0x0006c930$/;"	l
d3a8	Test/a.s	/^    d3a8:	00000ad6 	.word	0x00000ad6$/;"	l
d3ac	Test/a.s	/^    d3ac:	0006de84 	.word	0x0006de84$/;"	l
d3b0	Test/a.s	/^    d3b0:	0006cb58 	.word	0x0006cb58$/;"	l
d3b4	Test/a.s	/^    d3b4:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
d3b8	Test/a.s	/^    d3b8:	e5913004 	ldr	r3, [r1, #4]$/;"	l
d3bc	Test/a.s	/^    d3bc:	e1a08001 	mov	r8, r1$/;"	l
d3c0	Test/a.s	/^    d3c0:	e3c35007 	bic	r5, r3, #7$/;"	l
d3c4	Test/a.s	/^    d3c4:	e2651000 	rsb	r1, r5, #0$/;"	l
d3c8	Test/a.s	/^    d3c8:	e24dd024 	sub	sp, sp, #36	; 0x24$/;"	l
d3cc	Test/a.s	/^    d3cc:	e1580001 	cmp	r8, r1$/;"	l
d3d0	Test/a.s	/^    d3d0:	e1a0a000 	mov	sl, r0$/;"	l
d3d4	Test/a.s	/^    d3d4:	e58d2008 	str	r2, [sp, #8]$/;"	l
d3d8	Test/a.s	/^    d3d8:	8a0001bb 	bhi	dacc <_int_free+0x718>$/;"	l
d3dc	Test/a.s	/^    d3dc:	e3180007 	tst	r8, #7$/;"	l
d3e0	Test/a.s	/^    d3e0:	1a0001b9 	bne	dacc <_int_free+0x718>$/;"	l
d3e4	Test/a.s	/^    d3e4:	e355000f 	cmp	r5, #15$/;"	l
d3e8	Test/a.s	/^    d3e8:	9a0001d5 	bls	db44 <_int_free+0x790>$/;"	l
d3ec	Test/a.s	/^    d3ec:	e59f6b84 	ldr	r6, [pc, #2948]	; df78 <_int_free+0xbc4>$/;"	l
d3f0	Test/a.s	/^    d3f0:	e5962000 	ldr	r2, [r6]$/;"	l
d3f4	Test/a.s	/^    d3f4:	e1550002 	cmp	r5, r2$/;"	l
d3f8	Test/a.s	/^    d3f8:	8a00003d 	bhi	d4f4 <_int_free+0x140>$/;"	l
d3fc	Test/a.s	/^    d3fc:	e0887005 	add	r7, r8, r5$/;"	l
d400	Test/a.s	/^    d400:	e5973004 	ldr	r3, [r7, #4]$/;"	l
d404	Test/a.s	/^    d404:	e3530008 	cmp	r3, #8$/;"	l
d408	Test/a.s	/^    d408:	9a0001cf 	bls	db4c <_int_free+0x798>$/;"	l
d40c	Test/a.s	/^    d40c:	e5902448 	ldr	r2, [r0, #1096]	; 0x448$/;"	l
d410	Test/a.s	/^    d410:	e3c33007 	bic	r3, r3, #7$/;"	l
d414	Test/a.s	/^    d414:	e1530002 	cmp	r3, r2$/;"	l
d418	Test/a.s	/^    d418:	2a0001cb 	bcs	db4c <_int_free+0x798>$/;"	l
d41c	Test/a.s	/^    d41c:	e5963020 	ldr	r3, [r6, #32]$/;"	l
d420	Test/a.s	/^    d420:	e3530000 	cmp	r3, #0$/;"	l
d424	Test/a.s	/^    d424:	1a0001c1 	bne	db30 <_int_free+0x77c>$/;"	l
d428	Test/a.s	/^    d428:	e28a6004 	add	r6, sl, #4$/;"	l
d42c	Test/a.s	/^    d42c:	e59a4004 	ldr	r4, [sl, #4]$/;"	l
d430	Test/a.s	/^    d430:	e1a02006 	mov	r2, r6$/;"	l
d434	Test/a.s	/^    d434:	e3c41001 	bic	r1, r4, #1$/;"	l
d438	Test/a.s	/^    d438:	e5923000 	ldr	r3, [r2]$/;"	l
d43c	Test/a.s	/^    d43c:	e1530004 	cmp	r3, r4$/;"	l
d440	Test/a.s	/^    d440:	1a000005 	bne	d45c <_int_free+0xa8>$/;"	l
d444	Test/a.s	/^    d444:	e1a00004 	mov	r0, r4$/;"	l
d448	Test/a.s	/^    d448:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
d44c	Test/a.s	/^    d44c:	e1a0e00f 	mov	lr, pc$/;"	l
d450	Test/a.s	/^    d450:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
d454	Test/a.s	/^    d454:	3afffff7 	bcc	d438 <_int_free+0x84>$/;"	l
d458	Test/a.s	/^    d458:	e1a03004 	mov	r3, r4$/;"	l
d45c	Test/a.s	/^    d45c:	e1540003 	cmp	r4, r3$/;"	l
d460	Test/a.s	/^    d460:	1afffff1 	bne	d42c <_int_free+0x78>$/;"	l
d464	Test/a.s	/^    d464:	e1a061a5 	lsr	r6, r5, #3$/;"	l
d468	Test/a.s	/^    d468:	e79a5106 	ldr	r5, [sl, r6, lsl #2]$/;"	l
d46c	Test/a.s	/^    d46c:	e08aa106 	add	sl, sl, r6, lsl #2$/;"	l
d470	Test/a.s	/^    d470:	e1580005 	cmp	r8, r5$/;"	l
d474	Test/a.s	/^    d474:	e2466002 	sub	r6, r6, #2$/;"	l
d478	Test/a.s	/^    d478:	13e07000 	mvnne	r7, #0$/;"	l
d47c	Test/a.s	/^    d47c:	1a000003 	bne	d490 <_int_free+0xdc>$/;"	l
d480	Test/a.s	/^    d480:	ea00016b 	b	da34 <_int_free+0x680>$/;"	l
d484	Test/a.s	/^    d484:	e1580003 	cmp	r8, r3$/;"	l
d488	Test/a.s	/^    d488:	0a000169 	beq	da34 <_int_free+0x680>$/;"	l
d48c	Test/a.s	/^    d48c:	e1a05003 	mov	r5, r3$/;"	l
d490	Test/a.s	/^    d490:	e3550000 	cmp	r5, #0$/;"	l
d494	Test/a.s	/^    d494:	15957004 	ldrne	r7, [r5, #4]$/;"	l
d498	Test/a.s	/^    d498:	e5885008 	str	r5, [r8, #8]$/;"	l
d49c	Test/a.s	/^    d49c:	11a071a7 	lsrne	r7, r7, #3$/;"	l
d4a0	Test/a.s	/^    d4a0:	12477002 	subne	r7, r7, #2$/;"	l
d4a4	Test/a.s	/^    d4a4:	e1a01008 	mov	r1, r8$/;"	l
d4a8	Test/a.s	/^    d4a8:	e1a0200a 	mov	r2, sl$/;"	l
d4ac	Test/a.s	/^    d4ac:	e1a04005 	mov	r4, r5$/;"	l
d4b0	Test/a.s	/^    d4b0:	e5923000 	ldr	r3, [r2]$/;"	l
d4b4	Test/a.s	/^    d4b4:	e1530004 	cmp	r3, r4$/;"	l
d4b8	Test/a.s	/^    d4b8:	1a000005 	bne	d4d4 <_int_free+0x120>$/;"	l
d4bc	Test/a.s	/^    d4bc:	e1a00004 	mov	r0, r4$/;"	l
d4c0	Test/a.s	/^    d4c0:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
d4c4	Test/a.s	/^    d4c4:	e1a0e00f 	mov	lr, pc$/;"	l
d4c8	Test/a.s	/^    d4c8:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
d4cc	Test/a.s	/^    d4cc:	3afffff7 	bcc	d4b0 <_int_free+0xfc>$/;"	l
d4d0	Test/a.s	/^    d4d0:	e1a03004 	mov	r3, r4$/;"	l
d4d4	Test/a.s	/^    d4d4:	e1550003 	cmp	r5, r3$/;"	l
d4d8	Test/a.s	/^    d4d8:	1affffe9 	bne	d484 <_int_free+0xd0>$/;"	l
d4dc	Test/a.s	/^    d4dc:	e3550000 	cmp	r5, #0$/;"	l
d4e0	Test/a.s	/^    d4e0:	0a000001 	beq	d4ec <_int_free+0x138>$/;"	l
d4e4	Test/a.s	/^    d4e4:	e1570006 	cmp	r7, r6$/;"	l
d4e8	Test/a.s	/^    d4e8:	1a0001f3 	bne	dcbc <_int_free+0x908>$/;"	l
d4ec	Test/a.s	/^    d4ec:	e28dd024 	add	sp, sp, #36	; 0x24$/;"	l
d4f0	Test/a.s	/^    d4f0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}$/;"	l
d4f4	Test/a.s	/^    d4f4:	e2133002 	ands	r3, r3, #2$/;"	l
d4f8	Test/a.s	/^    d4f8:	1a000133 	bne	d9cc <_int_free+0x618>$/;"	l
d4fc	Test/a.s	/^    d4fc:	e59dc008 	ldr	ip, [sp, #8]$/;"	l
d500	Test/a.s	/^    d500:	e35c0000 	cmp	ip, #0$/;"	l
d504	Test/a.s	/^    d504:	158d3010 	strne	r3, [sp, #16]$/;"	l
d508	Test/a.s	/^    d508:	0a0000ce 	beq	d848 <_int_free+0x494>$/;"	l
d50c	Test/a.s	/^    d50c:	e59a3030 	ldr	r3, [sl, #48]	; 0x30$/;"	l
d510	Test/a.s	/^    d510:	e0884005 	add	r4, r8, r5$/;"	l
d514	Test/a.s	/^    d514:	e1580003 	cmp	r8, r3$/;"	l
d518	Test/a.s	/^    d518:	0a000237 	beq	ddfc <_int_free+0xa48>$/;"	l
d51c	Test/a.s	/^    d51c:	e59a2004 	ldr	r2, [sl, #4]$/;"	l
d520	Test/a.s	/^    d520:	e3120002 	tst	r2, #2$/;"	l
d524	Test/a.s	/^    d524:	0a000236 	beq	de04 <_int_free+0xa50>$/;"	l
d528	Test/a.s	/^    d528:	e5943004 	ldr	r3, [r4, #4]$/;"	l
d52c	Test/a.s	/^    d52c:	e3130001 	tst	r3, #1$/;"	l
d530	Test/a.s	/^    d530:	0a00023a 	beq	de20 <_int_free+0xa6c>$/;"	l
d534	Test/a.s	/^    d534:	e3530008 	cmp	r3, #8$/;"	l
d538	Test/a.s	/^    d538:	e3c37007 	bic	r7, r3, #7$/;"	l
d53c	Test/a.s	/^    d53c:	9a0001d5 	bls	dc98 <_int_free+0x8e4>$/;"	l
d540	Test/a.s	/^    d540:	e59a3448 	ldr	r3, [sl, #1096]	; 0x448$/;"	l
d544	Test/a.s	/^    d544:	e1570003 	cmp	r7, r3$/;"	l
d548	Test/a.s	/^    d548:	2a0001d2 	bcs	dc98 <_int_free+0x8e4>$/;"	l
d54c	Test/a.s	/^    d54c:	e5963020 	ldr	r3, [r6, #32]$/;"	l
d550	Test/a.s	/^    d550:	e3530000 	cmp	r3, #0$/;"	l
d554	Test/a.s	/^    d554:	1a0001c7 	bne	dc78 <_int_free+0x8c4>$/;"	l
d558	Test/a.s	/^    d558:	e5983004 	ldr	r3, [r8, #4]$/;"	l
d55c	Test/a.s	/^    d55c:	e3130001 	tst	r3, #1$/;"	l
d560	Test/a.s	/^    d560:	1a000012 	bne	d5b0 <_int_free+0x1fc>$/;"	l
d564	Test/a.s	/^    d564:	e5982000 	ldr	r2, [r8]$/;"	l
d568	Test/a.s	/^    d568:	e0628008 	rsb	r8, r2, r8$/;"	l
d56c	Test/a.s	/^    d56c:	e5983008 	ldr	r3, [r8, #8]$/;"	l
d570	Test/a.s	/^    d570:	e0855002 	add	r5, r5, r2$/;"	l
d574	Test/a.s	/^    d574:	e593100c 	ldr	r1, [r3, #12]$/;"	l
d578	Test/a.s	/^    d578:	e598200c 	ldr	r2, [r8, #12]$/;"	l
d57c	Test/a.s	/^    d57c:	e1580001 	cmp	r8, r1$/;"	l
d580	Test/a.s	/^    d580:	1a00020d 	bne	ddbc <_int_free+0xa08>$/;"	l
d584	Test/a.s	/^    d584:	e5921008 	ldr	r1, [r2, #8]$/;"	l
d588	Test/a.s	/^    d588:	e1580001 	cmp	r8, r1$/;"	l
d58c	Test/a.s	/^    d58c:	1a00020a 	bne	ddbc <_int_free+0xa08>$/;"	l
d590	Test/a.s	/^    d590:	e5981004 	ldr	r1, [r8, #4]$/;"	l
d594	Test/a.s	/^    d594:	e583200c 	str	r2, [r3, #12]$/;"	l
d598	Test/a.s	/^    d598:	e3510c02 	cmp	r1, #512	; 0x200$/;"	l
d59c	Test/a.s	/^    d59c:	e5823008 	str	r3, [r2, #8]$/;"	l
d5a0	Test/a.s	/^    d5a0:	3a000002 	bcc	d5b0 <_int_free+0x1fc>$/;"	l
d5a4	Test/a.s	/^    d5a4:	e5982010 	ldr	r2, [r8, #16]$/;"	l
d5a8	Test/a.s	/^    d5a8:	e3520000 	cmp	r2, #0$/;"	l
d5ac	Test/a.s	/^    d5ac:	1a0001eb 	bne	dd60 <_int_free+0x9ac>$/;"	l
d5b0	Test/a.s	/^    d5b0:	e59a3030 	ldr	r3, [sl, #48]	; 0x30$/;"	l
d5b4	Test/a.s	/^    d5b4:	e1530004 	cmp	r3, r4$/;"	l
d5b8	Test/a.s	/^    d5b8:	0a00010b 	beq	d9ec <_int_free+0x638>$/;"	l
d5bc	Test/a.s	/^    d5bc:	e0843007 	add	r3, r4, r7$/;"	l
d5c0	Test/a.s	/^    d5c0:	e5933004 	ldr	r3, [r3, #4]$/;"	l
d5c4	Test/a.s	/^    d5c4:	e3130001 	tst	r3, #1$/;"	l
d5c8	Test/a.s	/^    d5c8:	1a0000b2 	bne	d898 <_int_free+0x4e4>$/;"	l
d5cc	Test/a.s	/^    d5cc:	e5943008 	ldr	r3, [r4, #8]$/;"	l
d5d0	Test/a.s	/^    d5d0:	e594200c 	ldr	r2, [r4, #12]$/;"	l
d5d4	Test/a.s	/^    d5d4:	e593100c 	ldr	r1, [r3, #12]$/;"	l
d5d8	Test/a.s	/^    d5d8:	e1540001 	cmp	r4, r1$/;"	l
d5dc	Test/a.s	/^    d5dc:	1a0001cf 	bne	dd20 <_int_free+0x96c>$/;"	l
d5e0	Test/a.s	/^    d5e0:	e5921008 	ldr	r1, [r2, #8]$/;"	l
d5e4	Test/a.s	/^    d5e4:	e1540001 	cmp	r4, r1$/;"	l
d5e8	Test/a.s	/^    d5e8:	1a0001cc 	bne	dd20 <_int_free+0x96c>$/;"	l
d5ec	Test/a.s	/^    d5ec:	e5941004 	ldr	r1, [r4, #4]$/;"	l
d5f0	Test/a.s	/^    d5f0:	e583200c 	str	r2, [r3, #12]$/;"	l
d5f4	Test/a.s	/^    d5f4:	e3510c02 	cmp	r1, #512	; 0x200$/;"	l
d5f8	Test/a.s	/^    d5f8:	e5823008 	str	r3, [r2, #8]$/;"	l
d5fc	Test/a.s	/^    d5fc:	3a000002 	bcc	d60c <_int_free+0x258>$/;"	l
d600	Test/a.s	/^    d600:	e5942010 	ldr	r2, [r4, #16]$/;"	l
d604	Test/a.s	/^    d604:	e3520000 	cmp	r2, #0$/;"	l
d608	Test/a.s	/^    d608:	1a0001ad 	bne	dcc4 <_int_free+0x910>$/;"	l
d60c	Test/a.s	/^    d60c:	e0855007 	add	r5, r5, r7$/;"	l
d610	Test/a.s	/^    d610:	e59a3038 	ldr	r3, [sl, #56]	; 0x38$/;"	l
d614	Test/a.s	/^    d614:	e28a2030 	add	r2, sl, #48	; 0x30$/;"	l
d618	Test/a.s	/^    d618:	e593100c 	ldr	r1, [r3, #12]$/;"	l
d61c	Test/a.s	/^    d61c:	e1520001 	cmp	r2, r1$/;"	l
d620	Test/a.s	/^    d620:	1a000243 	bne	df34 <_int_free+0xb80>$/;"	l
d624	Test/a.s	/^    d624:	e3550c02 	cmp	r5, #512	; 0x200$/;"	l
d628	Test/a.s	/^    d628:	e588200c 	str	r2, [r8, #12]$/;"	l
d62c	Test/a.s	/^    d62c:	23a02000 	movcs	r2, #0$/;"	l
d630	Test/a.s	/^    d630:	25882010 	strcs	r2, [r8, #16]$/;"	l
d634	Test/a.s	/^    d634:	25882014 	strcs	r2, [r8, #20]$/;"	l
d638	Test/a.s	/^    d638:	e3852001 	orr	r2, r5, #1$/;"	l
d63c	Test/a.s	/^    d63c:	e5883008 	str	r3, [r8, #8]$/;"	l
d640	Test/a.s	/^    d640:	e583800c 	str	r8, [r3, #12]$/;"	l
d644	Test/a.s	/^    d644:	e58a8038 	str	r8, [sl, #56]	; 0x38$/;"	l
d648	Test/a.s	/^    d648:	e7885005 	str	r5, [r8, r5]$/;"	l
d64c	Test/a.s	/^    d64c:	e5882004 	str	r2, [r8, #4]$/;"	l
d650	Test/a.s	/^    d650:	e3550801 	cmp	r5, #65536	; 0x10000$/;"	l
d654	Test/a.s	/^    d654:	3a0000be 	bcc	d954 <_int_free+0x5a0>$/;"	l
d658	Test/a.s	/^    d658:	e59a3004 	ldr	r3, [sl, #4]$/;"	l
d65c	Test/a.s	/^    d65c:	e3130001 	tst	r3, #1$/;"	l
d660	Test/a.s	/^    d660:	0a0000e6 	beq	da00 <_int_free+0x64c>$/;"	l
d664	Test/a.s	/^    d664:	e59f2910 	ldr	r2, [pc, #2320]	; df7c <_int_free+0xbc8>$/;"	l
d668	Test/a.s	/^    d668:	e15a0002 	cmp	sl, r2$/;"	l
d66c	Test/a.s	/^    d66c:	0a0000e6 	beq	da0c <_int_free+0x658>$/;"	l
d670	Test/a.s	/^    d670:	e59a4030 	ldr	r4, [sl, #48]	; 0x30$/;"	l
d674	Test/a.s	/^    d674:	e1a00a24 	lsr	r0, r4, #20$/;"	l
d678	Test/a.s	/^    d678:	e1a00a00 	lsl	r0, r0, #20$/;"	l
d67c	Test/a.s	/^    d67c:	e5908000 	ldr	r8, [r0]$/;"	l
d680	Test/a.s	/^    d680:	e158000a 	cmp	r8, sl$/;"	l
d684	Test/a.s	/^    d684:	1a00022c 	bne	df3c <_int_free+0xb88>$/;"	l
d688	Test/a.s	/^    d688:	e59f38f0 	ldr	r3, [pc, #2288]	; df80 <_int_free+0xbcc>$/;"	l
d68c	Test/a.s	/^    d68c:	e2802010 	add	r2, r0, #16$/;"	l
d690	Test/a.s	/^    d690:	e5937000 	ldr	r7, [r3]$/;"	l
d694	Test/a.s	/^    d694:	e59f38e0 	ldr	r3, [pc, #2272]	; df7c <_int_free+0xbc8>$/;"	l
d698	Test/a.s	/^    d698:	e1540002 	cmp	r4, r2$/;"	l
d69c	Test/a.s	/^    d69c:	e5933458 	ldr	r3, [r3, #1112]	; 0x458$/;"	l
d6a0	Test/a.s	/^    d6a0:	e58d300c 	str	r3, [sp, #12]$/;"	l
d6a4	Test/a.s	/^    d6a4:	1a000082 	bne	d8b4 <_int_free+0x500>$/;"	l
d6a8	Test/a.s	/^    d6a8:	e5905004 	ldr	r5, [r0, #4]$/;"	l
d6ac	Test/a.s	/^    d6ac:	e5951008 	ldr	r1, [r5, #8]$/;"	l
d6b0	Test/a.s	/^    d6b0:	e2413008 	sub	r3, r1, #8$/;"	l
d6b4	Test/a.s	/^    d6b4:	e0852003 	add	r2, r5, r3$/;"	l
d6b8	Test/a.s	/^    d6b8:	e2022007 	and	r2, r2, #7$/;"	l
d6bc	Test/a.s	/^    d6bc:	e0623003 	rsb	r3, r2, r3$/;"	l
d6c0	Test/a.s	/^    d6c0:	e0853003 	add	r3, r5, r3$/;"	l
d6c4	Test/a.s	/^    d6c4:	e593c004 	ldr	ip, [r3, #4]$/;"	l
d6c8	Test/a.s	/^    d6c8:	e35c0001 	cmp	ip, #1$/;"	l
d6cc	Test/a.s	/^    d6cc:	1a0000f9 	bne	dab8 <_int_free+0x704>$/;"	l
d6d0	Test/a.s	/^    d6d0:	e59dc00c 	ldr	ip, [sp, #12]$/;"	l
d6d4	Test/a.s	/^    d6d4:	e58da014 	str	sl, [sp, #20]$/;"	l
d6d8	Test/a.s	/^    d6d8:	e08c9007 	add	r9, ip, r7$/;"	l
d6dc	Test/a.s	/^    d6dc:	e2899010 	add	r9, r9, #16$/;"	l
d6e0	Test/a.s	/^    d6e0:	e1a0a008 	mov	sl, r8$/;"	l
d6e4	Test/a.s	/^    d6e4:	e1a0b003 	mov	fp, r3$/;"	l
d6e8	Test/a.s	/^    d6e8:	e1a08007 	mov	r8, r7$/;"	l
d6ec	Test/a.s	/^    d6ec:	e1a07009 	mov	r7, r9$/;"	l
d6f0	Test/a.s	/^    d6f0:	ea00002c 	b	d7a8 <_int_free+0x3f4>$/;"	l
d6f4	Test/a.s	/^    d6f4:	e59b4000 	ldr	r4, [fp]$/;"	l
d6f8	Test/a.s	/^    d6f8:	e064400b 	rsb	r4, r4, fp$/;"	l
d6fc	Test/a.s	/^    d6fc:	e5942008 	ldr	r2, [r4, #8]$/;"	l
d700	Test/a.s	/^    d700:	e594100c 	ldr	r1, [r4, #12]$/;"	l
d704	Test/a.s	/^    d704:	e592000c 	ldr	r0, [r2, #12]$/;"	l
d708	Test/a.s	/^    d708:	e1540000 	cmp	r4, r0$/;"	l
d70c	Test/a.s	/^    d70c:	1a0000d9 	bne	da78 <_int_free+0x6c4>$/;"	l
d710	Test/a.s	/^    d710:	e5910008 	ldr	r0, [r1, #8]$/;"	l
d714	Test/a.s	/^    d714:	e1540000 	cmp	r4, r0$/;"	l
d718	Test/a.s	/^    d718:	1a0000d6 	bne	da78 <_int_free+0x6c4>$/;"	l
d71c	Test/a.s	/^    d71c:	e5940004 	ldr	r0, [r4, #4]$/;"	l
d720	Test/a.s	/^    d720:	e59f385c 	ldr	r3, [pc, #2140]	; df84 <_int_free+0xbd0>$/;"	l
d724	Test/a.s	/^    d724:	e582100c 	str	r1, [r2, #12]$/;"	l
d728	Test/a.s	/^    d728:	e1500003 	cmp	r0, r3$/;"	l
d72c	Test/a.s	/^    d72c:	e5812008 	str	r2, [r1, #8]$/;"	l
d730	Test/a.s	/^    d730:	9a000002 	bls	d740 <_int_free+0x38c>$/;"	l
d734	Test/a.s	/^    d734:	e5941010 	ldr	r1, [r4, #16]$/;"	l
d738	Test/a.s	/^    d738:	e3510000 	cmp	r1, #0$/;"	l
d73c	Test/a.s	/^    d73c:	1a0000e4 	bne	dad4 <_int_free+0x720>$/;"	l
d740	Test/a.s	/^    d740:	e0842009 	add	r2, r4, r9$/;"	l
d744	Test/a.s	/^    d744:	e2481001 	sub	r1, r8, #1$/;"	l
d748	Test/a.s	/^    d748:	e1120001 	tst	r2, r1$/;"	l
d74c	Test/a.s	/^    d74c:	1a0000c4 	bne	da64 <_int_free+0x6b0>$/;"	l
d750	Test/a.s	/^    d750:	e5951008 	ldr	r1, [r5, #8]$/;"	l
d754	Test/a.s	/^    d754:	e0851001 	add	r1, r5, r1$/;"	l
d758	Test/a.s	/^    d758:	e1520001 	cmp	r2, r1$/;"	l
d75c	Test/a.s	/^    d75c:	1a0000bb 	bne	da50 <_int_free+0x69c>$/;"	l
d760	Test/a.s	/^    d760:	e2852010 	add	r2, r5, #16$/;"	l
d764	Test/a.s	/^    d764:	e3899001 	orr	r9, r9, #1$/;"	l
d768	Test/a.s	/^    d768:	e1540002 	cmp	r4, r2$/;"	l
d76c	Test/a.s	/^    d76c:	e58a4030 	str	r4, [sl, #48]	; 0x30$/;"	l
d770	Test/a.s	/^    d770:	e5849004 	str	r9, [r4, #4]$/;"	l
d774	Test/a.s	/^    d774:	1a000097 	bne	d9d8 <_int_free+0x624>$/;"	l
d778	Test/a.s	/^    d778:	e595c004 	ldr	ip, [r5, #4]$/;"	l
d77c	Test/a.s	/^    d77c:	e1a00005 	mov	r0, r5$/;"	l
d780	Test/a.s	/^    d780:	e59c1008 	ldr	r1, [ip, #8]$/;"	l
d784	Test/a.s	/^    d784:	e241b008 	sub	fp, r1, #8$/;"	l
d788	Test/a.s	/^    d788:	e08c200b 	add	r2, ip, fp$/;"	l
d78c	Test/a.s	/^    d78c:	e2022007 	and	r2, r2, #7$/;"	l
d790	Test/a.s	/^    d790:	e062b00b 	rsb	fp, r2, fp$/;"	l
d794	Test/a.s	/^    d794:	e08cb00b 	add	fp, ip, fp$/;"	l
d798	Test/a.s	/^    d798:	e59b5004 	ldr	r5, [fp, #4]$/;"	l
d79c	Test/a.s	/^    d79c:	e3550001 	cmp	r5, #1$/;"	l
d7a0	Test/a.s	/^    d7a0:	1a0000c4 	bne	dab8 <_int_free+0x704>$/;"	l
d7a4	Test/a.s	/^    d7a4:	e1a0500c 	mov	r5, ip$/;"	l
d7a8	Test/a.s	/^    d7a8:	e59bc000 	ldr	ip, [fp]$/;"	l
d7ac	Test/a.s	/^    d7ac:	e06cb00b 	rsb	fp, ip, fp$/;"	l
d7b0	Test/a.s	/^    d7b0:	e59bc004 	ldr	ip, [fp, #4]$/;"	l
d7b4	Test/a.s	/^    d7b4:	e3cc9007 	bic	r9, ip, #7$/;"	l
d7b8	Test/a.s	/^    d7b8:	e0892002 	add	r2, r9, r2$/;"	l
d7bc	Test/a.s	/^    d7bc:	e2829007 	add	r9, r2, #7$/;"	l
d7c0	Test/a.s	/^    d7c0:	e359001e 	cmp	r9, #30$/;"	l
d7c4	Test/a.s	/^    d7c4:	e2829008 	add	r9, r2, #8$/;"	l
d7c8	Test/a.s	/^    d7c8:	8a0000b5 	bhi	daa4 <_int_free+0x6f0>$/;"	l
d7cc	Test/a.s	/^    d7cc:	e31c0001 	tst	ip, #1$/;"	l
d7d0	Test/a.s	/^    d7d0:	059b2000 	ldreq	r2, [fp]$/;"	l
d7d4	Test/a.s	/^    d7d4:	e59f37ac 	ldr	r3, [pc, #1964]	; df88 <_int_free+0xbd4>$/;"	l
d7d8	Test/a.s	/^    d7d8:	00899002 	addeq	r9, r9, r2$/;"	l
d7dc	Test/a.s	/^    d7dc:	e2492001 	sub	r2, r9, #1$/;"	l
d7e0	Test/a.s	/^    d7e0:	e1520003 	cmp	r2, r3$/;"	l
d7e4	Test/a.s	/^    d7e4:	8a0000a9 	bhi	da90 <_int_free+0x6dc>$/;"	l
d7e8	Test/a.s	/^    d7e8:	e2611601 	rsb	r1, r1, #1048576	; 0x100000$/;"	l
d7ec	Test/a.s	/^    d7ec:	e0811009 	add	r1, r1, r9$/;"	l
d7f0	Test/a.s	/^    d7f0:	e1510007 	cmp	r1, r7$/;"	l
d7f4	Test/a.s	/^    d7f4:	3a00002b 	bcc	d8a8 <_int_free+0x4f4>$/;"	l
d7f8	Test/a.s	/^    d7f8:	e5902008 	ldr	r2, [r0, #8]$/;"	l
d7fc	Test/a.s	/^    d7fc:	e59a1448 	ldr	r1, [sl, #1096]	; 0x448$/;"	l
d800	Test/a.s	/^    d800:	e596c01c 	ldr	ip, [r6, #28]$/;"	l
d804	Test/a.s	/^    d804:	e0621001 	rsb	r1, r2, r1$/;"	l
d808	Test/a.s	/^    d808:	e596e024 	ldr	lr, [r6, #36]	; 0x24$/;"	l
d80c	Test/a.s	/^    d80c:	e58a1448 	str	r1, [sl, #1096]	; 0x448$/;"	l
d810	Test/a.s	/^    d810:	e2801601 	add	r1, r0, #1048576	; 0x100000$/;"	l
d814	Test/a.s	/^    d814:	e15c0001 	cmp	ip, r1$/;"	l
d818	Test/a.s	/^    d818:	e062200e 	rsb	r2, r2, lr$/;"	l
d81c	Test/a.s	/^    d81c:	059fc754 	ldreq	ip, [pc, #1876]	; df78 <_int_free+0xbc4>$/;"	l
d820	Test/a.s	/^    d820:	e5862024 	str	r2, [r6, #36]	; 0x24$/;"	l
d824	Test/a.s	/^    d824:	e3a01601 	mov	r1, #1048576	; 0x100000$/;"	l
d828	Test/a.s	/^    d828:	03a02000 	moveq	r2, #0$/;"	l
d82c	Test/a.s	/^    d82c:	058c201c 	streq	r2, [ip, #28]$/;"	l
d830	Test/a.s	/^    d830:	eb001c7a 	bl	14a20 <__munmap>$/;"	l
d834	Test/a.s	/^    d834:	e59b2004 	ldr	r2, [fp, #4]$/;"	l
d838	Test/a.s	/^    d838:	e3120001 	tst	r2, #1$/;"	l
d83c	Test/a.s	/^    d83c:	0affffac 	beq	d6f4 <_int_free+0x340>$/;"	l
d840	Test/a.s	/^    d840:	e1a0400b 	mov	r4, fp$/;"	l
d844	Test/a.s	/^    d844:	eaffffbd 	b	d740 <_int_free+0x38c>$/;"	l
d848	Test/a.s	/^    d848:	e3a01001 	mov	r1, #1$/;"	l
d84c	Test/a.s	/^    d84c:	e1a02000 	mov	r2, r0$/;"	l
d850	Test/a.s	/^    d850:	e1a0400c 	mov	r4, ip$/;"	l
d854	Test/a.s	/^    d854:	e5923000 	ldr	r3, [r2]$/;"	l
d858	Test/a.s	/^    d858:	e1530004 	cmp	r3, r4$/;"	l
d85c	Test/a.s	/^    d85c:	1a000005 	bne	d878 <_int_free+0x4c4>$/;"	l
d860	Test/a.s	/^    d860:	e1a00004 	mov	r0, r4$/;"	l
d864	Test/a.s	/^    d864:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
d868	Test/a.s	/^    d868:	e1a0e00f 	mov	lr, pc$/;"	l
d86c	Test/a.s	/^    d86c:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
d870	Test/a.s	/^    d870:	3afffff7 	bcc	d854 <_int_free+0x4a0>$/;"	l
d874	Test/a.s	/^    d874:	e1a03004 	mov	r3, r4$/;"	l
d878	Test/a.s	/^    d878:	e3530000 	cmp	r3, #0$/;"	l
d87c	Test/a.s	/^    d87c:	058d1010 	streq	r1, [sp, #16]$/;"	l
d880	Test/a.s	/^    d880:	0affff21 	beq	d50c <_int_free+0x158>$/;"	l
d884	Test/a.s	/^    d884:	e1a0000a 	mov	r0, sl$/;"	l
d888	Test/a.s	/^    d888:	eb001ec0 	bl	15390 <__lll_lock_wait_private>$/;"	l
d88c	Test/a.s	/^    d88c:	e3a01001 	mov	r1, #1$/;"	l
d890	Test/a.s	/^    d890:	e58d1010 	str	r1, [sp, #16]$/;"	l
d894	Test/a.s	/^    d894:	eaffff1c 	b	d50c <_int_free+0x158>$/;"	l
d898	Test/a.s	/^    d898:	e5943004 	ldr	r3, [r4, #4]$/;"	l
d89c	Test/a.s	/^    d89c:	e3c33001 	bic	r3, r3, #1$/;"	l
d8a0	Test/a.s	/^    d8a0:	e5843004 	str	r3, [r4, #4]$/;"	l
d8a4	Test/a.s	/^    d8a4:	eaffff59 	b	d610 <_int_free+0x25c>$/;"	l
d8a8	Test/a.s	/^    d8a8:	e1a07008 	mov	r7, r8$/;"	l
d8ac	Test/a.s	/^    d8ac:	e1a0800a 	mov	r8, sl$/;"	l
d8b0	Test/a.s	/^    d8b0:	e59da014 	ldr	sl, [sp, #20]$/;"	l
d8b4	Test/a.s	/^    d8b4:	e594b004 	ldr	fp, [r4, #4]$/;"	l
d8b8	Test/a.s	/^    d8b8:	e1a05000 	mov	r5, r0$/;"	l
d8bc	Test/a.s	/^    d8bc:	e59dc00c 	ldr	ip, [sp, #12]$/;"	l
d8c0	Test/a.s	/^    d8c0:	e3e09010 	mvn	r9, #16$/;"	l
d8c4	Test/a.s	/^    d8c4:	e3cbb007 	bic	fp, fp, #7$/;"	l
d8c8	Test/a.s	/^    d8c8:	e06c9009 	rsb	r9, ip, r9$/;"	l
d8cc	Test/a.s	/^    d8cc:	e089900b 	add	r9, r9, fp$/;"	l
d8d0	Test/a.s	/^    d8d0:	e2673000 	rsb	r3, r7, #0$/;"	l
d8d4	Test/a.s	/^    d8d4:	e0099003 	and	r9, r9, r3$/;"	l
d8d8	Test/a.s	/^    d8d8:	e1590007 	cmp	r9, r7$/;"	l
d8dc	Test/a.s	/^    d8dc:	ba00001c 	blt	d954 <_int_free+0x5a0>$/;"	l
d8e0	Test/a.s	/^    d8e0:	e5953008 	ldr	r3, [r5, #8]$/;"	l
d8e4	Test/a.s	/^    d8e4:	e0693003 	rsb	r3, r9, r3$/;"	l
d8e8	Test/a.s	/^    d8e8:	e353000f 	cmp	r3, #15$/;"	l
d8ec	Test/a.s	/^    d8ec:	e58d300c 	str	r3, [sp, #12]$/;"	l
d8f0	Test/a.s	/^    d8f0:	da000017 	ble	d954 <_int_free+0x5a0>$/;"	l
d8f4	Test/a.s	/^    d8f4:	e59f1680 	ldr	r1, [pc, #1664]	; df7c <_int_free+0xbc8>$/;"	l
d8f8	Test/a.s	/^    d8f8:	e5913490 	ldr	r3, [r1, #1168]	; 0x490$/;"	l
d8fc	Test/a.s	/^    d8fc:	e3530000 	cmp	r3, #0$/;"	l
d900	Test/a.s	/^    d900:	ba000156 	blt	de60 <_int_free+0xaac>$/;"	l
d904	Test/a.s	/^    d904:	03a03000 	moveq	r3, #0$/;"	l
d908	Test/a.s	/^    d908:	13a03001 	movne	r3, #1$/;"	l
d90c	Test/a.s	/^    d90c:	e3530000 	cmp	r3, #0$/;"	l
d910	Test/a.s	/^    d910:	1a000144 	bne	de28 <_int_free+0xa74>$/;"	l
d914	Test/a.s	/^    d914:	e59d100c 	ldr	r1, [sp, #12]$/;"	l
d918	Test/a.s	/^    d918:	e3a02004 	mov	r2, #4$/;"	l
d91c	Test/a.s	/^    d91c:	e0850001 	add	r0, r5, r1$/;"	l
d920	Test/a.s	/^    d920:	e1a01009 	mov	r1, r9$/;"	l
d924	Test/a.s	/^    d924:	eb001c4d 	bl	14a60 <__madvise>$/;"	l
d928	Test/a.s	/^    d928:	e5982448 	ldr	r2, [r8, #1096]	; 0x448$/;"	l
d92c	Test/a.s	/^    d92c:	e5961024 	ldr	r1, [r6, #36]	; 0x24$/;"	l
d930	Test/a.s	/^    d930:	e069300b 	rsb	r3, r9, fp$/;"	l
d934	Test/a.s	/^    d934:	e59dc00c 	ldr	ip, [sp, #12]$/;"	l
d938	Test/a.s	/^    d938:	e0692002 	rsb	r2, r9, r2$/;"	l
d93c	Test/a.s	/^    d93c:	e3833001 	orr	r3, r3, #1$/;"	l
d940	Test/a.s	/^    d940:	e0699001 	rsb	r9, r9, r1$/;"	l
d944	Test/a.s	/^    d944:	e585c008 	str	ip, [r5, #8]$/;"	l
d948	Test/a.s	/^    d948:	e5869024 	str	r9, [r6, #36]	; 0x24$/;"	l
d94c	Test/a.s	/^    d94c:	e5882448 	str	r2, [r8, #1096]	; 0x448$/;"	l
d950	Test/a.s	/^    d950:	e5843004 	str	r3, [r4, #4]$/;"	l
d954	Test/a.s	/^    d954:	e59d1008 	ldr	r1, [sp, #8]$/;"	l
d958	Test/a.s	/^    d958:	e3510000 	cmp	r1, #0$/;"	l
d95c	Test/a.s	/^    d95c:	1afffee2 	bne	d4ec <_int_free+0x138>$/;"	l
d960	Test/a.s	/^    d960:	e59d2010 	ldr	r2, [sp, #16]$/;"	l
d964	Test/a.s	/^    d964:	e3520000 	cmp	r2, #0$/;"	l
d968	Test/a.s	/^    d968:	0a00016c 	beq	df20 <_int_free+0xb6c>$/;"	l
d96c	Test/a.s	/^    d96c:	e59a5000 	ldr	r5, [sl]$/;"	l
d970	Test/a.s	/^    d970:	e3a01000 	mov	r1, #0$/;"	l
d974	Test/a.s	/^    d974:	e1a04005 	mov	r4, r5$/;"	l
d978	Test/a.s	/^    d978:	e1a0200a 	mov	r2, sl$/;"	l
d97c	Test/a.s	/^    d97c:	e5923000 	ldr	r3, [r2]$/;"	l
d980	Test/a.s	/^    d980:	e1530004 	cmp	r3, r4$/;"	l
d984	Test/a.s	/^    d984:	1a000005 	bne	d9a0 <_int_free+0x5ec>$/;"	l
d988	Test/a.s	/^    d988:	e1a00004 	mov	r0, r4$/;"	l
d98c	Test/a.s	/^    d98c:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
d990	Test/a.s	/^    d990:	e1a0e00f 	mov	lr, pc$/;"	l
d994	Test/a.s	/^    d994:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
d998	Test/a.s	/^    d998:	3afffff7 	bcc	d97c <_int_free+0x5c8>$/;"	l
d99c	Test/a.s	/^    d99c:	e1a03004 	mov	r3, r4$/;"	l
d9a0	Test/a.s	/^    d9a0:	e1550003 	cmp	r5, r3$/;"	l
d9a4	Test/a.s	/^    d9a4:	1afffff0 	bne	d96c <_int_free+0x5b8>$/;"	l
d9a8	Test/a.s	/^    d9a8:	e3550001 	cmp	r5, #1$/;"	l
d9ac	Test/a.s	/^    d9ac:	dafffece 	ble	d4ec <_int_free+0x138>$/;"	l
d9b0	Test/a.s	/^    d9b0:	e1a0000a 	mov	r0, sl$/;"	l
d9b4	Test/a.s	/^    d9b4:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
d9b8	Test/a.s	/^    d9b8:	e3a02001 	mov	r2, #1$/;"	l
d9bc	Test/a.s	/^    d9bc:	e3a03000 	mov	r3, #0$/;"	l
d9c0	Test/a.s	/^    d9c0:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
d9c4	Test/a.s	/^    d9c4:	ef000000 	svc	0x00000000$/;"	l
d9c8	Test/a.s	/^    d9c8:	eafffec7 	b	d4ec <_int_free+0x138>$/;"	l
d9cc	Test/a.s	/^    d9cc:	e1a00008 	mov	r0, r8$/;"	l
d9d0	Test/a.s	/^    d9d0:	ebfffe4e 	bl	d310 <munmap_chunk>$/;"	l
d9d4	Test/a.s	/^    d9d4:	eafffec4 	b	d4ec <_int_free+0x138>$/;"	l
d9d8	Test/a.s	/^    d9d8:	e1a07008 	mov	r7, r8$/;"	l
d9dc	Test/a.s	/^    d9dc:	e1a0b009 	mov	fp, r9$/;"	l
d9e0	Test/a.s	/^    d9e0:	e1a0800a 	mov	r8, sl$/;"	l
d9e4	Test/a.s	/^    d9e4:	e59da014 	ldr	sl, [sp, #20]$/;"	l
d9e8	Test/a.s	/^    d9e8:	eaffffb3 	b	d8bc <_int_free+0x508>$/;"	l
d9ec	Test/a.s	/^    d9ec:	e0855007 	add	r5, r5, r7$/;"	l
d9f0	Test/a.s	/^    d9f0:	e3853001 	orr	r3, r5, #1$/;"	l
d9f4	Test/a.s	/^    d9f4:	e5883004 	str	r3, [r8, #4]$/;"	l
d9f8	Test/a.s	/^    d9f8:	e58a8030 	str	r8, [sl, #48]	; 0x30$/;"	l
d9fc	Test/a.s	/^    d9fc:	eaffff13 	b	d650 <_int_free+0x29c>$/;"	l
da00	Test/a.s	/^    da00:	e1a0000a 	mov	r0, sl$/;"	l
da04	Test/a.s	/^    da04:	ebfffcc1 	bl	cd10 <malloc_consolidate>$/;"	l
da08	Test/a.s	/^    da08:	eaffff15 	b	d664 <_int_free+0x2b0>$/;"	l
da0c	Test/a.s	/^    da0c:	e59a2030 	ldr	r2, [sl, #48]	; 0x30$/;"	l
da10	Test/a.s	/^    da10:	e59a3454 	ldr	r3, [sl, #1108]	; 0x454$/;"	l
da14	Test/a.s	/^    da14:	e5922004 	ldr	r2, [r2, #4]$/;"	l
da18	Test/a.s	/^    da18:	e3c22007 	bic	r2, r2, #7$/;"	l
da1c	Test/a.s	/^    da1c:	e1520003 	cmp	r2, r3$/;"	l
da20	Test/a.s	/^    da20:	3affffcb 	bcc	d954 <_int_free+0x5a0>$/;"	l
da24	Test/a.s	/^    da24:	e59a0458 	ldr	r0, [sl, #1112]	; 0x458$/;"	l
da28	Test/a.s	/^    da28:	e1a0100a 	mov	r1, sl$/;"	l
da2c	Test/a.s	/^    da2c:	ebfff9bb 	bl	c120 <systrim>$/;"	l
da30	Test/a.s	/^    da30:	eaffffc7 	b	d954 <_int_free+0x5a0>$/;"	l
da34	Test/a.s	/^    da34:	e59f5550 	ldr	r5, [pc, #1360]	; df8c <_int_free+0xbd8>$/;"	l
da38	Test/a.s	/^    da38:	e59f353c 	ldr	r3, [pc, #1340]	; df7c <_int_free+0xbc8>$/;"	l
da3c	Test/a.s	/^    da3c:	e1a01005 	mov	r1, r5$/;"	l
da40	Test/a.s	/^    da40:	e2882008 	add	r2, r8, #8$/;"	l
da44	Test/a.s	/^    da44:	e593048c 	ldr	r0, [r3, #1164]	; 0x48c$/;"	l
da48	Test/a.s	/^    da48:	ebfffc7e 	bl	cc48 <malloc_printerr>$/;"	l
da4c	Test/a.s	/^    da4c:	eafffea6 	b	d4ec <_int_free+0x138>$/;"	l
da50	Test/a.s	/^    da50:	e59f0538 	ldr	r0, [pc, #1336]	; df90 <_int_free+0xbdc>$/;"	l
da54	Test/a.s	/^    da54:	e59f1538 	ldr	r1, [pc, #1336]	; df94 <_int_free+0xbe0>$/;"	l
da58	Test/a.s	/^    da58:	e59f2538 	ldr	r2, [pc, #1336]	; df98 <_int_free+0xbe4>$/;"	l
da5c	Test/a.s	/^    da5c:	e59f3538 	ldr	r3, [pc, #1336]	; df9c <_int_free+0xbe8>$/;"	l
da60	Test/a.s	/^    da60:	ebfffa3d 	bl	c35c <__malloc_assert>$/;"	l
da64	Test/a.s	/^    da64:	e59f0534 	ldr	r0, [pc, #1332]	; dfa0 <_int_free+0xbec>$/;"	l
da68	Test/a.s	/^    da68:	e59f1524 	ldr	r1, [pc, #1316]	; df94 <_int_free+0xbe0>$/;"	l
da6c	Test/a.s	/^    da6c:	e3a02e2b 	mov	r2, #688	; 0x2b0$/;"	l
da70	Test/a.s	/^    da70:	e59f3524 	ldr	r3, [pc, #1316]	; df9c <_int_free+0xbe8>$/;"	l
da74	Test/a.s	/^    da74:	ebfffa38 	bl	c35c <__malloc_assert>$/;"	l
da78	Test/a.s	/^    da78:	e59f14fc 	ldr	r1, [pc, #1276]	; df7c <_int_free+0xbc8>$/;"	l
da7c	Test/a.s	/^    da7c:	e1a02004 	mov	r2, r4$/;"	l
da80	Test/a.s	/^    da80:	e591048c 	ldr	r0, [r1, #1164]	; 0x48c$/;"	l
da84	Test/a.s	/^    da84:	e59f1518 	ldr	r1, [pc, #1304]	; dfa4 <_int_free+0xbf0>$/;"	l
da88	Test/a.s	/^    da88:	ebfffc6e 	bl	cc48 <malloc_printerr>$/;"	l
da8c	Test/a.s	/^    da8c:	eaffff2b 	b	d740 <_int_free+0x38c>$/;"	l
da90	Test/a.s	/^    da90:	e59f0510 	ldr	r0, [pc, #1296]	; dfa8 <_int_free+0xbf4>$/;"	l
da94	Test/a.s	/^    da94:	e59f14f8 	ldr	r1, [pc, #1272]	; df94 <_int_free+0xbe0>$/;"	l
da98	Test/a.s	/^    da98:	e59f250c 	ldr	r2, [pc, #1292]	; dfac <_int_free+0xbf8>$/;"	l
da9c	Test/a.s	/^    da9c:	e59f34f8 	ldr	r3, [pc, #1272]	; df9c <_int_free+0xbe8>$/;"	l
daa0	Test/a.s	/^    daa0:	ebfffa2d 	bl	c35c <__malloc_assert>$/;"	l
daa4	Test/a.s	/^    daa4:	e59f0504 	ldr	r0, [pc, #1284]	; dfb0 <_int_free+0xbfc>$/;"	l
daa8	Test/a.s	/^    daa8:	e59f14e4 	ldr	r1, [pc, #1252]	; df94 <_int_free+0xbe0>$/;"	l
daac	Test/a.s	/^    daac:	e59f2500 	ldr	r2, [pc, #1280]	; dfb4 <_int_free+0xc00>$/;"	l
dab0	Test/a.s	/^    dab0:	e59f34e4 	ldr	r3, [pc, #1252]	; df9c <_int_free+0xbe8>$/;"	l
dab4	Test/a.s	/^    dab4:	ebfffa28 	bl	c35c <__malloc_assert>$/;"	l
dab8	Test/a.s	/^    dab8:	e59f04f8 	ldr	r0, [pc, #1272]	; dfb8 <_int_free+0xc04>$/;"	l
dabc	Test/a.s	/^    dabc:	e59f14d0 	ldr	r1, [pc, #1232]	; df94 <_int_free+0xbe0>$/;"	l
dac0	Test/a.s	/^    dac0:	e59f24f4 	ldr	r2, [pc, #1268]	; dfbc <_int_free+0xc08>$/;"	l
dac4	Test/a.s	/^    dac4:	e59f34d0 	ldr	r3, [pc, #1232]	; df9c <_int_free+0xbe8>$/;"	l
dac8	Test/a.s	/^    dac8:	ebfffa23 	bl	c35c <__malloc_assert>$/;"	l
dacc	Test/a.s	/^    dacc:	e59f54ec 	ldr	r5, [pc, #1260]	; dfc0 <_int_free+0xc0c>$/;"	l
dad0	Test/a.s	/^    dad0:	eaffffd8 	b	da38 <_int_free+0x684>$/;"	l
dad4	Test/a.s	/^    dad4:	e5910014 	ldr	r0, [r1, #20]$/;"	l
dad8	Test/a.s	/^    dad8:	e1540000 	cmp	r4, r0$/;"	l
dadc	Test/a.s	/^    dadc:	1a000120 	bne	df64 <_int_free+0xbb0>$/;"	l
dae0	Test/a.s	/^    dae0:	e5940014 	ldr	r0, [r4, #20]$/;"	l
dae4	Test/a.s	/^    dae4:	e590c010 	ldr	ip, [r0, #16]$/;"	l
dae8	Test/a.s	/^    dae8:	e154000c 	cmp	r4, ip$/;"	l
daec	Test/a.s	/^    daec:	1a000117 	bne	df50 <_int_free+0xb9c>$/;"	l
daf0	Test/a.s	/^    daf0:	e592c010 	ldr	ip, [r2, #16]$/;"	l
daf4	Test/a.s	/^    daf4:	e35c0000 	cmp	ip, #0$/;"	l
daf8	Test/a.s	/^    daf8:	15810014 	strne	r0, [r1, #20]$/;"	l
dafc	Test/a.s	/^    dafc:	15942014 	ldrne	r2, [r4, #20]$/;"	l
data	myIntVector.h	/^    int* data;$/;"	m	struct:MyIntVector
dataType	header.h	/^    DATA_TYPE dataType;$/;"	m	struct:AST_NODE
dataType	symbolTable.h	/^        DATA_TYPE dataType;\/\/kind: SCALAR_TYPE_DESCRIPTOR$/;"	m	union:TypeDescriptor::__anon3
db00	Test/a.s	/^    db00:	15821010 	strne	r1, [r2, #16]$/;"	l
db04	Test/a.s	/^    db04:	1affff0d 	bne	d740 <_int_free+0x38c>$/;"	l
db08	Test/a.s	/^    db08:	e1540001 	cmp	r4, r1$/;"	l
db0c	Test/a.s	/^    db0c:	15821010 	strne	r1, [r2, #16]$/;"	l
db10	Test/a.s	/^    db10:	15941010 	ldrne	r1, [r4, #16]$/;"	l
db14	Test/a.s	/^    db14:	15820014 	strne	r0, [r2, #20]$/;"	l
db18	Test/a.s	/^    db18:	15812014 	strne	r2, [r1, #20]$/;"	l
db1c	Test/a.s	/^    db1c:	15941014 	ldrne	r1, [r4, #20]$/;"	l
db20	Test/a.s	/^    db20:	05822014 	streq	r2, [r2, #20]$/;"	l
db24	Test/a.s	/^    db24:	05822010 	streq	r2, [r2, #16]$/;"	l
db28	Test/a.s	/^    db28:	15812010 	strne	r2, [r1, #16]$/;"	l
db2c	Test/a.s	/^    db2c:	eaffff03 	b	d740 <_int_free+0x38c>$/;"	l
db30	Test/a.s	/^    db30:	e20310ff 	and	r1, r3, #255	; 0xff$/;"	l
db34	Test/a.s	/^    db34:	e2880008 	add	r0, r8, #8$/;"	l
db38	Test/a.s	/^    db38:	e2452008 	sub	r2, r5, #8$/;"	l
db3c	Test/a.s	/^    db3c:	eb001627 	bl	133e0 <memset>$/;"	l
db40	Test/a.s	/^    db40:	eafffe38 	b	d428 <_int_free+0x74>$/;"	l
db44	Test/a.s	/^    db44:	e59f5478 	ldr	r5, [pc, #1144]	; dfc4 <_int_free+0xc10>$/;"	l
db48	Test/a.s	/^    db48:	eaffffba 	b	da38 <_int_free+0x684>$/;"	l
db4c	Test/a.s	/^    db4c:	e59d2008 	ldr	r2, [sp, #8]$/;"	l
db50	Test/a.s	/^    db50:	e3520000 	cmp	r2, #0$/;"	l
db54	Test/a.s	/^    db54:	1a00002c 	bne	dc0c <_int_free+0x858>$/;"	l
db58	Test/a.s	/^    db58:	e1a04002 	mov	r4, r2$/;"	l
db5c	Test/a.s	/^    db5c:	e3a01001 	mov	r1, #1$/;"	l
db60	Test/a.s	/^    db60:	e1a0200a 	mov	r2, sl$/;"	l
db64	Test/a.s	/^    db64:	e5923000 	ldr	r3, [r2]$/;"	l
db68	Test/a.s	/^    db68:	e1530004 	cmp	r3, r4$/;"	l
db6c	Test/a.s	/^    db6c:	1a000005 	bne	db88 <_int_free+0x7d4>$/;"	l
db70	Test/a.s	/^    db70:	e1a00004 	mov	r0, r4$/;"	l
db74	Test/a.s	/^    db74:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
db78	Test/a.s	/^    db78:	e1a0e00f 	mov	lr, pc$/;"	l
db7c	Test/a.s	/^    db7c:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
db80	Test/a.s	/^    db80:	3afffff7 	bcc	db64 <_int_free+0x7b0>$/;"	l
db84	Test/a.s	/^    db84:	e1a03004 	mov	r3, r4$/;"	l
db88	Test/a.s	/^    db88:	e3530000 	cmp	r3, #0$/;"	l
db8c	Test/a.s	/^    db8c:	1a00003e 	bne	dc8c <_int_free+0x8d8>$/;"	l
db90	Test/a.s	/^    db90:	e5973004 	ldr	r3, [r7, #4]$/;"	l
db94	Test/a.s	/^    db94:	e3530008 	cmp	r3, #8$/;"	l
db98	Test/a.s	/^    db98:	9a00001d 	bls	dc14 <_int_free+0x860>$/;"	l
db9c	Test/a.s	/^    db9c:	e59a2448 	ldr	r2, [sl, #1096]	; 0x448$/;"	l
dba0	Test/a.s	/^    dba0:	e3c33007 	bic	r3, r3, #7$/;"	l
dba4	Test/a.s	/^    dba4:	e1530002 	cmp	r3, r2$/;"	l
dba8	Test/a.s	/^    dba8:	2a000019 	bcs	dc14 <_int_free+0x860>$/;"	l
dbac	Test/a.s	/^    dbac:	e59a7000 	ldr	r7, [sl]$/;"	l
dbb0	Test/a.s	/^    dbb0:	e3a01000 	mov	r1, #0$/;"	l
dbb4	Test/a.s	/^    dbb4:	e1a04007 	mov	r4, r7$/;"	l
dbb8	Test/a.s	/^    dbb8:	e1a0200a 	mov	r2, sl$/;"	l
dbbc	Test/a.s	/^    dbbc:	e5923000 	ldr	r3, [r2]$/;"	l
dbc0	Test/a.s	/^    dbc0:	e1530004 	cmp	r3, r4$/;"	l
dbc4	Test/a.s	/^    dbc4:	1a000005 	bne	dbe0 <_int_free+0x82c>$/;"	l
dbc8	Test/a.s	/^    dbc8:	e1a00004 	mov	r0, r4$/;"	l
dbcc	Test/a.s	/^    dbcc:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
dbd0	Test/a.s	/^    dbd0:	e1a0e00f 	mov	lr, pc$/;"	l
dbd4	Test/a.s	/^    dbd4:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
dbd8	Test/a.s	/^    dbd8:	3afffff7 	bcc	dbbc <_int_free+0x808>$/;"	l
dbdc	Test/a.s	/^    dbdc:	e1a03004 	mov	r3, r4$/;"	l
dbe0	Test/a.s	/^    dbe0:	e1570003 	cmp	r7, r3$/;"	l
dbe4	Test/a.s	/^    dbe4:	1afffff0 	bne	dbac <_int_free+0x7f8>$/;"	l
dbe8	Test/a.s	/^    dbe8:	e3570001 	cmp	r7, #1$/;"	l
dbec	Test/a.s	/^    dbec:	dafffe0a 	ble	d41c <_int_free+0x68>$/;"	l
dbf0	Test/a.s	/^    dbf0:	e1a0000a 	mov	r0, sl$/;"	l
dbf4	Test/a.s	/^    dbf4:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
dbf8	Test/a.s	/^    dbf8:	e3a02001 	mov	r2, #1$/;"	l
dbfc	Test/a.s	/^    dbfc:	e3a03000 	mov	r3, #0$/;"	l
dc00	Test/a.s	/^    dc00:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
dc04	Test/a.s	/^    dc04:	ef000000 	svc	0x00000000$/;"	l
dc08	Test/a.s	/^    dc08:	eafffe03 	b	d41c <_int_free+0x68>$/;"	l
dc0c	Test/a.s	/^    dc0c:	e59f53b4 	ldr	r5, [pc, #948]	; dfc8 <_int_free+0xc14>$/;"	l
dc10	Test/a.s	/^    dc10:	eaffff88 	b	da38 <_int_free+0x684>$/;"	l
dc14	Test/a.s	/^    dc14:	e59f53ac 	ldr	r5, [pc, #940]	; dfc8 <_int_free+0xc14>$/;"	l
dc18	Test/a.s	/^    dc18:	e59a6000 	ldr	r6, [sl]$/;"	l
dc1c	Test/a.s	/^    dc1c:	e3a01000 	mov	r1, #0$/;"	l
dc20	Test/a.s	/^    dc20:	e1a04006 	mov	r4, r6$/;"	l
dc24	Test/a.s	/^    dc24:	e1a0200a 	mov	r2, sl$/;"	l
dc28	Test/a.s	/^    dc28:	e5923000 	ldr	r3, [r2]$/;"	l
dc2c	Test/a.s	/^    dc2c:	e1530004 	cmp	r3, r4$/;"	l
dc30	Test/a.s	/^    dc30:	1a000005 	bne	dc4c <_int_free+0x898>$/;"	l
dc34	Test/a.s	/^    dc34:	e1a00004 	mov	r0, r4$/;"	l
dc38	Test/a.s	/^    dc38:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
dc3c	Test/a.s	/^    dc3c:	e1a0e00f 	mov	lr, pc$/;"	l
dc40	Test/a.s	/^    dc40:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
dc44	Test/a.s	/^    dc44:	3afffff7 	bcc	dc28 <_int_free+0x874>$/;"	l
dc48	Test/a.s	/^    dc48:	e1a03004 	mov	r3, r4$/;"	l
dc4c	Test/a.s	/^    dc4c:	e1560003 	cmp	r6, r3$/;"	l
dc50	Test/a.s	/^    dc50:	1afffff0 	bne	dc18 <_int_free+0x864>$/;"	l
dc54	Test/a.s	/^    dc54:	e3560001 	cmp	r6, #1$/;"	l
dc58	Test/a.s	/^    dc58:	daffff76 	ble	da38 <_int_free+0x684>$/;"	l
dc5c	Test/a.s	/^    dc5c:	e1a0000a 	mov	r0, sl$/;"	l
dc60	Test/a.s	/^    dc60:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
dc64	Test/a.s	/^    dc64:	e3a02001 	mov	r2, #1$/;"	l
dc68	Test/a.s	/^    dc68:	e3a03000 	mov	r3, #0$/;"	l
dc6c	Test/a.s	/^    dc6c:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
dc70	Test/a.s	/^    dc70:	ef000000 	svc	0x00000000$/;"	l
dc74	Test/a.s	/^    dc74:	eaffff6f 	b	da38 <_int_free+0x684>$/;"	l
dc78	Test/a.s	/^    dc78:	e20310ff 	and	r1, r3, #255	; 0xff$/;"	l
dc7c	Test/a.s	/^    dc7c:	e2880008 	add	r0, r8, #8$/;"	l
dc80	Test/a.s	/^    dc80:	e2452008 	sub	r2, r5, #8$/;"	l
dc84	Test/a.s	/^    dc84:	eb0015d5 	bl	133e0 <memset>$/;"	l
dc88	Test/a.s	/^    dc88:	eafffe32 	b	d558 <_int_free+0x1a4>$/;"	l
dc8c	Test/a.s	/^    dc8c:	e1a0000a 	mov	r0, sl$/;"	l
dc90	Test/a.s	/^    dc90:	eb001dbe 	bl	15390 <__lll_lock_wait_private>$/;"	l
dc94	Test/a.s	/^    dc94:	eaffffbd 	b	db90 <_int_free+0x7dc>$/;"	l
dc98	Test/a.s	/^    dc98:	e59f532c 	ldr	r5, [pc, #812]	; dfcc <_int_free+0xc18>$/;"	l
dc9c	Test/a.s	/^    dc9c:	e59d3010 	ldr	r3, [sp, #16]$/;"	l
dca0	Test/a.s	/^    dca0:	e59d1008 	ldr	r1, [sp, #8]$/;"	l
dca4	Test/a.s	/^    dca4:	e3510000 	cmp	r1, #0$/;"	l
dca8	Test/a.s	/^    dca8:	13a03000 	movne	r3, #0$/;"	l
dcac	Test/a.s	/^    dcac:	02033001 	andeq	r3, r3, #1$/;"	l
dcb0	Test/a.s	/^    dcb0:	e3530000 	cmp	r3, #0$/;"	l
dcb4	Test/a.s	/^    dcb4:	1affffd7 	bne	dc18 <_int_free+0x864>$/;"	l
dcb8	Test/a.s	/^    dcb8:	eaffff5e 	b	da38 <_int_free+0x684>$/;"	l
dcbc	Test/a.s	/^    dcbc:	e59f530c 	ldr	r5, [pc, #780]	; dfd0 <_int_free+0xc1c>$/;"	l
dcc0	Test/a.s	/^    dcc0:	eaffff5c 	b	da38 <_int_free+0x684>$/;"	l
dcc4	Test/a.s	/^    dcc4:	e5920014 	ldr	r0, [r2, #20]$/;"	l
dcc8	Test/a.s	/^    dcc8:	e1500004 	cmp	r0, r4$/;"	l
dccc	Test/a.s	/^    dccc:	1a00001e 	bne	dd4c <_int_free+0x998>$/;"	l
dcd0	Test/a.s	/^    dcd0:	e5941014 	ldr	r1, [r4, #20]$/;"	l
dcd4	Test/a.s	/^    dcd4:	e591c010 	ldr	ip, [r1, #16]$/;"	l
dcd8	Test/a.s	/^    dcd8:	e154000c 	cmp	r4, ip$/;"	l
dcdc	Test/a.s	/^    dcdc:	1a000015 	bne	dd38 <_int_free+0x984>$/;"	l
dce0	Test/a.s	/^    dce0:	e593c010 	ldr	ip, [r3, #16]$/;"	l
dce4	Test/a.s	/^    dce4:	e35c0000 	cmp	ip, #0$/;"	l
dce8	Test/a.s	/^    dce8:	15821014 	strne	r1, [r2, #20]$/;"	l
dcec	Test/a.s	/^    dcec:	15943014 	ldrne	r3, [r4, #20]$/;"	l
dcf0	Test/a.s	/^    dcf0:	15832010 	strne	r2, [r3, #16]$/;"	l
dcf4	Test/a.s	/^    dcf4:	1afffe44 	bne	d60c <_int_free+0x258>$/;"	l
dcf8	Test/a.s	/^    dcf8:	e1520004 	cmp	r2, r4$/;"	l
dcfc	Test/a.s	/^    dcfc:	15832010 	strne	r2, [r3, #16]$/;"	l
dd00	Test/a.s	/^    dd00:	15902010 	ldrne	r2, [r0, #16]$/;"	l
dd04	Test/a.s	/^    dd04:	15831014 	strne	r1, [r3, #20]$/;"	l
dd08	Test/a.s	/^    dd08:	15823014 	strne	r3, [r2, #20]$/;"	l
dd0c	Test/a.s	/^    dd0c:	15902014 	ldrne	r2, [r0, #20]$/;"	l
dd10	Test/a.s	/^    dd10:	05833014 	streq	r3, [r3, #20]$/;"	l
dd14	Test/a.s	/^    dd14:	05833010 	streq	r3, [r3, #16]$/;"	l
dd18	Test/a.s	/^    dd18:	15823010 	strne	r3, [r2, #16]$/;"	l
dd1c	Test/a.s	/^    dd1c:	eafffe3a 	b	d60c <_int_free+0x258>$/;"	l
dd20	Test/a.s	/^    dd20:	e59f3254 	ldr	r3, [pc, #596]	; df7c <_int_free+0xbc8>$/;"	l
dd24	Test/a.s	/^    dd24:	e1a02004 	mov	r2, r4$/;"	l
dd28	Test/a.s	/^    dd28:	e593048c 	ldr	r0, [r3, #1164]	; 0x48c$/;"	l
dd2c	Test/a.s	/^    dd2c:	e59f1270 	ldr	r1, [pc, #624]	; dfa4 <_int_free+0xbf0>$/;"	l
dd30	Test/a.s	/^    dd30:	ebfffbc4 	bl	cc48 <malloc_printerr>$/;"	l
dd34	Test/a.s	/^    dd34:	eafffe34 	b	d60c <_int_free+0x258>$/;"	l
dd38	Test/a.s	/^    dd38:	e59f0294 	ldr	r0, [pc, #660]	; dfd4 <_int_free+0xc20>$/;"	l
dd3c	Test/a.s	/^    dd3c:	e59f1294 	ldr	r1, [pc, #660]	; dfd8 <_int_free+0xc24>$/;"	l
dd40	Test/a.s	/^    dd40:	e59f2294 	ldr	r2, [pc, #660]	; dfdc <_int_free+0xc28>$/;"	l
dd44	Test/a.s	/^    dd44:	e59f3294 	ldr	r3, [pc, #660]	; dfe0 <_int_free+0xc2c>$/;"	l
dd48	Test/a.s	/^    dd48:	ebfff983 	bl	c35c <__malloc_assert>$/;"	l
dd4c	Test/a.s	/^    dd4c:	e59f0290 	ldr	r0, [pc, #656]	; dfe4 <_int_free+0xc30>$/;"	l
dd50	Test/a.s	/^    dd50:	e59f1280 	ldr	r1, [pc, #640]	; dfd8 <_int_free+0xc24>$/;"	l
dd54	Test/a.s	/^    dd54:	e59f2280 	ldr	r2, [pc, #640]	; dfdc <_int_free+0xc28>$/;"	l
dd58	Test/a.s	/^    dd58:	e59f3280 	ldr	r3, [pc, #640]	; dfe0 <_int_free+0xc2c>$/;"	l
dd5c	Test/a.s	/^    dd5c:	ebfff97e 	bl	c35c <__malloc_assert>$/;"	l
dd60	Test/a.s	/^    dd60:	e5921014 	ldr	r1, [r2, #20]$/;"	l
dd64	Test/a.s	/^    dd64:	e1510008 	cmp	r1, r8$/;"	l
dd68	Test/a.s	/^    dd68:	1a00001e 	bne	dde8 <_int_free+0xa34>$/;"	l
dd6c	Test/a.s	/^    dd6c:	e5981014 	ldr	r1, [r8, #20]$/;"	l
dd70	Test/a.s	/^    dd70:	e5910010 	ldr	r0, [r1, #16]$/;"	l
dd74	Test/a.s	/^    dd74:	e1580000 	cmp	r8, r0$/;"	l
dd78	Test/a.s	/^    dd78:	1a000015 	bne	ddd4 <_int_free+0xa20>$/;"	l
dd7c	Test/a.s	/^    dd7c:	e5930010 	ldr	r0, [r3, #16]$/;"	l
dd80	Test/a.s	/^    dd80:	e3500000 	cmp	r0, #0$/;"	l
dd84	Test/a.s	/^    dd84:	15821014 	strne	r1, [r2, #20]$/;"	l
dd88	Test/a.s	/^    dd88:	15983014 	ldrne	r3, [r8, #20]$/;"	l
dd8c	Test/a.s	/^    dd8c:	15832010 	strne	r2, [r3, #16]$/;"	l
dd90	Test/a.s	/^    dd90:	1afffe06 	bne	d5b0 <_int_free+0x1fc>$/;"	l
dd94	Test/a.s	/^    dd94:	e1520008 	cmp	r2, r8$/;"	l
dd98	Test/a.s	/^    dd98:	15832010 	strne	r2, [r3, #16]$/;"	l
dd9c	Test/a.s	/^    dd9c:	15982010 	ldrne	r2, [r8, #16]$/;"	l
dda0	Test/a.s	/^    dda0:	15831014 	strne	r1, [r3, #20]$/;"	l
dda4	Test/a.s	/^    dda4:	15823014 	strne	r3, [r2, #20]$/;"	l
dda8	Test/a.s	/^    dda8:	15982014 	ldrne	r2, [r8, #20]$/;"	l
ddac	Test/a.s	/^    ddac:	05833014 	streq	r3, [r3, #20]$/;"	l
ddb0	Test/a.s	/^    ddb0:	05833010 	streq	r3, [r3, #16]$/;"	l
ddb4	Test/a.s	/^    ddb4:	15823010 	strne	r3, [r2, #16]$/;"	l
ddb8	Test/a.s	/^    ddb8:	eafffdfc 	b	d5b0 <_int_free+0x1fc>$/;"	l
ddbc	Test/a.s	/^    ddbc:	e59f31b8 	ldr	r3, [pc, #440]	; df7c <_int_free+0xbc8>$/;"	l
ddc0	Test/a.s	/^    ddc0:	e59f11dc 	ldr	r1, [pc, #476]	; dfa4 <_int_free+0xbf0>$/;"	l
ddc4	Test/a.s	/^    ddc4:	e593048c 	ldr	r0, [r3, #1164]	; 0x48c$/;"	l
ddc8	Test/a.s	/^    ddc8:	e1a02008 	mov	r2, r8$/;"	l
ddcc	Test/a.s	/^    ddcc:	ebfffb9d 	bl	cc48 <malloc_printerr>$/;"	l
ddd0	Test/a.s	/^    ddd0:	eafffdf6 	b	d5b0 <_int_free+0x1fc>$/;"	l
ddd4	Test/a.s	/^    ddd4:	e59f020c 	ldr	r0, [pc, #524]	; dfe8 <_int_free+0xc34>$/;"	l
ddd8	Test/a.s	/^    ddd8:	e59f11f8 	ldr	r1, [pc, #504]	; dfd8 <_int_free+0xc24>$/;"	l
dddc	Test/a.s	/^    dddc:	e59f2208 	ldr	r2, [pc, #520]	; dfec <_int_free+0xc38>$/;"	l
dde0	Test/a.s	/^    dde0:	e59f31f8 	ldr	r3, [pc, #504]	; dfe0 <_int_free+0xc2c>$/;"	l
dde4	Test/a.s	/^    dde4:	ebfff95c 	bl	c35c <__malloc_assert>$/;"	l
dde8	Test/a.s	/^    dde8:	e59f0200 	ldr	r0, [pc, #512]	; dff0 <_int_free+0xc3c>$/;"	l
ddec	Test/a.s	/^    ddec:	e59f11e4 	ldr	r1, [pc, #484]	; dfd8 <_int_free+0xc24>$/;"	l
ddf0	Test/a.s	/^    ddf0:	e59f21f4 	ldr	r2, [pc, #500]	; dfec <_int_free+0xc38>$/;"	l
ddf4	Test/a.s	/^    ddf4:	e59f31e4 	ldr	r3, [pc, #484]	; dfe0 <_int_free+0xc2c>$/;"	l
ddf8	Test/a.s	/^    ddf8:	ebfff957 	bl	c35c <__malloc_assert>$/;"	l
ddfc	Test/a.s	/^    ddfc:	e59f51f0 	ldr	r5, [pc, #496]	; dff4 <_int_free+0xc40>$/;"	l
de00	Test/a.s	/^    de00:	eaffffa5 	b	dc9c <_int_free+0x8e8>$/;"	l
de04	Test/a.s	/^    de04:	e5932004 	ldr	r2, [r3, #4]$/;"	l
de08	Test/a.s	/^    de08:	e3c22007 	bic	r2, r2, #7$/;"	l
de0c	Test/a.s	/^    de0c:	e0833002 	add	r3, r3, r2$/;"	l
de10	Test/a.s	/^    de10:	e1540003 	cmp	r4, r3$/;"	l
de14	Test/a.s	/^    de14:	3afffdc3 	bcc	d528 <_int_free+0x174>$/;"	l
de18	Test/a.s	/^    de18:	e59f51d8 	ldr	r5, [pc, #472]	; dff8 <_int_free+0xc44>$/;"	l
de1c	Test/a.s	/^    de1c:	eaffff9e 	b	dc9c <_int_free+0x8e8>$/;"	l
de20	Test/a.s	/^    de20:	e59f51d4 	ldr	r5, [pc, #468]	; dffc <_int_free+0xc48>$/;"	l
de24	Test/a.s	/^    de24:	eaffff9c 	b	dc9c <_int_free+0x8e8>$/;"	l
de28	Test/a.s	/^    de28:	e3e03000 	mvn	r3, #0$/;"	l
de2c	Test/a.s	/^    de2c:	e58d3000 	str	r3, [sp]$/;"	l
de30	Test/a.s	/^    de30:	e59d300c 	ldr	r3, [sp, #12]$/;"	l
de34	Test/a.s	/^    de34:	e3a02000 	mov	r2, #0$/;"	l
de38	Test/a.s	/^    de38:	e0850003 	add	r0, r5, r3$/;"	l
de3c	Test/a.s	/^    de3c:	e58d2004 	str	r2, [sp, #4]$/;"	l
de40	Test/a.s	/^    de40:	e1a01009 	mov	r1, r9$/;"	l
de44	Test/a.s	/^    de44:	e3a03032 	mov	r3, #50	; 0x32$/;"	l
de48	Test/a.s	/^    de48:	eb001ae0 	bl	149d0 <__mmap>$/;"	l
de4c	Test/a.s	/^    de4c:	e3700001 	cmn	r0, #1$/;"	l
de50	Test/a.s	/^    de50:	0afffebf 	beq	d954 <_int_free+0x5a0>$/;"	l
de54	Test/a.s	/^    de54:	e59dc00c 	ldr	ip, [sp, #12]$/;"	l
de58	Test/a.s	/^    de58:	e585c00c 	str	ip, [r5, #12]$/;"	l
de5c	Test/a.s	/^    de5c:	eafffeb1 	b	d928 <_int_free+0x574>$/;"	l
de60	Test/a.s	/^    de60:	e59f3198 	ldr	r3, [pc, #408]	; e000 <_int_free+0xc4c>$/;"	l
de64	Test/a.s	/^    de64:	e5933000 	ldr	r3, [r3]$/;"	l
de68	Test/a.s	/^    de68:	e3530000 	cmp	r3, #0$/;"	l
de6c	Test/a.s	/^    de6c:	e5813490 	str	r3, [r1, #1168]	; 0x490$/;"	l
de70	Test/a.s	/^    de70:	1a000019 	bne	dedc <_int_free+0xb28>$/;"	l
de74	Test/a.s	/^    de74:	e59f0188 	ldr	r0, [pc, #392]	; e004 <_int_free+0xc50>$/;"	l
de78	Test/a.s	/^    de78:	e3a01702 	mov	r1, #524288	; 0x80000$/;"	l
de7c	Test/a.s	/^    de7c:	e3a07005 	mov	r7, #5$/;"	l
de80	Test/a.s	/^    de80:	ef000000 	svc	0x00000000$/;"	l
de84	Test/a.s	/^    de84:	e3700a01 	cmn	r0, #4096	; 0x1000$/;"	l
de88	Test/a.s	/^    de88:	e1a03000 	mov	r3, r0$/;"	l
de8c	Test/a.s	/^    de8c:	8a00001d 	bhi	df08 <_int_free+0xb54>$/;"	l
de90	Test/a.s	/^    de90:	e3500000 	cmp	r0, #0$/;"	l
de94	Test/a.s	/^    de94:	ba000010 	blt	dedc <_int_free+0xb28>$/;"	l
de98	Test/a.s	/^    de98:	e28d101f 	add	r1, sp, #31$/;"	l
de9c	Test/a.s	/^    de9c:	e3a02001 	mov	r2, #1$/;"	l
dea0	Test/a.s	/^    dea0:	e3a07003 	mov	r7, #3$/;"	l
dea4	Test/a.s	/^    dea4:	ef000000 	svc	0x00000000$/;"	l
dea8	Test/a.s	/^    dea8:	e3700a01 	cmn	r0, #4096	; 0x1000$/;"	l
deac	Test/a.s	/^    deac:	8a00000f 	bhi	def0 <_int_free+0xb3c>$/;"	l
deb0	Test/a.s	/^    deb0:	e3500000 	cmp	r0, #0$/;"	l
deb4	Test/a.s	/^    deb4:	da000002 	ble	dec4 <_int_free+0xb10>$/;"	l
deb8	Test/a.s	/^    deb8:	e5dd101f 	ldrb	r1, [sp, #31]$/;"	l
debc	Test/a.s	/^    debc:	e3510032 	cmp	r1, #50	; 0x32$/;"	l
dec0	Test/a.s	/^    dec0:	0a000000 	beq	dec8 <_int_free+0xb14>$/;"	l
dec4	Test/a.s	/^    dec4:	e3a02000 	mov	r2, #0$/;"	l
dec8	Test/a.s	/^    dec8:	e59fc0ac 	ldr	ip, [pc, #172]	; df7c <_int_free+0xbc8>$/;"	l
decc	Test/a.s	/^    decc:	e1a00003 	mov	r0, r3$/;"	l
decl	parser.y	/^decl		: type_decl $/;"	l
declSemanticValue	header.h	/^        DECLSemanticValue declSemanticValue;$/;"	m	union:AST_NODE::__anon8
decl_list	parser.y	/^decl_list	: decl_list decl $/;"	l
declareFunction	semanticAnalysis.c	/^void declareFunction(AST_NODE* declarationNode)$/;"	f
declareIdList	semanticAnalysis.c	/^void declareIdList(AST_NODE* declarationNode, SymbolAttributeKind isVariableOrTypeAttribute, int ignoreArrayFirstDimSize)$/;"	f
declaredLocally	symbolTable.c	/^int declaredLocally(char* symbolName)$/;"	f
ded0	Test/a.s	/^    ded0:	e58c2490 	str	r2, [ip, #1168]	; 0x490$/;"	l
ded4	Test/a.s	/^    ded4:	e3a07006 	mov	r7, #6$/;"	l
ded8	Test/a.s	/^    ded8:	ef000000 	svc	0x00000000$/;"	l
dedc	Test/a.s	/^    dedc:	e59f1098 	ldr	r1, [pc, #152]	; df7c <_int_free+0xbc8>$/;"	l
dee0	Test/a.s	/^    dee0:	e5913490 	ldr	r3, [r1, #1168]	; 0x490$/;"	l
dee4	Test/a.s	/^    dee4:	e2933000 	adds	r3, r3, #0$/;"	l
dee8	Test/a.s	/^    dee8:	13a03001 	movne	r3, #1$/;"	l
deec	Test/a.s	/^    deec:	eafffe86 	b	d90c <_int_free+0x558>$/;"	l
def0	Test/a.s	/^    def0:	e59f2110 	ldr	r2, [pc, #272]	; e008 <_int_free+0xc54>$/;"	l
def4	Test/a.s	/^    def4:	e2601000 	rsb	r1, r0, #0$/;"	l
def8	Test/a.s	/^    def8:	e79f2002 	ldr	r2, [pc, r2]$/;"	l
defc	Test/a.s	/^    defc:	ebffed57 	bl	9460 <__aeabi_read_tp>$/;"	l
df00	Test/a.s	/^    df00:	e7801002 	str	r1, [r0, r2]$/;"	l
df04	Test/a.s	/^    df04:	eaffffee 	b	dec4 <_int_free+0xb10>$/;"	l
df08	Test/a.s	/^    df08:	e59f20fc 	ldr	r2, [pc, #252]	; e00c <_int_free+0xc58>$/;"	l
df0c	Test/a.s	/^    df0c:	e2603000 	rsb	r3, r0, #0$/;"	l
df10	Test/a.s	/^    df10:	e79f2002 	ldr	r2, [pc, r2]$/;"	l
df14	Test/a.s	/^    df14:	ebffed51 	bl	9460 <__aeabi_read_tp>$/;"	l
df18	Test/a.s	/^    df18:	e7803002 	str	r3, [r0, r2]$/;"	l
df1c	Test/a.s	/^    df1c:	eaffffee 	b	dedc <_int_free+0xb28>$/;"	l
df20	Test/a.s	/^    df20:	e59f00e8 	ldr	r0, [pc, #232]	; e010 <_int_free+0xc5c>$/;"	l
df24	Test/a.s	/^    df24:	e59f10ac 	ldr	r1, [pc, #172]	; dfd8 <_int_free+0xc24>$/;"	l
df28	Test/a.s	/^    df28:	e59f20e4 	ldr	r2, [pc, #228]	; e014 <_int_free+0xc60>$/;"	l
df2c	Test/a.s	/^    df2c:	e59f30ac 	ldr	r3, [pc, #172]	; dfe0 <_int_free+0xc2c>$/;"	l
df30	Test/a.s	/^    df30:	ebfff909 	bl	c35c <__malloc_assert>$/;"	l
df34	Test/a.s	/^    df34:	e59f50dc 	ldr	r5, [pc, #220]	; e018 <_int_free+0xc64>$/;"	l
df38	Test/a.s	/^    df38:	eaffff57 	b	dc9c <_int_free+0x8e8>$/;"	l
df3c	Test/a.s	/^    df3c:	e59f00d8 	ldr	r0, [pc, #216]	; e01c <_int_free+0xc68>$/;"	l
df40	Test/a.s	/^    df40:	e59f1090 	ldr	r1, [pc, #144]	; dfd8 <_int_free+0xc24>$/;"	l
df44	Test/a.s	/^    df44:	e59f20d4 	ldr	r2, [pc, #212]	; e020 <_int_free+0xc6c>$/;"	l
df48	Test/a.s	/^    df48:	e59f3090 	ldr	r3, [pc, #144]	; dfe0 <_int_free+0xc2c>$/;"	l
df4c	Test/a.s	/^    df4c:	ebfff902 	bl	c35c <__malloc_assert>$/;"	l
df50	Test/a.s	/^    df50:	e59f0090 	ldr	r0, [pc, #144]	; dfe8 <_int_free+0xc34>$/;"	l
df54	Test/a.s	/^    df54:	e59f1038 	ldr	r1, [pc, #56]	; df94 <_int_free+0xbe0>$/;"	l
df58	Test/a.s	/^    df58:	e59f20c4 	ldr	r2, [pc, #196]	; e024 <_int_free+0xc70>$/;"	l
df5c	Test/a.s	/^    df5c:	e59f3038 	ldr	r3, [pc, #56]	; df9c <_int_free+0xbe8>$/;"	l
df60	Test/a.s	/^    df60:	ebfff8fd 	bl	c35c <__malloc_assert>$/;"	l
df64	Test/a.s	/^    df64:	e59f0084 	ldr	r0, [pc, #132]	; dff0 <_int_free+0xc3c>$/;"	l
df68	Test/a.s	/^    df68:	e59f1024 	ldr	r1, [pc, #36]	; df94 <_int_free+0xbe0>$/;"	l
df6c	Test/a.s	/^    df6c:	e59f20b0 	ldr	r2, [pc, #176]	; e024 <_int_free+0xc70>$/;"	l
df70	Test/a.s	/^    df70:	e59f3024 	ldr	r3, [pc, #36]	; df9c <_int_free+0xbe8>$/;"	l
df74	Test/a.s	/^    df74:	ebfff8f8 	bl	c35c <__malloc_assert>$/;"	l
df78	Test/a.s	/^    df78:	0008d2f8 	.word	0x0008d2f8$/;"	l
df7c	Test/a.s	/^    df7c:	0008c4b4 	.word	0x0008c4b4$/;"	l
df80	Test/a.s	/^    df80:	0008c970 	.word	0x0008c970$/;"	l
df84	Test/a.s	/^    df84:	000001ff 	.word	0x000001ff$/;"	l
df88	Test/a.s	/^    df88:	000ffffe 	.word	0x000ffffe$/;"	l
df8c	Test/a.s	/^    df8c:	0006cc80 	.word	0x0006cc80$/;"	l
df90	Test/a.s	/^    df90:	0006cea0 	.word	0x0006cea0$/;"	l
df94	Test/a.s	/^    df94:	0006cce4 	.word	0x0006cce4$/;"	l
df98	Test/a.s	/^    df98:	000002b1 	.word	0x000002b1$/;"	l
df9c	Test/a.s	/^    df9c:	0006dea0 	.word	0x0006dea0$/;"	l
dfa0	Test/a.s	/^    dfa0:	0006ce64 	.word	0x0006ce64$/;"	l
dfa4	Test/a.s	/^    dfa4:	0006ca68 	.word	0x0006ca68$/;"	l
dfa8	Test/a.s	/^    dfa8:	0006ce38 	.word	0x0006ce38$/;"	l
dfac	Test/a.s	/^    dfac:	000002a5 	.word	0x000002a5$/;"	l
dfb0	Test/a.s	/^    dfb0:	0006ccec 	.word	0x0006ccec$/;"	l
dfb4	Test/a.s	/^    dfb4:	000002a2 	.word	0x000002a2$/;"	l
dfb8	Test/a.s	/^    dfb8:	0006ccd0 	.word	0x0006ccd0$/;"	l
dfbc	Test/a.s	/^    dfbc:	0000029f 	.word	0x0000029f$/;"	l
dfc0	Test/a.s	/^    dfc0:	0006cc48 	.word	0x0006cc48$/;"	l
dfc4	Test/a.s	/^    dfc4:	0006cca4 	.word	0x0006cca4$/;"	l
dfc8	Test/a.s	/^    dfc8:	0006cc24 	.word	0x0006cc24$/;"	l
dfcc	Test/a.s	/^    dfcc:	0006cc00 	.word	0x0006cc00$/;"	l
dfd0	Test/a.s	/^    dfd0:	0006cc60 	.word	0x0006cc60$/;"	l
dfd4	Test/a.s	/^    dfd4:	0006cb04 	.word	0x0006cb04$/;"	l
dfd8	Test/a.s	/^    dfd8:	0006c930 	.word	0x0006c930$/;"	l
dfdc	Test/a.s	/^    dfdc:	00000f48 	.word	0x00000f48$/;"	l
dfe0	Test/a.s	/^    dfe0:	0006de94 	.word	0x0006de94$/;"	l
dfe4	Test/a.s	/^    dfe4:	0006cad0 	.word	0x0006cad0$/;"	l
dfe8	Test/a.s	/^    dfe8:	0006caac 	.word	0x0006caac$/;"	l
dfec	Test/a.s	/^    dfec:	00000f3f 	.word	0x00000f3f$/;"	l
dff0	Test/a.s	/^    dff0:	0006ca88 	.word	0x0006ca88$/;"	l
dff4	Test/a.s	/^    dff4:	0006cb9c 	.word	0x0006cb9c$/;"	l
dff8	Test/a.s	/^    dff8:	0006cbbc 	.word	0x0006cbbc$/;"	l
dffc	Test/a.s	/^    dffc:	0006cb78 	.word	0x0006cb78$/;"	l
dim_decl	parser.y	/^dim_decl	: MK_LB cexpr MK_RB $/;"	l
dim_fn	parser.y	/^dim_fn		: MK_LB expr_null MK_RB $/;"	l
dim_list	parser.y	/^dim_list	: dim_list MK_LB expr MK_RB $/;"	l
dimension	nodeAttribute.h	/^    int dimension;$/;"	m	struct:ArrayProperties
dimension	symbolTable.h	/^    int dimension;$/;"	m	struct:ArrayProperties
e	Test/s.s	/^   e:	b083      	sub	sp, #12$/;"	l
e000	Test/a.s	/^    e000:	0008bfdc 	.word	0x0008bfdc$/;"	l
e004	Test/a.s	/^    e004:	0006ced4 	.word	0x0006ced4$/;"	l
e008	Test/a.s	/^    e008:	0007e140 	.word	0x0007e140$/;"	l
e00c	Test/a.s	/^    e00c:	0007e128 	.word	0x0007e128$/;"	l
e010	Test/a.s	/^    e010:	0006cef4 	.word	0x0006cef4$/;"	l
e014	Test/a.s	/^    e014:	00000f98 	.word	0x00000f98$/;"	l
e018	Test/a.s	/^    e018:	0006cbdc 	.word	0x0006cbdc$/;"	l
e01c	Test/a.s	/^    e01c:	0006ccbc 	.word	0x0006ccbc$/;"	l
e020	Test/a.s	/^    e020:	00000f92 	.word	0x00000f92$/;"	l
e024	Test/a.s	/^    e024:	000002ae 	.word	0x000002ae$/;"	l
e028	Test/a.s	/^    e028:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
e02c	Test/a.s	/^    e02c:	e3710021 	cmn	r1, #33	; 0x21$/;"	l
e030	Test/a.s	/^    e030:	e24dd04c 	sub	sp, sp, #76	; 0x4c$/;"	l
e034	Test/a.s	/^    e034:	e58d1010 	str	r1, [sp, #16]$/;"	l
e038	Test/a.s	/^    e038:	e1a05000 	mov	r5, r0$/;"	l
e03c	Test/a.s	/^    e03c:	8a000188 	bhi	e664 <_int_malloc+0x63c>$/;"	l
e040	Test/a.s	/^    e040:	e59d0010 	ldr	r0, [sp, #16]$/;"	l
e044	Test/a.s	/^    e044:	e59f7fac 	ldr	r7, [pc, #4012]	; eff8 <_int_malloc+0xfd0>$/;"	l
e048	Test/a.s	/^    e048:	e280600b 	add	r6, r0, #11$/;"	l
e04c	Test/a.s	/^    e04c:	e356000f 	cmp	r6, #15$/;"	l
e050	Test/a.s	/^    e050:	e5973000 	ldr	r3, [r7]$/;"	l
e054	Test/a.s	/^    e054:	83c66007 	bichi	r6, r6, #7$/;"	l
e058	Test/a.s	/^    e058:	93a06010 	movls	r6, #16$/;"	l
e05c	Test/a.s	/^    e05c:	e1560003 	cmp	r6, r3$/;"	l
e060	Test/a.s	/^    e060:	81a011a6 	lsrhi	r1, r6, #3$/;"	l
e064	Test/a.s	/^    e064:	858d1014 	strhi	r1, [sp, #20]$/;"	l
e068	Test/a.s	/^    e068:	8a000033 	bhi	e13c <_int_malloc+0x114>$/;"	l
e06c	Test/a.s	/^    e06c:	e1a021a6 	lsr	r2, r6, #3$/;"	l
e070	Test/a.s	/^    e070:	e7958102 	ldr	r8, [r5, r2, lsl #2]$/;"	l
e074	Test/a.s	/^    e074:	e58d2014 	str	r2, [sp, #20]$/;"	l
e078	Test/a.s	/^    e078:	e3580000 	cmp	r8, #0$/;"	l
e07c	Test/a.s	/^    e07c:	e2429002 	sub	r9, r2, #2$/;"	l
e080	Test/a.s	/^    e080:	e085a102 	add	sl, r5, r2, lsl #2$/;"	l
e084	Test/a.s	/^    e084:	0a00002c 	beq	e13c <_int_malloc+0x114>$/;"	l
e088	Test/a.s	/^    e088:	e5981008 	ldr	r1, [r8, #8]$/;"	l
e08c	Test/a.s	/^    e08c:	e1a0200a 	mov	r2, sl$/;"	l
e090	Test/a.s	/^    e090:	e1a04008 	mov	r4, r8$/;"	l
e094	Test/a.s	/^    e094:	e5923000 	ldr	r3, [r2]$/;"	l
e098	Test/a.s	/^    e098:	e1530004 	cmp	r3, r4$/;"	l
e09c	Test/a.s	/^    e09c:	1a000005 	bne	e0b8 <_int_malloc+0x90>$/;"	l
e0a0	Test/a.s	/^    e0a0:	e1a00004 	mov	r0, r4$/;"	l
e0a4	Test/a.s	/^    e0a4:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
e0a8	Test/a.s	/^    e0a8:	e1a0e00f 	mov	lr, pc$/;"	l
e0ac	Test/a.s	/^    e0ac:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
e0b0	Test/a.s	/^    e0b0:	3afffff7 	bcc	e094 <_int_malloc+0x6c>$/;"	l
e0b4	Test/a.s	/^    e0b4:	e1a03004 	mov	r3, r4$/;"	l
e0b8	Test/a.s	/^    e0b8:	e1580003 	cmp	r8, r3$/;"	l
e0bc	Test/a.s	/^    e0bc:	e1a04003 	mov	r4, r3$/;"	l
e0c0	Test/a.s	/^    e0c0:	1a000001 	bne	e0cc <_int_malloc+0xa4>$/;"	l
e0c4	Test/a.s	/^    e0c4:	ea000010 	b	e10c <_int_malloc+0xe4>$/;"	l
e0c8	Test/a.s	/^    e0c8:	e1a04003 	mov	r4, r3$/;"	l
e0cc	Test/a.s	/^    e0cc:	e3540000 	cmp	r4, #0$/;"	l
e0d0	Test/a.s	/^    e0d0:	0a000019 	beq	e13c <_int_malloc+0x114>$/;"	l
e0d4	Test/a.s	/^    e0d4:	e5941008 	ldr	r1, [r4, #8]$/;"	l
e0d8	Test/a.s	/^    e0d8:	e1a0200a 	mov	r2, sl$/;"	l
e0dc	Test/a.s	/^    e0dc:	e5923000 	ldr	r3, [r2]$/;"	l
e0e0	Test/a.s	/^    e0e0:	e1530004 	cmp	r3, r4$/;"	l
e0e4	Test/a.s	/^    e0e4:	1a000005 	bne	e100 <_int_malloc+0xd8>$/;"	l
e0e8	Test/a.s	/^    e0e8:	e1a00004 	mov	r0, r4$/;"	l
e0ec	Test/a.s	/^    e0ec:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
e0f0	Test/a.s	/^    e0f0:	e1a0e00f 	mov	lr, pc$/;"	l
e0f4	Test/a.s	/^    e0f4:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
e0f8	Test/a.s	/^    e0f8:	3afffff7 	bcc	e0dc <_int_malloc+0xb4>$/;"	l
e0fc	Test/a.s	/^    e0fc:	e1a03004 	mov	r3, r4$/;"	l
e100	Test/a.s	/^    e100:	e1530004 	cmp	r3, r4$/;"	l
e104	Test/a.s	/^    e104:	e1a08003 	mov	r8, r3$/;"	l
e108	Test/a.s	/^    e108:	1affffee 	bne	e0c8 <_int_malloc+0xa0>$/;"	l
e10c	Test/a.s	/^    e10c:	e5983004 	ldr	r3, [r8, #4]$/;"	l
e110	Test/a.s	/^    e110:	e1a031a3 	lsr	r3, r3, #3$/;"	l
e114	Test/a.s	/^    e114:	e2433002 	sub	r3, r3, #2$/;"	l
e118	Test/a.s	/^    e118:	e1590003 	cmp	r9, r3$/;"	l
e11c	Test/a.s	/^    e11c:	1a0002c3 	bne	ec30 <_int_malloc+0xc08>$/;"	l
e120	Test/a.s	/^    e120:	e5973020 	ldr	r3, [r7, #32]$/;"	l
e124	Test/a.s	/^    e124:	e2888008 	add	r8, r8, #8$/;"	l
e128	Test/a.s	/^    e128:	e3530000 	cmp	r3, #0$/;"	l
e12c	Test/a.s	/^    e12c:	1a0000cd 	bne	e468 <_int_malloc+0x440>$/;"	l
e130	Test/a.s	/^    e130:	e1a00008 	mov	r0, r8$/;"	l
e134	Test/a.s	/^    e134:	e28dd04c 	add	sp, sp, #76	; 0x4c$/;"	l
e138	Test/a.s	/^    e138:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}$/;"	l
e13c	Test/a.s	/^    e13c:	e3560c02 	cmp	r6, #512	; 0x200$/;"	l
e140	Test/a.s	/^    e140:	2a000019 	bcs	e1ac <_int_malloc+0x184>$/;"	l
e144	Test/a.s	/^    e144:	e59d0014 	ldr	r0, [sp, #20]$/;"	l
e148	Test/a.s	/^    e148:	e0853180 	add	r3, r5, r0, lsl #3$/;"	l
e14c	Test/a.s	/^    e14c:	e2833028 	add	r3, r3, #40	; 0x28$/;"	l
e150	Test/a.s	/^    e150:	e593800c 	ldr	r8, [r3, #12]$/;"	l
e154	Test/a.s	/^    e154:	e58d0018 	str	r0, [sp, #24]$/;"	l
e158	Test/a.s	/^    e158:	e1580003 	cmp	r8, r3$/;"	l
e15c	Test/a.s	/^    e15c:	0a00019d 	beq	e7d8 <_int_malloc+0x7b0>$/;"	l
e160	Test/a.s	/^    e160:	e3580000 	cmp	r8, #0$/;"	l
e164	Test/a.s	/^    e164:	0a000199 	beq	e7d0 <_int_malloc+0x7a8>$/;"	l
e168	Test/a.s	/^    e168:	e598200c 	ldr	r2, [r8, #12]$/;"	l
e16c	Test/a.s	/^    e16c:	e5921008 	ldr	r1, [r2, #8]$/;"	l
e170	Test/a.s	/^    e170:	e1580001 	cmp	r8, r1$/;"	l
e174	Test/a.s	/^    e174:	1a0002a6 	bne	ec14 <_int_malloc+0xbec>$/;"	l
e178	Test/a.s	/^    e178:	e0886006 	add	r6, r8, r6$/;"	l
e17c	Test/a.s	/^    e17c:	e5961004 	ldr	r1, [r6, #4]$/;"	l
e180	Test/a.s	/^    e180:	e59f0ed4 	ldr	r0, [pc, #3796]	; f05c <_int_malloc+0x1034>$/;"	l
e184	Test/a.s	/^    e184:	e3811001 	orr	r1, r1, #1$/;"	l
e188	Test/a.s	/^    e188:	e1550000 	cmp	r5, r0$/;"	l
e18c	Test/a.s	/^    e18c:	e583200c 	str	r2, [r3, #12]$/;"	l
e190	Test/a.s	/^    e190:	e5823008 	str	r3, [r2, #8]$/;"	l
e194	Test/a.s	/^    e194:	e5861004 	str	r1, [r6, #4]$/;"	l
e198	Test/a.s	/^    e198:	0affffe0 	beq	e120 <_int_malloc+0xf8>$/;"	l
e19c	Test/a.s	/^    e19c:	e5983004 	ldr	r3, [r8, #4]$/;"	l
e1a0	Test/a.s	/^    e1a0:	e3833004 	orr	r3, r3, #4$/;"	l
e1a4	Test/a.s	/^    e1a4:	e5883004 	str	r3, [r8, #4]$/;"	l
e1a8	Test/a.s	/^    e1a8:	eaffffdc 	b	e120 <_int_malloc+0xf8>$/;"	l
e1ac	Test/a.s	/^    e1ac:	e1a03326 	lsr	r3, r6, #6$/;"	l
e1b0	Test/a.s	/^    e1b0:	e3530026 	cmp	r3, #38	; 0x26$/;"	l
e1b4	Test/a.s	/^    e1b4:	e58d301c 	str	r3, [sp, #28]$/;"	l
e1b8	Test/a.s	/^    e1b8:	9a000062 	bls	e348 <_int_malloc+0x320>$/;"	l
e1bc	Test/a.s	/^    e1bc:	e1a034a6 	lsr	r3, r6, #9$/;"	l
e1c0	Test/a.s	/^    e1c0:	e3530014 	cmp	r3, #20$/;"	l
e1c4	Test/a.s	/^    e1c4:	e58d3024 	str	r3, [sp, #36]	; 0x24$/;"	l
e1c8	Test/a.s	/^    e1c8:	8a00012f 	bhi	e68c <_int_malloc+0x664>$/;"	l
e1cc	Test/a.s	/^    e1cc:	e283305b 	add	r3, r3, #91	; 0x5b$/;"	l
e1d0	Test/a.s	/^    e1d0:	e58d3018 	str	r3, [sp, #24]$/;"	l
e1d4	Test/a.s	/^    e1d4:	e1a03626 	lsr	r3, r6, #12$/;"	l
e1d8	Test/a.s	/^    e1d8:	e58d3030 	str	r3, [sp, #48]	; 0x30$/;"	l
e1dc	Test/a.s	/^    e1dc:	e1a037a6 	lsr	r3, r6, #15$/;"	l
e1e0	Test/a.s	/^    e1e0:	e58d3028 	str	r3, [sp, #40]	; 0x28$/;"	l
e1e4	Test/a.s	/^    e1e4:	e1a03926 	lsr	r3, r6, #18$/;"	l
e1e8	Test/a.s	/^    e1e8:	e58d3020 	str	r3, [sp, #32]$/;"	l
e1ec	Test/a.s	/^    e1ec:	e5953004 	ldr	r3, [r5, #4]$/;"	l
e1f0	Test/a.s	/^    e1f0:	e3130001 	tst	r3, #1$/;"	l
e1f4	Test/a.s	/^    e1f4:	0a000121 	beq	e680 <_int_malloc+0x658>$/;"	l
e1f8	Test/a.s	/^    e1f8:	e59d301c 	ldr	r3, [sp, #28]$/;"	l
e1fc	Test/a.s	/^    e1fc:	e2860010 	add	r0, r6, #16$/;"	l
e200	Test/a.s	/^    e200:	e2833038 	add	r3, r3, #56	; 0x38$/;"	l
e204	Test/a.s	/^    e204:	e58d3034 	str	r3, [sp, #52]	; 0x34$/;"	l
e208	Test/a.s	/^    e208:	e59d3024 	ldr	r3, [sp, #36]	; 0x24$/;"	l
e20c	Test/a.s	/^    e20c:	e59f9de8 	ldr	r9, [pc, #3560]	; effc <_int_malloc+0xfd4>$/;"	l
e210	Test/a.s	/^    e210:	e283305b 	add	r3, r3, #91	; 0x5b$/;"	l
e214	Test/a.s	/^    e214:	e58d3038 	str	r3, [sp, #56]	; 0x38$/;"	l
e218	Test/a.s	/^    e218:	e59d3030 	ldr	r3, [sp, #48]	; 0x30$/;"	l
e21c	Test/a.s	/^    e21c:	e285a030 	add	sl, r5, #48	; 0x30$/;"	l
e220	Test/a.s	/^    e220:	e283306e 	add	r3, r3, #110	; 0x6e$/;"	l
e224	Test/a.s	/^    e224:	e58d303c 	str	r3, [sp, #60]	; 0x3c$/;"	l
e228	Test/a.s	/^    e228:	e59d3028 	ldr	r3, [sp, #40]	; 0x28$/;"	l
e22c	Test/a.s	/^    e22c:	e58d002c 	str	r0, [sp, #44]	; 0x2c$/;"	l
e230	Test/a.s	/^    e230:	e2833077 	add	r3, r3, #119	; 0x77$/;"	l
e234	Test/a.s	/^    e234:	e58d3040 	str	r3, [sp, #64]	; 0x40$/;"	l
e238	Test/a.s	/^    e238:	e59d3020 	ldr	r3, [sp, #32]$/;"	l
e23c	Test/a.s	/^    e23c:	e283307c 	add	r3, r3, #124	; 0x7c$/;"	l
e240	Test/a.s	/^    e240:	e58d3044 	str	r3, [sp, #68]	; 0x44$/;"	l
e244	Test/a.s	/^    e244:	e59f8db4 	ldr	r8, [pc, #3508]	; f000 <_int_malloc+0xfd8>$/;"	l
e248	Test/a.s	/^    e248:	ea000010 	b	e290 <_int_malloc+0x268>$/;"	l
e24c	Test/a.s	/^    e24c:	e281c028 	add	ip, r1, #40	; 0x28$/;"	l
e250	Test/a.s	/^    e250:	e085c00c 	add	ip, r5, ip$/;"	l
e254	Test/a.s	/^    e254:	e59c2008 	ldr	r2, [ip, #8]$/;"	l
e258	Test/a.s	/^    e258:	e1a001a1 	lsr	r0, r1, #3$/;"	l
e25c	Test/a.s	/^    e25c:	e1a032c0 	asr	r3, r0, #5$/;"	l
e260	Test/a.s	/^    e260:	e2833f43 	add	r3, r3, #268	; 0x10c$/;"	l
e264	Test/a.s	/^    e264:	e7951103 	ldr	r1, [r5, r3, lsl #2]$/;"	l
e268	Test/a.s	/^    e268:	e200001f 	and	r0, r0, #31$/;"	l
e26c	Test/a.s	/^    e26c:	e3a0b001 	mov	fp, #1$/;"	l
e270	Test/a.s	/^    e270:	e181001b 	orr	r0, r1, fp, lsl r0$/;"	l
e274	Test/a.s	/^    e274:	e2588001 	subs	r8, r8, #1$/;"	l
e278	Test/a.s	/^    e278:	e7850103 	str	r0, [r5, r3, lsl #2]$/;"	l
e27c	Test/a.s	/^    e27c:	e584c00c 	str	ip, [r4, #12]$/;"	l
e280	Test/a.s	/^    e280:	e5842008 	str	r2, [r4, #8]$/;"	l
e284	Test/a.s	/^    e284:	e582400c 	str	r4, [r2, #12]$/;"	l
e288	Test/a.s	/^    e288:	e58c4008 	str	r4, [ip, #8]$/;"	l
e28c	Test/a.s	/^    e28c:	0a00008d 	beq	e4c8 <_int_malloc+0x4a0>$/;"	l
e290	Test/a.s	/^    e290:	e595403c 	ldr	r4, [r5, #60]	; 0x3c$/;"	l
e294	Test/a.s	/^    e294:	e154000a 	cmp	r4, sl$/;"	l
e298	Test/a.s	/^    e298:	0a00008a 	beq	e4c8 <_int_malloc+0x4a0>$/;"	l
e29c	Test/a.s	/^    e29c:	e5941004 	ldr	r1, [r4, #4]$/;"	l
e2a0	Test/a.s	/^    e2a0:	e594b00c 	ldr	fp, [r4, #12]$/;"	l
e2a4	Test/a.s	/^    e2a4:	e3510008 	cmp	r1, #8$/;"	l
e2a8	Test/a.s	/^    e2a8:	9a00017d 	bls	e8a4 <_int_malloc+0x87c>$/;"	l
e2ac	Test/a.s	/^    e2ac:	e5953448 	ldr	r3, [r5, #1096]	; 0x448$/;"	l
e2b0	Test/a.s	/^    e2b0:	e1510003 	cmp	r1, r3$/;"	l
e2b4	Test/a.s	/^    e2b4:	8a00017a 	bhi	e8a4 <_int_malloc+0x87c>$/;"	l
e2b8	Test/a.s	/^    e2b8:	e1560009 	cmp	r6, r9$/;"	l
e2bc	Test/a.s	/^    e2bc:	e3c11007 	bic	r1, r1, #7$/;"	l
e2c0	Test/a.s	/^    e2c0:	e59f3d34 	ldr	r3, [pc, #3380]	; effc <_int_malloc+0xfd4>$/;"	l
e2c4	Test/a.s	/^    e2c4:	8a000001 	bhi	e2d0 <_int_malloc+0x2a8>$/;"	l
e2c8	Test/a.s	/^    e2c8:	e15a000b 	cmp	sl, fp$/;"	l
e2cc	Test/a.s	/^    e2cc:	0a000044 	beq	e3e4 <_int_malloc+0x3bc>$/;"	l
e2d0	Test/a.s	/^    e2d0:	e1560001 	cmp	r6, r1$/;"	l
e2d4	Test/a.s	/^    e2d4:	e585b03c 	str	fp, [r5, #60]	; 0x3c$/;"	l
e2d8	Test/a.s	/^    e2d8:	e58ba008 	str	sl, [fp, #8]$/;"	l
e2dc	Test/a.s	/^    e2dc:	0a0000cf 	beq	e620 <_int_malloc+0x5f8>$/;"	l
e2e0	Test/a.s	/^    e2e0:	e1510009 	cmp	r1, r9$/;"	l
e2e4	Test/a.s	/^    e2e4:	9affffd8 	bls	e24c <_int_malloc+0x224>$/;"	l
e2e8	Test/a.s	/^    e2e8:	e1a00321 	lsr	r0, r1, #6$/;"	l
e2ec	Test/a.s	/^    e2ec:	e3500026 	cmp	r0, #38	; 0x26$/;"	l
e2f0	Test/a.s	/^    e2f0:	8a000019 	bhi	e35c <_int_malloc+0x334>$/;"	l
e2f4	Test/a.s	/^    e2f4:	e1a02080 	lsl	r2, r0, #1$/;"	l
e2f8	Test/a.s	/^    e2f8:	e282206c 	add	r2, r2, #108	; 0x6c$/;"	l
e2fc	Test/a.s	/^    e2fc:	e2800038 	add	r0, r0, #56	; 0x38$/;"	l
e300	Test/a.s	/^    e300:	e282200e 	add	r2, r2, #14$/;"	l
e304	Test/a.s	/^    e304:	e0852102 	add	r2, r5, r2, lsl #2$/;"	l
e308	Test/a.s	/^    e308:	e5923008 	ldr	r3, [r2, #8]$/;"	l
e30c	Test/a.s	/^    e30c:	e1530002 	cmp	r3, r2$/;"	l
e310	Test/a.s	/^    e310:	0a00005a 	beq	e480 <_int_malloc+0x458>$/;"	l
e314	Test/a.s	/^    e314:	e592c00c 	ldr	ip, [r2, #12]$/;"	l
e318	Test/a.s	/^    e318:	e3811001 	orr	r1, r1, #1$/;"	l
e31c	Test/a.s	/^    e31c:	e59cb004 	ldr	fp, [ip, #4]$/;"	l
e320	Test/a.s	/^    e320:	e31b0004 	tst	fp, #4$/;"	l
e324	Test/a.s	/^    e324:	1a0003d5 	bne	f280 <_int_malloc+0x1258>$/;"	l
e328	Test/a.s	/^    e328:	e151000b 	cmp	r1, fp$/;"	l
e32c	Test/a.s	/^    e32c:	2a000011 	bcs	e378 <_int_malloc+0x350>$/;"	l
e330	Test/a.s	/^    e330:	e5931014 	ldr	r1, [r3, #20]$/;"	l
e334	Test/a.s	/^    e334:	e5843010 	str	r3, [r4, #16]$/;"	l
e338	Test/a.s	/^    e338:	e5841014 	str	r1, [r4, #20]$/;"	l
e33c	Test/a.s	/^    e33c:	e5814010 	str	r4, [r1, #16]$/;"	l
e340	Test/a.s	/^    e340:	e5834014 	str	r4, [r3, #20]$/;"	l
e344	Test/a.s	/^    e344:	eaffffc4 	b	e25c <_int_malloc+0x234>$/;"	l
e348	Test/a.s	/^    e348:	e2833038 	add	r3, r3, #56	; 0x38$/;"	l
e34c	Test/a.s	/^    e34c:	e58d3018 	str	r3, [sp, #24]$/;"	l
e350	Test/a.s	/^    e350:	e1a034a6 	lsr	r3, r6, #9$/;"	l
e354	Test/a.s	/^    e354:	e58d3024 	str	r3, [sp, #36]	; 0x24$/;"	l
e358	Test/a.s	/^    e358:	eaffff9d 	b	e1d4 <_int_malloc+0x1ac>$/;"	l
e35c	Test/a.s	/^    e35c:	e1a004a1 	lsr	r0, r1, #9$/;"	l
e360	Test/a.s	/^    e360:	e3500014 	cmp	r0, #20$/;"	l
e364	Test/a.s	/^    e364:	8a000017 	bhi	e3c8 <_int_malloc+0x3a0>$/;"	l
e368	Test/a.s	/^    e368:	e1a02080 	lsl	r2, r0, #1$/;"	l
e36c	Test/a.s	/^    e36c:	e28220b2 	add	r2, r2, #178	; 0xb2$/;"	l
e370	Test/a.s	/^    e370:	e280005b 	add	r0, r0, #91	; 0x5b$/;"	l
e374	Test/a.s	/^    e374:	eaffffe1 	b	e300 <_int_malloc+0x2d8>$/;"	l
e378	Test/a.s	/^    e378:	e5932004 	ldr	r2, [r3, #4]$/;"	l
e37c	Test/a.s	/^    e37c:	e3120004 	tst	r2, #4$/;"	l
e380	Test/a.s	/^    e380:	0a000004 	beq	e398 <_int_malloc+0x370>$/;"	l
e384	Test/a.s	/^    e384:	ea0003b8 	b	f26c <_int_malloc+0x1244>$/;"	l
e388	Test/a.s	/^    e388:	e5933010 	ldr	r3, [r3, #16]$/;"	l
e38c	Test/a.s	/^    e38c:	e5932004 	ldr	r2, [r3, #4]$/;"	l
e390	Test/a.s	/^    e390:	e3120004 	tst	r2, #4$/;"	l
e394	Test/a.s	/^    e394:	1a00012b 	bne	e848 <_int_malloc+0x820>$/;"	l
e398	Test/a.s	/^    e398:	e1510002 	cmp	r1, r2$/;"	l
e39c	Test/a.s	/^    e39c:	3afffff9 	bcc	e388 <_int_malloc+0x360>$/;"	l
e3a0	Test/a.s	/^    e3a0:	15932014 	ldrne	r2, [r3, #20]$/;"	l
e3a4	Test/a.s	/^    e3a4:	05932008 	ldreq	r2, [r3, #8]$/;"	l
e3a8	Test/a.s	/^    e3a8:	15842014 	strne	r2, [r4, #20]$/;"	l
e3ac	Test/a.s	/^    e3ac:	15834014 	strne	r4, [r3, #20]$/;"	l
e3b0	Test/a.s	/^    e3b0:	15941014 	ldrne	r1, [r4, #20]$/;"	l
e3b4	Test/a.s	/^    e3b4:	11a02003 	movne	r2, r3$/;"	l
e3b8	Test/a.s	/^    e3b8:	15843010 	strne	r3, [r4, #16]$/;"	l
e3bc	Test/a.s	/^    e3bc:	e592c00c 	ldr	ip, [r2, #12]$/;"	l
e3c0	Test/a.s	/^    e3c0:	15814010 	strne	r4, [r1, #16]$/;"	l
e3c4	Test/a.s	/^    e3c4:	eaffffa4 	b	e25c <_int_malloc+0x234>$/;"	l
e3c8	Test/a.s	/^    e3c8:	e1a00621 	lsr	r0, r1, #12$/;"	l
e3cc	Test/a.s	/^    e3cc:	e350000a 	cmp	r0, #10$/;"	l
e3d0	Test/a.s	/^    e3d0:	8a00002e 	bhi	e490 <_int_malloc+0x468>$/;"	l
e3d4	Test/a.s	/^    e3d4:	e1a02080 	lsl	r2, r0, #1$/;"	l
e3d8	Test/a.s	/^    e3d8:	e28220d8 	add	r2, r2, #216	; 0xd8$/;"	l
e3dc	Test/a.s	/^    e3dc:	e280006e 	add	r0, r0, #110	; 0x6e$/;"	l
e3e0	Test/a.s	/^    e3e0:	eaffffc6 	b	e300 <_int_malloc+0x2d8>$/;"	l
e3e4	Test/a.s	/^    e3e4:	e5952034 	ldr	r2, [r5, #52]	; 0x34$/;"	l
e3e8	Test/a.s	/^    e3e8:	e1520004 	cmp	r2, r4$/;"	l
e3ec	Test/a.s	/^    e3ec:	1affffb7 	bne	e2d0 <_int_malloc+0x2a8>$/;"	l
e3f0	Test/a.s	/^    e3f0:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c$/;"	l
e3f4	Test/a.s	/^    e3f4:	e1510000 	cmp	r1, r0$/;"	l
e3f8	Test/a.s	/^    e3f8:	9affffb4 	bls	e2d0 <_int_malloc+0x2a8>$/;"	l
e3fc	Test/a.s	/^    e3fc:	e1a00001 	mov	r0, r1$/;"	l
e400	Test/a.s	/^    e400:	e1a01002 	mov	r1, r2$/;"	l
e404	Test/a.s	/^    e404:	e0662000 	rsb	r2, r6, r0$/;"	l
e408	Test/a.s	/^    e408:	e1520003 	cmp	r2, r3$/;"	l
e40c	Test/a.s	/^    e40c:	e59f0c48 	ldr	r0, [pc, #3144]	; f05c <_int_malloc+0x1034>$/;"	l
e410	Test/a.s	/^    e410:	e0844006 	add	r4, r4, r6$/;"	l
e414	Test/a.s	/^    e414:	83a03000 	movhi	r3, #0$/;"	l
e418	Test/a.s	/^    e418:	e5854034 	str	r4, [r5, #52]	; 0x34$/;"	l
e41c	Test/a.s	/^    e41c:	85843010 	strhi	r3, [r4, #16]$/;"	l
e420	Test/a.s	/^    e420:	85843014 	strhi	r3, [r4, #20]$/;"	l
e424	Test/a.s	/^    e424:	e1550000 	cmp	r5, r0$/;"	l
e428	Test/a.s	/^    e428:	e5973020 	ldr	r3, [r7, #32]$/;"	l
e42c	Test/a.s	/^    e42c:	e5854038 	str	r4, [r5, #56]	; 0x38$/;"	l
e430	Test/a.s	/^    e430:	e585403c 	str	r4, [r5, #60]	; 0x3c$/;"	l
e434	Test/a.s	/^    e434:	e386c001 	orr	ip, r6, #1$/;"	l
e438	Test/a.s	/^    e438:	13a05004 	movne	r5, #4$/;"	l
e43c	Test/a.s	/^    e43c:	03a05000 	moveq	r5, #0$/;"	l
e440	Test/a.s	/^    e440:	e3820001 	orr	r0, r2, #1$/;"	l
e444	Test/a.s	/^    e444:	e18cc005 	orr	ip, ip, r5$/;"	l
e448	Test/a.s	/^    e448:	e3530000 	cmp	r3, #0$/;"	l
e44c	Test/a.s	/^    e44c:	e581c004 	str	ip, [r1, #4]$/;"	l
e450	Test/a.s	/^    e450:	e584a008 	str	sl, [r4, #8]$/;"	l
e454	Test/a.s	/^    e454:	e584a00c 	str	sl, [r4, #12]$/;"	l
e458	Test/a.s	/^    e458:	e7842002 	str	r2, [r4, r2]$/;"	l
e45c	Test/a.s	/^    e45c:	e2818008 	add	r8, r1, #8$/;"	l
e460	Test/a.s	/^    e460:	e5840004 	str	r0, [r4, #4]$/;"	l
e464	Test/a.s	/^    e464:	0affff31 	beq	e130 <_int_malloc+0x108>$/;"	l
e468	Test/a.s	/^    e468:	e1e01003 	mvn	r1, r3$/;"	l
e46c	Test/a.s	/^    e46c:	e20110ff 	and	r1, r1, #255	; 0xff$/;"	l
e470	Test/a.s	/^    e470:	e59d2010 	ldr	r2, [sp, #16]$/;"	l
e474	Test/a.s	/^    e474:	e1a00008 	mov	r0, r8$/;"	l
e478	Test/a.s	/^    e478:	eb0013d8 	bl	133e0 <memset>$/;"	l
e47c	Test/a.s	/^    e47c:	eaffff2b 	b	e130 <_int_malloc+0x108>$/;"	l
e480	Test/a.s	/^    e480:	e5844014 	str	r4, [r4, #20]$/;"	l
e484	Test/a.s	/^    e484:	e5844010 	str	r4, [r4, #16]$/;"	l
e488	Test/a.s	/^    e488:	e1a0c002 	mov	ip, r2$/;"	l
e48c	Test/a.s	/^    e48c:	eaffff72 	b	e25c <_int_malloc+0x234>$/;"	l
e490	Test/a.s	/^    e490:	e1a007a1 	lsr	r0, r1, #15$/;"	l
e494	Test/a.s	/^    e494:	e3500004 	cmp	r0, #4$/;"	l
e498	Test/a.s	/^    e498:	91a02080 	lslls	r2, r0, #1$/;"	l
e49c	Test/a.s	/^    e49c:	928220ea 	addls	r2, r2, #234	; 0xea$/;"	l
e4a0	Test/a.s	/^    e4a0:	92800077 	addls	r0, r0, #119	; 0x77$/;"	l
e4a4	Test/a.s	/^    e4a4:	9affff95 	bls	e300 <_int_malloc+0x2d8>$/;"	l
e4a8	Test/a.s	/^    e4a8:	e1a00921 	lsr	r0, r1, #18$/;"	l
e4ac	Test/a.s	/^    e4ac:	e3500002 	cmp	r0, #2$/;"	l
e4b0	Test/a.s	/^    e4b0:	91a02080 	lslls	r2, r0, #1$/;"	l
e4b4	Test/a.s	/^    e4b4:	928220f4 	addls	r2, r2, #244	; 0xf4$/;"	l
e4b8	Test/a.s	/^    e4b8:	9280007c 	addls	r0, r0, #124	; 0x7c$/;"	l
e4bc	Test/a.s	/^    e4bc:	83a020f8 	movhi	r2, #248	; 0xf8$/;"	l
e4c0	Test/a.s	/^    e4c0:	83a0007e 	movhi	r0, #126	; 0x7e$/;"	l
e4c4	Test/a.s	/^    e4c4:	eaffff8d 	b	e300 <_int_malloc+0x2d8>$/;"	l
e4c8	Test/a.s	/^    e4c8:	e1560009 	cmp	r6, r9$/;"	l
e4cc	Test/a.s	/^    e4cc:	9a000008 	bls	e4f4 <_int_malloc+0x4cc>$/;"	l
e4d0	Test/a.s	/^    e4d0:	e59d1018 	ldr	r1, [sp, #24]$/;"	l
e4d4	Test/a.s	/^    e4d4:	e0853181 	add	r3, r5, r1, lsl #3$/;"	l
e4d8	Test/a.s	/^    e4d8:	e2833028 	add	r3, r3, #40	; 0x28$/;"	l
e4dc	Test/a.s	/^    e4dc:	e5932008 	ldr	r2, [r3, #8]$/;"	l
e4e0	Test/a.s	/^    e4e0:	e1520003 	cmp	r2, r3$/;"	l
e4e4	Test/a.s	/^    e4e4:	0a000002 	beq	e4f4 <_int_malloc+0x4cc>$/;"	l
e4e8	Test/a.s	/^    e4e8:	e5921004 	ldr	r1, [r2, #4]$/;"	l
e4ec	Test/a.s	/^    e4ec:	e1560001 	cmp	r6, r1$/;"	l
e4f0	Test/a.s	/^    e4f0:	9a0000f2 	bls	e8c0 <_int_malloc+0x898>$/;"	l
e4f4	Test/a.s	/^    e4f4:	e59d3018 	ldr	r3, [sp, #24]$/;"	l
e4f8	Test/a.s	/^    e4f8:	e59d1018 	ldr	r1, [sp, #24]$/;"	l
e4fc	Test/a.s	/^    e4fc:	e2830001 	add	r0, r3, #1$/;"	l
e500	Test/a.s	/^    e500:	e200301f 	and	r3, r0, #31$/;"	l
e504	Test/a.s	/^    e504:	e1a002a0 	lsr	r0, r0, #5$/;"	l
e508	Test/a.s	/^    e508:	e3a02001 	mov	r2, #1$/;"	l
e50c	Test/a.s	/^    e50c:	e280cf43 	add	ip, r0, #268	; 0x10c$/;"	l
e510	Test/a.s	/^    e510:	e1a03312 	lsl	r3, r2, r3$/;"	l
e514	Test/a.s	/^    e514:	e0852181 	add	r2, r5, r1, lsl #3$/;"	l
e518	Test/a.s	/^    e518:	e795110c 	ldr	r1, [r5, ip, lsl #2]$/;"	l
e51c	Test/a.s	/^    e51c:	e2822030 	add	r2, r2, #48	; 0x30$/;"	l
e520	Test/a.s	/^    e520:	e1530001 	cmp	r3, r1$/;"	l
e524	Test/a.s	/^    e524:	93a04000 	movls	r4, #0$/;"	l
e528	Test/a.s	/^    e528:	83a04001 	movhi	r4, #1$/;"	l
e52c	Test/a.s	/^    e52c:	e3530000 	cmp	r3, #0$/;"	l
e530	Test/a.s	/^    e530:	03844001 	orreq	r4, r4, #1$/;"	l
e534	Test/a.s	/^    e534:	e3540000 	cmp	r4, #0$/;"	l
e538	Test/a.s	/^    e538:	0a00000e 	beq	e578 <_int_malloc+0x550>$/;"	l
e53c	Test/a.s	/^    e53c:	e085310c 	add	r3, r5, ip, lsl #2$/;"	l
e540	Test/a.s	/^    e540:	e2800001 	add	r0, r0, #1$/;"	l
e544	Test/a.s	/^    e544:	e3500003 	cmp	r0, #3$/;"	l
e548	Test/a.s	/^    e548:	8a000015 	bhi	e5a4 <_int_malloc+0x57c>$/;"	l
e54c	Test/a.s	/^    e54c:	e5b31004 	ldr	r1, [r3, #4]!$/;"	l
e550	Test/a.s	/^    e550:	e3510000 	cmp	r1, #0$/;"	l
e554	Test/a.s	/^    e554:	0afffff9 	beq	e540 <_int_malloc+0x518>$/;"	l
e558	Test/a.s	/^    e558:	e3a03001 	mov	r3, #1$/;"	l
e55c	Test/a.s	/^    e55c:	e0852400 	add	r2, r5, r0, lsl #8$/;"	l
e560	Test/a.s	/^    e560:	e1130001 	tst	r3, r1$/;"	l
e564	Test/a.s	/^    e564:	e2822028 	add	r2, r2, #40	; 0x28$/;"	l
e568	Test/a.s	/^    e568:	1a000004 	bne	e580 <_int_malloc+0x558>$/;"	l
e56c	Test/a.s	/^    e56c:	e1b03083 	lsls	r3, r3, #1$/;"	l
e570	Test/a.s	/^    e570:	e2822008 	add	r2, r2, #8$/;"	l
e574	Test/a.s	/^    e574:	0a0000b8 	beq	e85c <_int_malloc+0x834>$/;"	l
e578	Test/a.s	/^    e578:	e1130001 	tst	r3, r1$/;"	l
e57c	Test/a.s	/^    e57c:	0afffffa 	beq	e56c <_int_malloc+0x544>$/;"	l
e580	Test/a.s	/^    e580:	e592800c 	ldr	r8, [r2, #12]$/;"	l
e584	Test/a.s	/^    e584:	e1520008 	cmp	r2, r8$/;"	l
e588	Test/a.s	/^    e588:	1a00004f 	bne	e6cc <_int_malloc+0x6a4>$/;"	l
e58c	Test/a.s	/^    e58c:	e1c11003 	bic	r1, r1, r3$/;"	l
e590	Test/a.s	/^    e590:	e280cf43 	add	ip, r0, #268	; 0x10c$/;"	l
e594	Test/a.s	/^    e594:	e2822008 	add	r2, r2, #8$/;"	l
e598	Test/a.s	/^    e598:	e1a03083 	lsl	r3, r3, #1$/;"	l
e59c	Test/a.s	/^    e59c:	e785110c 	str	r1, [r5, ip, lsl #2]$/;"	l
e5a0	Test/a.s	/^    e5a0:	eaffffde 	b	e520 <_int_malloc+0x4f8>$/;"	l
e5a4	Test/a.s	/^    e5a4:	e595b030 	ldr	fp, [r5, #48]	; 0x30$/;"	l
e5a8	Test/a.s	/^    e5a8:	e59d302c 	ldr	r3, [sp, #44]	; 0x2c$/;"	l
e5ac	Test/a.s	/^    e5ac:	e59b2004 	ldr	r2, [fp, #4]$/;"	l
e5b0	Test/a.s	/^    e5b0:	e3c24007 	bic	r4, r2, #7$/;"	l
e5b4	Test/a.s	/^    e5b4:	e1540003 	cmp	r4, r3$/;"	l
e5b8	Test/a.s	/^    e5b8:	2a000153 	bcs	eb0c <_int_malloc+0xae4>$/;"	l
e5bc	Test/a.s	/^    e5bc:	e5953004 	ldr	r3, [r5, #4]$/;"	l
e5c0	Test/a.s	/^    e5c0:	e3130001 	tst	r3, #1$/;"	l
e5c4	Test/a.s	/^    e5c4:	1a0000e9 	bne	e970 <_int_malloc+0x948>$/;"	l
e5c8	Test/a.s	/^    e5c8:	e1a00005 	mov	r0, r5$/;"	l
e5cc	Test/a.s	/^    e5cc:	ebfff9cf 	bl	cd10 <malloc_consolidate>$/;"	l
e5d0	Test/a.s	/^    e5d0:	e1560009 	cmp	r6, r9$/;"	l
e5d4	Test/a.s	/^    e5d4:	9a00001f 	bls	e658 <_int_malloc+0x630>$/;"	l
e5d8	Test/a.s	/^    e5d8:	e59d301c 	ldr	r3, [sp, #28]$/;"	l
e5dc	Test/a.s	/^    e5dc:	e3530026 	cmp	r3, #38	; 0x26$/;"	l
e5e0	Test/a.s	/^    e5e0:	9a000036 	bls	e6c0 <_int_malloc+0x698>$/;"	l
e5e4	Test/a.s	/^    e5e4:	e59d3024 	ldr	r3, [sp, #36]	; 0x24$/;"	l
e5e8	Test/a.s	/^    e5e8:	e3530014 	cmp	r3, #20$/;"	l
e5ec	Test/a.s	/^    e5ec:	9a00008b 	bls	e820 <_int_malloc+0x7f8>$/;"	l
e5f0	Test/a.s	/^    e5f0:	e59d3030 	ldr	r3, [sp, #48]	; 0x30$/;"	l
e5f4	Test/a.s	/^    e5f4:	e353000a 	cmp	r3, #10$/;"	l
e5f8	Test/a.s	/^    e5f8:	9a00009c 	bls	e870 <_int_malloc+0x848>$/;"	l
e5fc	Test/a.s	/^    e5fc:	e59d3028 	ldr	r3, [sp, #40]	; 0x28$/;"	l
e600	Test/a.s	/^    e600:	e3530004 	cmp	r3, #4$/;"	l
e604	Test/a.s	/^    e604:	9a0000a3 	bls	e898 <_int_malloc+0x870>$/;"	l
e608	Test/a.s	/^    e608:	e59d0020 	ldr	r0, [sp, #32]$/;"	l
e60c	Test/a.s	/^    e60c:	e59d3044 	ldr	r3, [sp, #68]	; 0x44$/;"	l
e610	Test/a.s	/^    e610:	e3500002 	cmp	r0, #2$/;"	l
e614	Test/a.s	/^    e614:	83a0307e 	movhi	r3, #126	; 0x7e$/;"	l
e618	Test/a.s	/^    e618:	e58d3018 	str	r3, [sp, #24]$/;"	l
e61c	Test/a.s	/^    e61c:	eaffff08 	b	e244 <_int_malloc+0x21c>$/;"	l
e620	Test/a.s	/^    e620:	e0846006 	add	r6, r4, r6$/;"	l
e624	Test/a.s	/^    e624:	e5963004 	ldr	r3, [r6, #4]$/;"	l
e628	Test/a.s	/^    e628:	e59f2a2c 	ldr	r2, [pc, #2604]	; f05c <_int_malloc+0x1034>$/;"	l
e62c	Test/a.s	/^    e62c:	e3833001 	orr	r3, r3, #1$/;"	l
e630	Test/a.s	/^    e630:	e1550002 	cmp	r5, r2$/;"	l
e634	Test/a.s	/^    e634:	e5863004 	str	r3, [r6, #4]$/;"	l
e638	Test/a.s	/^    e638:	15943004 	ldrne	r3, [r4, #4]$/;"	l
e63c	Test/a.s	/^    e63c:	e2848008 	add	r8, r4, #8$/;"	l
e640	Test/a.s	/^    e640:	13833004 	orrne	r3, r3, #4$/;"	l
e644	Test/a.s	/^    e644:	15843004 	strne	r3, [r4, #4]$/;"	l
e648	Test/a.s	/^    e648:	e5973020 	ldr	r3, [r7, #32]$/;"	l
e64c	Test/a.s	/^    e64c:	e3530000 	cmp	r3, #0$/;"	l
e650	Test/a.s	/^    e650:	0afffeb6 	beq	e130 <_int_malloc+0x108>$/;"	l
e654	Test/a.s	/^    e654:	eaffff83 	b	e468 <_int_malloc+0x440>$/;"	l
e658	Test/a.s	/^    e658:	e59d1014 	ldr	r1, [sp, #20]$/;"	l
e65c	Test/a.s	/^    e65c:	e58d1018 	str	r1, [sp, #24]$/;"	l
e660	Test/a.s	/^    e660:	eafffef7 	b	e244 <_int_malloc+0x21c>$/;"	l
e664	Test/a.s	/^    e664:	e59f3998 	ldr	r3, [pc, #2456]	; f004 <_int_malloc+0xfdc>$/;"	l
e668	Test/a.s	/^    e668:	ebffeb7c 	bl	9460 <__aeabi_read_tp>$/;"	l
e66c	Test/a.s	/^    e66c:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
e670	Test/a.s	/^    e670:	e3a0200c 	mov	r2, #12$/;"	l
e674	Test/a.s	/^    e674:	e7802003 	str	r2, [r0, r3]$/;"	l
e678	Test/a.s	/^    e678:	e3a08000 	mov	r8, #0$/;"	l
e67c	Test/a.s	/^    e67c:	eafffeab 	b	e130 <_int_malloc+0x108>$/;"	l
e680	Test/a.s	/^    e680:	e1a00005 	mov	r0, r5$/;"	l
e684	Test/a.s	/^    e684:	ebfff9a1 	bl	cd10 <malloc_consolidate>$/;"	l
e688	Test/a.s	/^    e688:	eafffeda 	b	e1f8 <_int_malloc+0x1d0>$/;"	l
e68c	Test/a.s	/^    e68c:	e1a03626 	lsr	r3, r6, #12$/;"	l
e690	Test/a.s	/^    e690:	e353000a 	cmp	r3, #10$/;"	l
e694	Test/a.s	/^    e694:	e58d3030 	str	r3, [sp, #48]	; 0x30$/;"	l
e698	Test/a.s	/^    e698:	9a000059 	bls	e804 <_int_malloc+0x7dc>$/;"	l
e69c	Test/a.s	/^    e69c:	e1a037a6 	lsr	r3, r6, #15$/;"	l
e6a0	Test/a.s	/^    e6a0:	e3530004 	cmp	r3, #4$/;"	l
e6a4	Test/a.s	/^    e6a4:	e58d3028 	str	r3, [sp, #40]	; 0x28$/;"	l
e6a8	Test/a.s	/^    e6a8:	8a000073 	bhi	e87c <_int_malloc+0x854>$/;"	l
e6ac	Test/a.s	/^    e6ac:	e2833077 	add	r3, r3, #119	; 0x77$/;"	l
e6b0	Test/a.s	/^    e6b0:	e58d3018 	str	r3, [sp, #24]$/;"	l
e6b4	Test/a.s	/^    e6b4:	e1a03926 	lsr	r3, r6, #18$/;"	l
e6b8	Test/a.s	/^    e6b8:	e58d3020 	str	r3, [sp, #32]$/;"	l
e6bc	Test/a.s	/^    e6bc:	eafffeca 	b	e1ec <_int_malloc+0x1c4>$/;"	l
e6c0	Test/a.s	/^    e6c0:	e59d3034 	ldr	r3, [sp, #52]	; 0x34$/;"	l
e6c4	Test/a.s	/^    e6c4:	e58d3018 	str	r3, [sp, #24]$/;"	l
e6c8	Test/a.s	/^    e6c8:	eafffedd 	b	e244 <_int_malloc+0x21c>$/;"	l
e6cc	Test/a.s	/^    e6cc:	e5981004 	ldr	r1, [r8, #4]$/;"	l
e6d0	Test/a.s	/^    e6d0:	e3c1b007 	bic	fp, r1, #7$/;"	l
e6d4	Test/a.s	/^    e6d4:	e156000b 	cmp	r6, fp$/;"	l
e6d8	Test/a.s	/^    e6d8:	8a0002ed 	bhi	f294 <_int_malloc+0x126c>$/;"	l
e6dc	Test/a.s	/^    e6dc:	e5983008 	ldr	r3, [r8, #8]$/;"	l
e6e0	Test/a.s	/^    e6e0:	e066400b 	rsb	r4, r6, fp$/;"	l
e6e4	Test/a.s	/^    e6e4:	e593000c 	ldr	r0, [r3, #12]$/;"	l
e6e8	Test/a.s	/^    e6e8:	e598200c 	ldr	r2, [r8, #12]$/;"	l
e6ec	Test/a.s	/^    e6ec:	e1580000 	cmp	r8, r0$/;"	l
e6f0	Test/a.s	/^    e6f0:	1a000266 	bne	f090 <_int_malloc+0x1068>$/;"	l
e6f4	Test/a.s	/^    e6f4:	e5920008 	ldr	r0, [r2, #8]$/;"	l
e6f8	Test/a.s	/^    e6f8:	e1580000 	cmp	r8, r0$/;"	l
e6fc	Test/a.s	/^    e6fc:	1a000263 	bne	f090 <_int_malloc+0x1068>$/;"	l
e700	Test/a.s	/^    e700:	e3510c02 	cmp	r1, #512	; 0x200$/;"	l
e704	Test/a.s	/^    e704:	e583200c 	str	r2, [r3, #12]$/;"	l
e708	Test/a.s	/^    e708:	e5823008 	str	r3, [r2, #8]$/;"	l
e70c	Test/a.s	/^    e70c:	3a000013 	bcc	e760 <_int_malloc+0x738>$/;"	l
e710	Test/a.s	/^    e710:	e5982010 	ldr	r2, [r8, #16]$/;"	l
e714	Test/a.s	/^    e714:	e3520000 	cmp	r2, #0$/;"	l
e718	Test/a.s	/^    e718:	0a000010 	beq	e760 <_int_malloc+0x738>$/;"	l
e71c	Test/a.s	/^    e71c:	e5921014 	ldr	r1, [r2, #20]$/;"	l
e720	Test/a.s	/^    e720:	e1580001 	cmp	r8, r1$/;"	l
e724	Test/a.s	/^    e724:	1a0002cb 	bne	f258 <_int_malloc+0x1230>$/;"	l
e728	Test/a.s	/^    e728:	e5981014 	ldr	r1, [r8, #20]$/;"	l
e72c	Test/a.s	/^    e72c:	e5910010 	ldr	r0, [r1, #16]$/;"	l
e730	Test/a.s	/^    e730:	e1580000 	cmp	r8, r0$/;"	l
e734	Test/a.s	/^    e734:	1a0002c2 	bne	f244 <_int_malloc+0x121c>$/;"	l
e738	Test/a.s	/^    e738:	e5930010 	ldr	r0, [r3, #16]$/;"	l
e73c	Test/a.s	/^    e73c:	e3500000 	cmp	r0, #0$/;"	l
e740	Test/a.s	/^    e740:	0a0002b5 	beq	f21c <_int_malloc+0x11f4>$/;"	l
e744	Test/a.s	/^    e744:	e5821014 	str	r1, [r2, #20]$/;"	l
e748	Test/a.s	/^    e748:	e5983014 	ldr	r3, [r8, #20]$/;"	l
e74c	Test/a.s	/^    e74c:	e59f9908 	ldr	r9, [pc, #2312]	; f05c <_int_malloc+0x1034>$/;"	l
e750	Test/a.s	/^    e750:	e5832010 	str	r2, [r3, #16]$/;"	l
e754	Test/a.s	/^    e754:	ea000002 	b	e764 <_int_malloc+0x73c>$/;"	l
e758	Test/a.s	/^    e758:	e5833014 	str	r3, [r3, #20]$/;"	l
e75c	Test/a.s	/^    e75c:	e5833010 	str	r3, [r3, #16]$/;"	l
e760	Test/a.s	/^    e760:	e59f98f4 	ldr	r9, [pc, #2292]	; f05c <_int_malloc+0x1034>$/;"	l
e764	Test/a.s	/^    e764:	e354000f 	cmp	r4, #15$/;"	l
e768	Test/a.s	/^    e768:	9a00002f 	bls	e82c <_int_malloc+0x804>$/;"	l
e76c	Test/a.s	/^    e76c:	e5952038 	ldr	r2, [r5, #56]	; 0x38$/;"	l
e770	Test/a.s	/^    e770:	e0883006 	add	r3, r8, r6$/;"	l
e774	Test/a.s	/^    e774:	e592100c 	ldr	r1, [r2, #12]$/;"	l
e778	Test/a.s	/^    e778:	e15a0001 	cmp	sl, r1$/;"	l
e77c	Test/a.s	/^    e77c:	1a0002a4 	bne	f214 <_int_malloc+0x11ec>$/;"	l
e780	Test/a.s	/^    e780:	e3560c02 	cmp	r6, #512	; 0x200$/;"	l
e784	Test/a.s	/^    e784:	e5832008 	str	r2, [r3, #8]$/;"	l
e788	Test/a.s	/^    e788:	e583a00c 	str	sl, [r3, #12]$/;"	l
e78c	Test/a.s	/^    e78c:	e582300c 	str	r3, [r2, #12]$/;"	l
e790	Test/a.s	/^    e790:	35853034 	strcc	r3, [r5, #52]	; 0x34$/;"	l
e794	Test/a.s	/^    e794:	e3540c02 	cmp	r4, #512	; 0x200$/;"	l
e798	Test/a.s	/^    e798:	23a02000 	movcs	r2, #0$/;"	l
e79c	Test/a.s	/^    e79c:	25832010 	strcs	r2, [r3, #16]$/;"	l
e7a0	Test/a.s	/^    e7a0:	25832014 	strcs	r2, [r3, #20]$/;"	l
e7a4	Test/a.s	/^    e7a4:	e1550009 	cmp	r5, r9$/;"	l
e7a8	Test/a.s	/^    e7a8:	e5853038 	str	r3, [r5, #56]	; 0x38$/;"	l
e7ac	Test/a.s	/^    e7ac:	e3861001 	orr	r1, r6, #1$/;"	l
e7b0	Test/a.s	/^    e7b0:	13a05004 	movne	r5, #4$/;"	l
e7b4	Test/a.s	/^    e7b4:	03a05000 	moveq	r5, #0$/;"	l
e7b8	Test/a.s	/^    e7b8:	e1811005 	orr	r1, r1, r5$/;"	l
e7bc	Test/a.s	/^    e7bc:	e3842001 	orr	r2, r4, #1$/;"	l
e7c0	Test/a.s	/^    e7c0:	e5881004 	str	r1, [r8, #4]$/;"	l
e7c4	Test/a.s	/^    e7c4:	e7834004 	str	r4, [r3, r4]$/;"	l
e7c8	Test/a.s	/^    e7c8:	e5832004 	str	r2, [r3, #4]$/;"	l
e7cc	Test/a.s	/^    e7cc:	eafffe53 	b	e120 <_int_malloc+0xf8>$/;"	l
e7d0	Test/a.s	/^    e7d0:	e1a00005 	mov	r0, r5$/;"	l
e7d4	Test/a.s	/^    e7d4:	ebfff94d 	bl	cd10 <malloc_consolidate>$/;"	l
e7d8	Test/a.s	/^    e7d8:	e1a03326 	lsr	r3, r6, #6$/;"	l
e7dc	Test/a.s	/^    e7dc:	e58d301c 	str	r3, [sp, #28]$/;"	l
e7e0	Test/a.s	/^    e7e0:	e1a034a6 	lsr	r3, r6, #9$/;"	l
e7e4	Test/a.s	/^    e7e4:	e58d3024 	str	r3, [sp, #36]	; 0x24$/;"	l
e7e8	Test/a.s	/^    e7e8:	e1a03626 	lsr	r3, r6, #12$/;"	l
e7ec	Test/a.s	/^    e7ec:	e58d3030 	str	r3, [sp, #48]	; 0x30$/;"	l
e7f0	Test/a.s	/^    e7f0:	e1a037a6 	lsr	r3, r6, #15$/;"	l
e7f4	Test/a.s	/^    e7f4:	e58d3028 	str	r3, [sp, #40]	; 0x28$/;"	l
e7f8	Test/a.s	/^    e7f8:	e1a03926 	lsr	r3, r6, #18$/;"	l
e7fc	Test/a.s	/^    e7fc:	e58d3020 	str	r3, [sp, #32]$/;"	l
e800	Test/a.s	/^    e800:	eafffe7c 	b	e1f8 <_int_malloc+0x1d0>$/;"	l
e804	Test/a.s	/^    e804:	e283306e 	add	r3, r3, #110	; 0x6e$/;"	l
e808	Test/a.s	/^    e808:	e58d3018 	str	r3, [sp, #24]$/;"	l
e80c	Test/a.s	/^    e80c:	e1a037a6 	lsr	r3, r6, #15$/;"	l
e810	Test/a.s	/^    e810:	e58d3028 	str	r3, [sp, #40]	; 0x28$/;"	l
e814	Test/a.s	/^    e814:	e1a03926 	lsr	r3, r6, #18$/;"	l
e818	Test/a.s	/^    e818:	e58d3020 	str	r3, [sp, #32]$/;"	l
e81c	Test/a.s	/^    e81c:	eafffe72 	b	e1ec <_int_malloc+0x1c4>$/;"	l
e820	Test/a.s	/^    e820:	e59d3038 	ldr	r3, [sp, #56]	; 0x38$/;"	l
e824	Test/a.s	/^    e824:	e58d3018 	str	r3, [sp, #24]$/;"	l
e828	Test/a.s	/^    e828:	eafffe85 	b	e244 <_int_malloc+0x21c>$/;"	l
e82c	Test/a.s	/^    e82c:	e088b00b 	add	fp, r8, fp$/;"	l
e830	Test/a.s	/^    e830:	e59b3004 	ldr	r3, [fp, #4]$/;"	l
e834	Test/a.s	/^    e834:	e1550009 	cmp	r5, r9$/;"	l
e838	Test/a.s	/^    e838:	e3833001 	orr	r3, r3, #1$/;"	l
e83c	Test/a.s	/^    e83c:	e58b3004 	str	r3, [fp, #4]$/;"	l
e840	Test/a.s	/^    e840:	1afffe55 	bne	e19c <_int_malloc+0x174>$/;"	l
e844	Test/a.s	/^    e844:	eafffe35 	b	e120 <_int_malloc+0xf8>$/;"	l
e848	Test/a.s	/^    e848:	e59f0824 	ldr	r0, [pc, #2084]	; f074 <_int_malloc+0x104c>$/;"	l
e84c	Test/a.s	/^    e84c:	e59f1830 	ldr	r1, [pc, #2096]	; f084 <_int_malloc+0x105c>$/;"	l
e850	Test/a.s	/^    e850:	e59f27b0 	ldr	r2, [pc, #1968]	; f008 <_int_malloc+0xfe0>$/;"	l
e854	Test/a.s	/^    e854:	e59f3820 	ldr	r3, [pc, #2080]	; f07c <_int_malloc+0x1054>$/;"	l
e858	Test/a.s	/^    e858:	ebfff6bf 	bl	c35c <__malloc_assert>$/;"	l
e85c	Test/a.s	/^    e85c:	e59f07a8 	ldr	r0, [pc, #1960]	; f00c <_int_malloc+0xfe4>$/;"	l
e860	Test/a.s	/^    e860:	e59f181c 	ldr	r1, [pc, #2076]	; f084 <_int_malloc+0x105c>$/;"	l
e864	Test/a.s	/^    e864:	e59f27a4 	ldr	r2, [pc, #1956]	; f010 <_int_malloc+0xfe8>$/;"	l
e868	Test/a.s	/^    e868:	e59f380c 	ldr	r3, [pc, #2060]	; f07c <_int_malloc+0x1054>$/;"	l
e86c	Test/a.s	/^    e86c:	ebfff6ba 	bl	c35c <__malloc_assert>$/;"	l
e870	Test/a.s	/^    e870:	e59d303c 	ldr	r3, [sp, #60]	; 0x3c$/;"	l
e874	Test/a.s	/^    e874:	e58d3018 	str	r3, [sp, #24]$/;"	l
e878	Test/a.s	/^    e878:	eafffe71 	b	e244 <_int_malloc+0x21c>$/;"	l
e87c	Test/a.s	/^    e87c:	e1a03926 	lsr	r3, r6, #18$/;"	l
e880	Test/a.s	/^    e880:	e3530002 	cmp	r3, #2$/;"	l
e884	Test/a.s	/^    e884:	e58d3020 	str	r3, [sp, #32]$/;"	l
e888	Test/a.s	/^    e888:	9283307c 	addls	r3, r3, #124	; 0x7c$/;"	l
e88c	Test/a.s	/^    e88c:	83a0307e 	movhi	r3, #126	; 0x7e$/;"	l
e890	Test/a.s	/^    e890:	e58d3018 	str	r3, [sp, #24]$/;"	l
e894	Test/a.s	/^    e894:	eafffe54 	b	e1ec <_int_malloc+0x1c4>$/;"	l
e898	Test/a.s	/^    e898:	e59d3040 	ldr	r3, [sp, #64]	; 0x40$/;"	l
e89c	Test/a.s	/^    e89c:	e58d3018 	str	r3, [sp, #24]$/;"	l
e8a0	Test/a.s	/^    e8a0:	eafffe67 	b	e244 <_int_malloc+0x21c>$/;"	l
e8a4	Test/a.s	/^    e8a4:	e59f17b0 	ldr	r1, [pc, #1968]	; f05c <_int_malloc+0x1034>$/;"	l
e8a8	Test/a.s	/^    e8a8:	e2842008 	add	r2, r4, #8$/;"	l
e8ac	Test/a.s	/^    e8ac:	e591048c 	ldr	r0, [r1, #1164]	; 0x48c$/;"	l
e8b0	Test/a.s	/^    e8b0:	e59f175c 	ldr	r1, [pc, #1884]	; f014 <_int_malloc+0xfec>$/;"	l
e8b4	Test/a.s	/^    e8b4:	ebfff8e3 	bl	cc48 <malloc_printerr>$/;"	l
e8b8	Test/a.s	/^    e8b8:	e5941004 	ldr	r1, [r4, #4]$/;"	l
e8bc	Test/a.s	/^    e8bc:	eafffe7d 	b	e2b8 <_int_malloc+0x290>$/;"	l
e8c0	Test/a.s	/^    e8c0:	e5928014 	ldr	r8, [r2, #20]$/;"	l
e8c4	Test/a.s	/^    e8c4:	e5982004 	ldr	r2, [r8, #4]$/;"	l
e8c8	Test/a.s	/^    e8c8:	e3c24007 	bic	r4, r2, #7$/;"	l
e8cc	Test/a.s	/^    e8cc:	e1560004 	cmp	r6, r4$/;"	l
e8d0	Test/a.s	/^    e8d0:	9a000004 	bls	e8e8 <_int_malloc+0x8c0>$/;"	l
e8d4	Test/a.s	/^    e8d4:	e5988014 	ldr	r8, [r8, #20]$/;"	l
e8d8	Test/a.s	/^    e8d8:	e5982004 	ldr	r2, [r8, #4]$/;"	l
e8dc	Test/a.s	/^    e8dc:	e3c24007 	bic	r4, r2, #7$/;"	l
e8e0	Test/a.s	/^    e8e0:	e1560004 	cmp	r6, r4$/;"	l
e8e4	Test/a.s	/^    e8e4:	8afffffa 	bhi	e8d4 <_int_malloc+0x8ac>$/;"	l
e8e8	Test/a.s	/^    e8e8:	e593300c 	ldr	r3, [r3, #12]$/;"	l
e8ec	Test/a.s	/^    e8ec:	e1530008 	cmp	r3, r8$/;"	l
e8f0	Test/a.s	/^    e8f0:	e5983008 	ldr	r3, [r8, #8]$/;"	l
e8f4	Test/a.s	/^    e8f4:	0a000003 	beq	e908 <_int_malloc+0x8e0>$/;"	l
e8f8	Test/a.s	/^    e8f8:	e5931004 	ldr	r1, [r3, #4]$/;"	l
e8fc	Test/a.s	/^    e8fc:	e1520001 	cmp	r2, r1$/;"	l
e900	Test/a.s	/^    e900:	01a08003 	moveq	r8, r3$/;"	l
e904	Test/a.s	/^    e904:	05933008 	ldreq	r3, [r3, #8]$/;"	l
e908	Test/a.s	/^    e908:	e593200c 	ldr	r2, [r3, #12]$/;"	l
e90c	Test/a.s	/^    e90c:	e066b004 	rsb	fp, r6, r4$/;"	l
e910	Test/a.s	/^    e910:	e1580002 	cmp	r8, r2$/;"	l
e914	Test/a.s	/^    e914:	e598200c 	ldr	r2, [r8, #12]$/;"	l
e918	Test/a.s	/^    e918:	1a0000b7 	bne	ebfc <_int_malloc+0xbd4>$/;"	l
e91c	Test/a.s	/^    e91c:	e5921008 	ldr	r1, [r2, #8]$/;"	l
e920	Test/a.s	/^    e920:	e1580001 	cmp	r8, r1$/;"	l
e924	Test/a.s	/^    e924:	1a0000b4 	bne	ebfc <_int_malloc+0xbd4>$/;"	l
e928	Test/a.s	/^    e928:	e5981004 	ldr	r1, [r8, #4]$/;"	l
e92c	Test/a.s	/^    e92c:	e583200c 	str	r2, [r3, #12]$/;"	l
e930	Test/a.s	/^    e930:	e3510c02 	cmp	r1, #512	; 0x200$/;"	l
e934	Test/a.s	/^    e934:	e5823008 	str	r3, [r2, #8]$/;"	l
e938	Test/a.s	/^    e938:	3a000002 	bcc	e948 <_int_malloc+0x920>$/;"	l
e93c	Test/a.s	/^    e93c:	e5982010 	ldr	r2, [r8, #16]$/;"	l
e940	Test/a.s	/^    e940:	e3520000 	cmp	r2, #0$/;"	l
e944	Test/a.s	/^    e944:	1a0000bc 	bne	ec3c <_int_malloc+0xc14>$/;"	l
e948	Test/a.s	/^    e948:	e59f970c 	ldr	r9, [pc, #1804]	; f05c <_int_malloc+0x1034>$/;"	l
e94c	Test/a.s	/^    e94c:	e35b000f 	cmp	fp, #15$/;"	l
e950	Test/a.s	/^    e950:	8a0000e4 	bhi	ece8 <_int_malloc+0xcc0>$/;"	l
e954	Test/a.s	/^    e954:	e0884004 	add	r4, r8, r4$/;"	l
e958	Test/a.s	/^    e958:	e5943004 	ldr	r3, [r4, #4]$/;"	l
e95c	Test/a.s	/^    e95c:	e1550009 	cmp	r5, r9$/;"	l
e960	Test/a.s	/^    e960:	e3833001 	orr	r3, r3, #1$/;"	l
e964	Test/a.s	/^    e964:	e5843004 	str	r3, [r4, #4]$/;"	l
e968	Test/a.s	/^    e968:	1afffe0b 	bne	e19c <_int_malloc+0x174>$/;"	l
e96c	Test/a.s	/^    e96c:	eafffdeb 	b	e120 <_int_malloc+0xf8>$/;"	l
e970	Test/a.s	/^    e970:	e59f96e4 	ldr	r9, [pc, #1764]	; f05c <_int_malloc+0x1034>$/;"	l
e974	Test/a.s	/^    e974:	e59f169c 	ldr	r1, [pc, #1692]	; f018 <_int_malloc+0xff0>$/;"	l
e978	Test/a.s	/^    e978:	e599345c 	ldr	r3, [r9, #1116]	; 0x45c$/;"	l
e97c	Test/a.s	/^    e97c:	e5911000 	ldr	r1, [r1]$/;"	l
e980	Test/a.s	/^    e980:	e1560003 	cmp	r6, r3$/;"	l
e984	Test/a.s	/^    e984:	e2413001 	sub	r3, r1, #1$/;"	l
e988	Test/a.s	/^    e988:	e58d101c 	str	r1, [sp, #28]$/;"	l
e98c	Test/a.s	/^    e98c:	e58d3014 	str	r3, [sp, #20]$/;"	l
e990	Test/a.s	/^    e990:	3a00005b 	bcc	eb04 <_int_malloc+0xadc>$/;"	l
e994	Test/a.s	/^    e994:	e5991468 	ldr	r1, [r9, #1128]	; 0x468$/;"	l
e998	Test/a.s	/^    e998:	e599346c 	ldr	r3, [r9, #1132]	; 0x46c$/;"	l
e99c	Test/a.s	/^    e99c:	e1510003 	cmp	r1, r3$/;"	l
e9a0	Test/a.s	/^    e9a0:	aa000057 	bge	eb04 <_int_malloc+0xadc>$/;"	l
e9a4	Test/a.s	/^    e9a4:	e59d001c 	ldr	r0, [sp, #28]$/;"	l
e9a8	Test/a.s	/^    e9a8:	e59d1014 	ldr	r1, [sp, #20]$/;"	l
e9ac	Test/a.s	/^    e9ac:	e280b003 	add	fp, r0, #3$/;"	l
e9b0	Test/a.s	/^    e9b0:	e08bb006 	add	fp, fp, r6$/;"	l
e9b4	Test/a.s	/^    e9b4:	e1cbb001 	bic	fp, fp, r1$/;"	l
e9b8	Test/a.s	/^    e9b8:	e156000b 	cmp	r6, fp$/;"	l
e9bc	Test/a.s	/^    e9bc:	3a0001c6 	bcc	f0dc <_int_malloc+0x10b4>$/;"	l
e9c0	Test/a.s	/^    e9c0:	e595b030 	ldr	fp, [r5, #48]	; 0x30$/;"	l
e9c4	Test/a.s	/^    e9c4:	e3a03001 	mov	r3, #1$/;"	l
e9c8	Test/a.s	/^    e9c8:	e59b2004 	ldr	r2, [fp, #4]$/;"	l
e9cc	Test/a.s	/^    e9cc:	e3c24007 	bic	r4, r2, #7$/;"	l
e9d0	Test/a.s	/^    e9d0:	e08b0004 	add	r0, fp, r4$/;"	l
e9d4	Test/a.s	/^    e9d4:	e15b000a 	cmp	fp, sl$/;"	l
e9d8	Test/a.s	/^    e9d8:	e58d0018 	str	r0, [sp, #24]$/;"	l
e9dc	Test/a.s	/^    e9dc:	0a0001bb 	beq	f0d0 <_int_malloc+0x10a8>$/;"	l
e9e0	Test/a.s	/^    e9e0:	e354000f 	cmp	r4, #15$/;"	l
e9e4	Test/a.s	/^    e9e4:	9a0001b4 	bls	f0bc <_int_malloc+0x1094>$/;"	l
e9e8	Test/a.s	/^    e9e8:	e3120001 	tst	r2, #1$/;"	l
e9ec	Test/a.s	/^    e9ec:	0a0001b2 	beq	f0bc <_int_malloc+0x1094>$/;"	l
e9f0	Test/a.s	/^    e9f0:	e59d1018 	ldr	r1, [sp, #24]$/;"	l
e9f4	Test/a.s	/^    e9f4:	e59d2014 	ldr	r2, [sp, #20]$/;"	l
e9f8	Test/a.s	/^    e9f8:	e1110002 	tst	r1, r2$/;"	l
e9fc	Test/a.s	/^    e9fc:	1a0001ae 	bne	f0bc <_int_malloc+0x1094>$/;"	l
ea00	Test/a.s	/^    ea00:	e59d002c 	ldr	r0, [sp, #44]	; 0x2c$/;"	l
ea04	Test/a.s	/^    ea04:	e1500004 	cmp	r0, r4$/;"	l
ea08	Test/a.s	/^    ea08:	9a0001a6 	bls	f0a8 <_int_malloc+0x1080>$/;"	l
ea0c	Test/a.s	/^    ea0c:	e1550009 	cmp	r5, r9$/;"	l
ea10	Test/a.s	/^    ea10:	0a0000cb 	beq	ed44 <_int_malloc+0xd1c>$/;"	l
ea14	Test/a.s	/^    ea14:	e1a08a2b 	lsr	r8, fp, #20$/;"	l
ea18	Test/a.s	/^    ea18:	e59d202c 	ldr	r2, [sp, #44]	; 0x2c$/;"	l
ea1c	Test/a.s	/^    ea1c:	e1a08a08 	lsl	r8, r8, #20$/;"	l
ea20	Test/a.s	/^    ea20:	e0641002 	rsb	r1, r4, r2$/;"	l
ea24	Test/a.s	/^    ea24:	e5980008 	ldr	r0, [r8, #8]$/;"	l
ea28	Test/a.s	/^    ea28:	e3510000 	cmp	r1, #0$/;"	l
ea2c	Test/a.s	/^    ea2c:	e58d0018 	str	r0, [sp, #24]$/;"	l
ea30	Test/a.s	/^    ea30:	da000046 	ble	eb50 <_int_malloc+0xb28>$/;"	l
ea34	Test/a.s	/^    ea34:	e59f05dc 	ldr	r0, [pc, #1500]	; f018 <_int_malloc+0xff0>$/;"	l
ea38	Test/a.s	/^    ea38:	e5902000 	ldr	r2, [r0]$/;"	l
ea3c	Test/a.s	/^    ea3c:	e2422001 	sub	r2, r2, #1$/;"	l
ea40	Test/a.s	/^    ea40:	e0811002 	add	r1, r1, r2$/;"	l
ea44	Test/a.s	/^    ea44:	e1c12002 	bic	r2, r1, r2$/;"	l
ea48	Test/a.s	/^    ea48:	e59d1018 	ldr	r1, [sp, #24]$/;"	l
ea4c	Test/a.s	/^    ea4c:	e082c001 	add	ip, r2, r1$/;"	l
ea50	Test/a.s	/^    ea50:	e35c0601 	cmp	ip, #1048576	; 0x100000$/;"	l
ea54	Test/a.s	/^    ea54:	8a00003d 	bhi	eb50 <_int_malloc+0xb28>$/;"	l
ea58	Test/a.s	/^    ea58:	e598100c 	ldr	r1, [r8, #12]$/;"	l
ea5c	Test/a.s	/^    ea5c:	e15c0001 	cmp	ip, r1$/;"	l
ea60	Test/a.s	/^    ea60:	91a0300b 	movls	r3, fp$/;"	l
ea64	Test/a.s	/^    ea64:	8a0001d8 	bhi	f1cc <_int_malloc+0x11a4>$/;"	l
ea68	Test/a.s	/^    ea68:	e59d0018 	ldr	r0, [sp, #24]$/;"	l
ea6c	Test/a.s	/^    ea6c:	e5954448 	ldr	r4, [r5, #1096]	; 0x448$/;"	l
ea70	Test/a.s	/^    ea70:	e597a024 	ldr	sl, [r7, #36]	; 0x24$/;"	l
ea74	Test/a.s	/^    ea74:	e088100c 	add	r1, r8, ip$/;"	l
ea78	Test/a.s	/^    ea78:	e060200c 	rsb	r2, r0, ip$/;"	l
ea7c	Test/a.s	/^    ea7c:	e06b1001 	rsb	r1, fp, r1$/;"	l
ea80	Test/a.s	/^    ea80:	e3810001 	orr	r0, r1, #1$/;"	l
ea84	Test/a.s	/^    ea84:	e0821004 	add	r1, r2, r4$/;"	l
ea88	Test/a.s	/^    ea88:	e082200a 	add	r2, r2, sl$/;"	l
ea8c	Test/a.s	/^    ea8c:	e588c008 	str	ip, [r8, #8]$/;"	l
ea90	Test/a.s	/^    ea90:	e5872024 	str	r2, [r7, #36]	; 0x24$/;"	l
ea94	Test/a.s	/^    ea94:	e5851448 	str	r1, [r5, #1096]	; 0x448$/;"	l
ea98	Test/a.s	/^    ea98:	e58b0004 	str	r0, [fp, #4]$/;"	l
ea9c	Test/a.s	/^    ea9c:	e595244c 	ldr	r2, [r5, #1100]	; 0x44c$/;"	l
eaa0	Test/a.s	/^    eaa0:	e1520001 	cmp	r2, r1$/;"	l
eaa4	Test/a.s	/^    eaa4:	e5932004 	ldr	r2, [r3, #4]$/;"	l
eaa8	Test/a.s	/^    eaa8:	3585144c 	strcc	r1, [r5, #1100]	; 0x44c$/;"	l
eaac	Test/a.s	/^    eaac:	e59d102c 	ldr	r1, [sp, #44]	; 0x2c$/;"	l
eab0	Test/a.s	/^    eab0:	e3c22007 	bic	r2, r2, #7$/;"	l
eab4	Test/a.s	/^    eab4:	e1520001 	cmp	r2, r1$/;"	l
eab8	Test/a.s	/^    eab8:	3a0001a5 	bcc	f154 <_int_malloc+0x112c>$/;"	l
eabc	Test/a.s	/^    eabc:	e1550009 	cmp	r5, r9$/;"	l
eac0	Test/a.s	/^    eac0:	e0662002 	rsb	r2, r6, r2$/;"	l
eac4	Test/a.s	/^    eac4:	e3861001 	orr	r1, r6, #1$/;"	l
eac8	Test/a.s	/^    eac8:	13a09004 	movne	r9, #4$/;"	l
eacc	Test/a.s	/^    eacc:	03a09000 	moveq	r9, #0$/;"	l
ead0	Test/a.s	/^    ead0:	e0836006 	add	r6, r3, r6$/;"	l
ead4	Test/a.s	/^    ead4:	e3822001 	orr	r2, r2, #1$/;"	l
ead8	Test/a.s	/^    ead8:	e1811009 	orr	r1, r1, r9$/;"	l
eadc	Test/a.s	/^    eadc:	e5856030 	str	r6, [r5, #48]	; 0x30$/;"	l
eae0	Test/a.s	/^    eae0:	e2838008 	add	r8, r3, #8$/;"	l
eae4	Test/a.s	/^    eae4:	e5831004 	str	r1, [r3, #4]$/;"	l
eae8	Test/a.s	/^    eae8:	e5862004 	str	r2, [r6, #4]$/;"	l
eaec	Test/a.s	/^    eaec:	e3580000 	cmp	r8, #0$/;"	l
eaf0	Test/a.s	/^    eaf0:	0afffd8e 	beq	e130 <_int_malloc+0x108>$/;"	l
eaf4	Test/a.s	/^    eaf4:	e5973020 	ldr	r3, [r7, #32]$/;"	l
eaf8	Test/a.s	/^    eaf8:	e3530000 	cmp	r3, #0$/;"	l
eafc	Test/a.s	/^    eafc:	0afffd8b 	beq	e130 <_int_malloc+0x108>$/;"	l
eb00	Test/a.s	/^    eb00:	eafffe58 	b	e468 <_int_malloc+0x440>$/;"	l
eb04	Test/a.s	/^    eb04:	e3a03000 	mov	r3, #0$/;"	l
eb08	Test/a.s	/^    eb08:	eaffffb0 	b	e9d0 <_int_malloc+0x9a8>$/;"	l
eb0c	Test/a.s	/^    eb0c:	e59f1548 	ldr	r1, [pc, #1352]	; f05c <_int_malloc+0x1034>$/;"	l
eb10	Test/a.s	/^    eb10:	e5973020 	ldr	r3, [r7, #32]$/;"	l
eb14	Test/a.s	/^    eb14:	e1550001 	cmp	r5, r1$/;"	l
eb18	Test/a.s	/^    eb18:	e0662004 	rsb	r2, r6, r4$/;"	l
eb1c	Test/a.s	/^    eb1c:	13a01004 	movne	r1, #4$/;"	l
eb20	Test/a.s	/^    eb20:	03a01000 	moveq	r1, #0$/;"	l
eb24	Test/a.s	/^    eb24:	e3860001 	orr	r0, r6, #1$/;"	l
eb28	Test/a.s	/^    eb28:	e3822001 	orr	r2, r2, #1$/;"	l
eb2c	Test/a.s	/^    eb2c:	e08b6006 	add	r6, fp, r6$/;"	l
eb30	Test/a.s	/^    eb30:	e1801001 	orr	r1, r0, r1$/;"	l
eb34	Test/a.s	/^    eb34:	e3530000 	cmp	r3, #0$/;"	l
eb38	Test/a.s	/^    eb38:	e5856030 	str	r6, [r5, #48]	; 0x30$/;"	l
eb3c	Test/a.s	/^    eb3c:	e28b8008 	add	r8, fp, #8$/;"	l
eb40	Test/a.s	/^    eb40:	e58b1004 	str	r1, [fp, #4]$/;"	l
eb44	Test/a.s	/^    eb44:	e5862004 	str	r2, [r6, #4]$/;"	l
eb48	Test/a.s	/^    eb48:	0afffd78 	beq	e130 <_int_malloc+0x108>$/;"	l
eb4c	Test/a.s	/^    eb4c:	eafffe45 	b	e468 <_int_malloc+0x440>$/;"	l
eb50	Test/a.s	/^    eb50:	e5991458 	ldr	r1, [r9, #1112]	; 0x458$/;"	l
eb54	Test/a.s	/^    eb54:	e2860020 	add	r0, r6, #32$/;"	l
eb58	Test/a.s	/^    eb58:	e58d3008 	str	r3, [sp, #8]$/;"	l
eb5c	Test/a.s	/^    eb5c:	ebfff61b 	bl	c3d0 <new_heap>$/;"	l
eb60	Test/a.s	/^    eb60:	e3500000 	cmp	r0, #0$/;"	l
eb64	Test/a.s	/^    eb64:	e59d3008 	ldr	r3, [sp, #8]$/;"	l
eb68	Test/a.s	/^    eb68:	0a000042 	beq	ec78 <_int_malloc+0xc50>$/;"	l
eb6c	Test/a.s	/^    eb6c:	e590a008 	ldr	sl, [r0, #8]$/;"	l
eb70	Test/a.s	/^    eb70:	e5951448 	ldr	r1, [r5, #1096]	; 0x448$/;"	l
eb74	Test/a.s	/^    eb74:	e5973024 	ldr	r3, [r7, #36]	; 0x24$/;"	l
eb78	Test/a.s	/^    eb78:	e2444010 	sub	r4, r4, #16$/;"	l
eb7c	Test/a.s	/^    eb7c:	e24a2010 	sub	r2, sl, #16$/;"	l
eb80	Test/a.s	/^    eb80:	e284c008 	add	ip, r4, #8$/;"	l
eb84	Test/a.s	/^    eb84:	e3822001 	orr	r2, r2, #1$/;"	l
eb88	Test/a.s	/^    eb88:	e08a1001 	add	r1, sl, r1$/;"	l
eb8c	Test/a.s	/^    eb8c:	e083a00a 	add	sl, r3, sl$/;"	l
eb90	Test/a.s	/^    eb90:	e2803010 	add	r3, r0, #16$/;"	l
eb94	Test/a.s	/^    eb94:	e8800120 	stm	r0, {r5, r8}$/;"	l
eb98	Test/a.s	/^    eb98:	e354000f 	cmp	r4, #15$/;"	l
eb9c	Test/a.s	/^    eb9c:	e5851448 	str	r1, [r5, #1096]	; 0x448$/;"	l
eba0	Test/a.s	/^    eba0:	e5853030 	str	r3, [r5, #48]	; 0x30$/;"	l
eba4	Test/a.s	/^    eba4:	e08b800c 	add	r8, fp, ip$/;"	l
eba8	Test/a.s	/^    eba8:	e5802014 	str	r2, [r0, #20]$/;"	l
ebac	Test/a.s	/^    ebac:	e3a02001 	mov	r2, #1$/;"	l
ebb0	Test/a.s	/^    ebb0:	e5882004 	str	r2, [r8, #4]$/;"	l
ebb4	Test/a.s	/^    ebb4:	938c2001 	orrls	r2, ip, #1$/;"	l
ebb8	Test/a.s	/^    ebb8:	e587a024 	str	sl, [r7, #36]	; 0x24$/;"	l
ebbc	Test/a.s	/^    ebbc:	978bc00c 	strls	ip, [fp, ip]$/;"	l
ebc0	Test/a.s	/^    ebc0:	958b2004 	strls	r2, [fp, #4]$/;"	l
ebc4	Test/a.s	/^    ebc4:	9affffb4 	bls	ea9c <_int_malloc+0xa74>$/;"	l
ebc8	Test/a.s	/^    ebc8:	e08b1004 	add	r1, fp, r4$/;"	l
ebcc	Test/a.s	/^    ebcc:	e3a03008 	mov	r3, #8$/;"	l
ebd0	Test/a.s	/^    ebd0:	e3a00009 	mov	r0, #9$/;"	l
ebd4	Test/a.s	/^    ebd4:	e3844005 	orr	r4, r4, #5$/;"	l
ebd8	Test/a.s	/^    ebd8:	e5810004 	str	r0, [r1, #4]$/;"	l
ebdc	Test/a.s	/^    ebdc:	e78b300c 	str	r3, [fp, ip]$/;"	l
ebe0	Test/a.s	/^    ebe0:	e1a0100b 	mov	r1, fp$/;"	l
ebe4	Test/a.s	/^    ebe4:	e58b4004 	str	r4, [fp, #4]$/;"	l
ebe8	Test/a.s	/^    ebe8:	e1a00005 	mov	r0, r5$/;"	l
ebec	Test/a.s	/^    ebec:	ebfff9f0 	bl	d3b4 <_int_free>$/;"	l
ebf0	Test/a.s	/^    ebf0:	e5951448 	ldr	r1, [r5, #1096]	; 0x448$/;"	l
ebf4	Test/a.s	/^    ebf4:	e5953030 	ldr	r3, [r5, #48]	; 0x30$/;"	l
ebf8	Test/a.s	/^    ebf8:	eaffffa7 	b	ea9c <_int_malloc+0xa74>$/;"	l
ebfc	Test/a.s	/^    ebfc:	e59f9458 	ldr	r9, [pc, #1112]	; f05c <_int_malloc+0x1034>$/;"	l
ec00	Test/a.s	/^    ec00:	e59f1430 	ldr	r1, [pc, #1072]	; f038 <_int_malloc+0x1010>$/;"	l
ec04	Test/a.s	/^    ec04:	e599048c 	ldr	r0, [r9, #1164]	; 0x48c$/;"	l
ec08	Test/a.s	/^    ec08:	e1a02008 	mov	r2, r8$/;"	l
ec0c	Test/a.s	/^    ec0c:	ebfff80d 	bl	cc48 <malloc_printerr>$/;"	l
ec10	Test/a.s	/^    ec10:	eaffff4d 	b	e94c <_int_malloc+0x924>$/;"	l
ec14	Test/a.s	/^    ec14:	e59f1400 	ldr	r1, [pc, #1024]	; f01c <_int_malloc+0xff4>$/;"	l
ec18	Test/a.s	/^    ec18:	e59f943c 	ldr	r9, [pc, #1084]	; f05c <_int_malloc+0x1034>$/;"	l
ec1c	Test/a.s	/^    ec1c:	e2882008 	add	r2, r8, #8$/;"	l
ec20	Test/a.s	/^    ec20:	e599048c 	ldr	r0, [r9, #1164]	; 0x48c$/;"	l
ec24	Test/a.s	/^    ec24:	ebfff807 	bl	cc48 <malloc_printerr>$/;"	l
ec28	Test/a.s	/^    ec28:	e3a08000 	mov	r8, #0$/;"	l
ec2c	Test/a.s	/^    ec2c:	eafffd3f 	b	e130 <_int_malloc+0x108>$/;"	l
ec30	Test/a.s	/^    ec30:	e59f13e8 	ldr	r1, [pc, #1000]	; f020 <_int_malloc+0xff8>$/;"	l
ec34	Test/a.s	/^    ec34:	e59f9420 	ldr	r9, [pc, #1056]	; f05c <_int_malloc+0x1034>$/;"	l
ec38	Test/a.s	/^    ec38:	eafffff7 	b	ec1c <_int_malloc+0xbf4>$/;"	l
ec3c	Test/a.s	/^    ec3c:	e5921014 	ldr	r1, [r2, #20]$/;"	l
ec40	Test/a.s	/^    ec40:	e1510008 	cmp	r1, r8$/;"	l
ec44	Test/a.s	/^    ec44:	1a00001f 	bne	ecc8 <_int_malloc+0xca0>$/;"	l
ec48	Test/a.s	/^    ec48:	e5981014 	ldr	r1, [r8, #20]$/;"	l
ec4c	Test/a.s	/^    ec4c:	e5910010 	ldr	r0, [r1, #16]$/;"	l
ec50	Test/a.s	/^    ec50:	e1580000 	cmp	r8, r0$/;"	l
ec54	Test/a.s	/^    ec54:	1a000016 	bne	ecb4 <_int_malloc+0xc8c>$/;"	l
ec58	Test/a.s	/^    ec58:	e5930010 	ldr	r0, [r3, #16]$/;"	l
ec5c	Test/a.s	/^    ec5c:	e3500000 	cmp	r0, #0$/;"	l
ec60	Test/a.s	/^    ec60:	0a000009 	beq	ec8c <_int_malloc+0xc64>$/;"	l
ec64	Test/a.s	/^    ec64:	e5821014 	str	r1, [r2, #20]$/;"	l
ec68	Test/a.s	/^    ec68:	e5983014 	ldr	r3, [r8, #20]$/;"	l
ec6c	Test/a.s	/^    ec6c:	e59f93e8 	ldr	r9, [pc, #1000]	; f05c <_int_malloc+0x1034>$/;"	l
ec70	Test/a.s	/^    ec70:	e5832010 	str	r2, [r3, #16]$/;"	l
ec74	Test/a.s	/^    ec74:	eaffff34 	b	e94c <_int_malloc+0x924>$/;"	l
ec78	Test/a.s	/^    ec78:	e3530000 	cmp	r3, #0$/;"	l
ec7c	Test/a.s	/^    ec7c:	0affff48 	beq	e9a4 <_int_malloc+0x97c>$/;"	l
ec80	Test/a.s	/^    ec80:	e5951448 	ldr	r1, [r5, #1096]	; 0x448$/;"	l
ec84	Test/a.s	/^    ec84:	e5953030 	ldr	r3, [r5, #48]	; 0x30$/;"	l
ec88	Test/a.s	/^    ec88:	eaffff83 	b	ea9c <_int_malloc+0xa74>$/;"	l
ec8c	Test/a.s	/^    ec8c:	e1520008 	cmp	r2, r8$/;"	l
ec90	Test/a.s	/^    ec90:	0a000011 	beq	ecdc <_int_malloc+0xcb4>$/;"	l
ec94	Test/a.s	/^    ec94:	e5832010 	str	r2, [r3, #16]$/;"	l
ec98	Test/a.s	/^    ec98:	e5982010 	ldr	r2, [r8, #16]$/;"	l
ec9c	Test/a.s	/^    ec9c:	e5831014 	str	r1, [r3, #20]$/;"	l
eca0	Test/a.s	/^    eca0:	e5823014 	str	r3, [r2, #20]$/;"	l
eca4	Test/a.s	/^    eca4:	e5982014 	ldr	r2, [r8, #20]$/;"	l
eca8	Test/a.s	/^    eca8:	e59f93ac 	ldr	r9, [pc, #940]	; f05c <_int_malloc+0x1034>$/;"	l
ecac	Test/a.s	/^    ecac:	e5823010 	str	r3, [r2, #16]$/;"	l
ecb0	Test/a.s	/^    ecb0:	eaffff25 	b	e94c <_int_malloc+0x924>$/;"	l
ecb4	Test/a.s	/^    ecb4:	e59f03a4 	ldr	r0, [pc, #932]	; f060 <_int_malloc+0x1038>$/;"	l
ecb8	Test/a.s	/^    ecb8:	e59f13c4 	ldr	r1, [pc, #964]	; f084 <_int_malloc+0x105c>$/;"	l
ecbc	Test/a.s	/^    ecbc:	e59f2360 	ldr	r2, [pc, #864]	; f024 <_int_malloc+0xffc>$/;"	l
ecc0	Test/a.s	/^    ecc0:	e59f33b4 	ldr	r3, [pc, #948]	; f07c <_int_malloc+0x1054>$/;"	l
ecc4	Test/a.s	/^    ecc4:	ebfff5a4 	bl	c35c <__malloc_assert>$/;"	l
ecc8	Test/a.s	/^    ecc8:	e59f0398 	ldr	r0, [pc, #920]	; f068 <_int_malloc+0x1040>$/;"	l
eccc	Test/a.s	/^    eccc:	e59f13b0 	ldr	r1, [pc, #944]	; f084 <_int_malloc+0x105c>$/;"	l
ecd0	Test/a.s	/^    ecd0:	e59f234c 	ldr	r2, [pc, #844]	; f024 <_int_malloc+0xffc>$/;"	l
ecd4	Test/a.s	/^    ecd4:	e59f33a0 	ldr	r3, [pc, #928]	; f07c <_int_malloc+0x1054>$/;"	l
ecd8	Test/a.s	/^    ecd8:	ebfff59f 	bl	c35c <__malloc_assert>$/;"	l
ecdc	Test/a.s	/^    ecdc:	e5833014 	str	r3, [r3, #20]$/;"	l
ece0	Test/a.s	/^    ece0:	e5833010 	str	r3, [r3, #16]$/;"	l
ece4	Test/a.s	/^    ece4:	eaffff17 	b	e948 <_int_malloc+0x920>$/;"	l
ece8	Test/a.s	/^    ece8:	e5952038 	ldr	r2, [r5, #56]	; 0x38$/;"	l
ecec	Test/a.s	/^    ecec:	e0883006 	add	r3, r8, r6$/;"	l
ecf0	Test/a.s	/^    ecf0:	e592100c 	ldr	r1, [r2, #12]$/;"	l
ecf4	Test/a.s	/^    ecf4:	e15a0001 	cmp	sl, r1$/;"	l
ecf8	Test/a.s	/^    ecf8:	1a00011c 	bne	f170 <_int_malloc+0x1148>$/;"	l
ecfc	Test/a.s	/^    ecfc:	e35b0c02 	cmp	fp, #512	; 0x200$/;"	l
ed00	Test/a.s	/^    ed00:	e5832008 	str	r2, [r3, #8]$/;"	l
ed04	Test/a.s	/^    ed04:	e583a00c 	str	sl, [r3, #12]$/;"	l
ed08	Test/a.s	/^    ed08:	e582300c 	str	r3, [r2, #12]$/;"	l
ed0c	Test/a.s	/^    ed0c:	23a02000 	movcs	r2, #0$/;"	l
ed10	Test/a.s	/^    ed10:	25832010 	strcs	r2, [r3, #16]$/;"	l
ed14	Test/a.s	/^    ed14:	25832014 	strcs	r2, [r3, #20]$/;"	l
ed18	Test/a.s	/^    ed18:	e1550009 	cmp	r5, r9$/;"	l
ed1c	Test/a.s	/^    ed1c:	e5853038 	str	r3, [r5, #56]	; 0x38$/;"	l
ed20	Test/a.s	/^    ed20:	e3861001 	orr	r1, r6, #1$/;"	l
ed24	Test/a.s	/^    ed24:	13a05004 	movne	r5, #4$/;"	l
ed28	Test/a.s	/^    ed28:	03a05000 	moveq	r5, #0$/;"	l
ed2c	Test/a.s	/^    ed2c:	e1811005 	orr	r1, r1, r5$/;"	l
ed30	Test/a.s	/^    ed30:	e38b2001 	orr	r2, fp, #1$/;"	l
ed34	Test/a.s	/^    ed34:	e5881004 	str	r1, [r8, #4]$/;"	l
ed38	Test/a.s	/^    ed38:	e783b00b 	str	fp, [r3, fp]$/;"	l
ed3c	Test/a.s	/^    ed3c:	e5832004 	str	r2, [r3, #4]$/;"	l
ed40	Test/a.s	/^    ed40:	eafffcf6 	b	e120 <_int_malloc+0xf8>$/;"	l
ed44	Test/a.s	/^    ed44:	e5953458 	ldr	r3, [r5, #1112]	; 0x458$/;"	l
ed48	Test/a.s	/^    ed48:	e5952004 	ldr	r2, [r5, #4]$/;"	l
ed4c	Test/a.s	/^    ed4c:	e2833010 	add	r3, r3, #16$/;"	l
ed50	Test/a.s	/^    ed50:	e2122002 	ands	r2, r2, #2$/;"	l
ed54	Test/a.s	/^    ed54:	e0833006 	add	r3, r3, r6$/;"	l
ed58	Test/a.s	/^    ed58:	e59d1014 	ldr	r1, [sp, #20]$/;"	l
ed5c	Test/a.s	/^    ed5c:	00643003 	rsbeq	r3, r4, r3$/;"	l
ed60	Test/a.s	/^    ed60:	e0833001 	add	r3, r3, r1$/;"	l
ed64	Test/a.s	/^    ed64:	e1e00001 	mvn	r0, r1$/;"	l
ed68	Test/a.s	/^    ed68:	e003a000 	and	sl, r3, r0$/;"	l
ed6c	Test/a.s	/^    ed6c:	e35a0000 	cmp	sl, #0$/;"	l
ed70	Test/a.s	/^    ed70:	e58d001c 	str	r0, [sp, #28]$/;"	l
ed74	Test/a.s	/^    ed74:	e1a0300a 	mov	r3, sl$/;"	l
ed78	Test/a.s	/^    ed78:	da000023 	ble	ee0c <_int_malloc+0xde4>$/;"	l
ed7c	Test/a.s	/^    ed7c:	e5992488 	ldr	r2, [r9, #1160]	; 0x488$/;"	l
ed80	Test/a.s	/^    ed80:	e1a0000a 	mov	r0, sl$/;"	l
ed84	Test/a.s	/^    ed84:	e58da008 	str	sl, [sp, #8]$/;"	l
ed88	Test/a.s	/^    ed88:	e12fff32 	blx	r2$/;"	l
ed8c	Test/a.s	/^    ed8c:	e2508000 	subs	r8, r0, #0$/;"	l
ed90	Test/a.s	/^    ed90:	e59f22c4 	ldr	r2, [pc, #708]	; f05c <_int_malloc+0x1034>$/;"	l
ed94	Test/a.s	/^    ed94:	e59d3008 	ldr	r3, [sp, #8]$/;"	l
ed98	Test/a.s	/^    ed98:	0a000019 	beq	ee04 <_int_malloc+0xddc>$/;"	l
ed9c	Test/a.s	/^    ed9c:	e59f3284 	ldr	r3, [pc, #644]	; f028 <_int_malloc+0x1000>$/;"	l
eda0	Test/a.s	/^    eda0:	e5933000 	ldr	r3, [r3]$/;"	l
eda4	Test/a.s	/^    eda4:	e3530000 	cmp	r3, #0$/;"	l
eda8	Test/a.s	/^    eda8:	0a000000 	beq	edb0 <_int_malloc+0xd88>$/;"	l
edac	Test/a.s	/^    edac:	e12fff33 	blx	r3$/;"	l
edb0	Test/a.s	/^    edb0:	e3a0c001 	mov	ip, #1$/;"	l
edb4	Test/a.s	/^    edb4:	e3a02000 	mov	r2, #0$/;"	l
edb8	Test/a.s	/^    edb8:	e5991484 	ldr	r1, [r9, #1156]	; 0x484$/;"	l
edbc	Test/a.s	/^    edbc:	e59f3298 	ldr	r3, [pc, #664]	; f05c <_int_malloc+0x1034>$/;"	l
edc0	Test/a.s	/^    edc0:	e59d0018 	ldr	r0, [sp, #24]$/;"	l
edc4	Test/a.s	/^    edc4:	e3510000 	cmp	r1, #0$/;"	l
edc8	Test/a.s	/^    edc8:	e5991448 	ldr	r1, [r9, #1096]	; 0x448$/;"	l
edcc	Test/a.s	/^    edcc:	05838484 	streq	r8, [r3, #1156]	; 0x484$/;"	l
edd0	Test/a.s	/^    edd0:	e1500008 	cmp	r0, r8$/;"	l
edd4	Test/a.s	/^    edd4:	13a03000 	movne	r3, #0$/;"	l
edd8	Test/a.s	/^    edd8:	020c3001 	andeq	r3, ip, #1$/;"	l
eddc	Test/a.s	/^    eddc:	e08a1001 	add	r1, sl, r1$/;"	l
ede0	Test/a.s	/^    ede0:	e3530000 	cmp	r3, #0$/;"	l
ede4	Test/a.s	/^    ede4:	e5891448 	str	r1, [r9, #1096]	; 0x448$/;"	l
ede8	Test/a.s	/^    ede8:	e59f326c 	ldr	r3, [pc, #620]	; f05c <_int_malloc+0x1034>$/;"	l
edec	Test/a.s	/^    edec:	0a000014 	beq	ee44 <_int_malloc+0xe1c>$/;"	l
edf0	Test/a.s	/^    edf0:	e08a2004 	add	r2, sl, r4$/;"	l
edf4	Test/a.s	/^    edf4:	e3822001 	orr	r2, r2, #1$/;"	l
edf8	Test/a.s	/^    edf8:	e58b2004 	str	r2, [fp, #4]$/;"	l
edfc	Test/a.s	/^    edfc:	e5933030 	ldr	r3, [r3, #48]	; 0x30$/;"	l
ee00	Test/a.s	/^    ee00:	eaffff25 	b	ea9c <_int_malloc+0xa74>$/;"	l
ee04	Test/a.s	/^    ee04:	e5922004 	ldr	r2, [r2, #4]$/;"	l
ee08	Test/a.s	/^    ee08:	e2022002 	and	r2, r2, #2$/;"	l
ee0c	Test/a.s	/^    ee0c:	e3520000 	cmp	r2, #0$/;"	l
ee10	Test/a.s	/^    ee10:	059d1014 	ldreq	r1, [sp, #20]$/;"	l
ee14	Test/a.s	/^    ee14:	059d201c 	ldreq	r2, [sp, #28]$/;"	l
ee18	Test/a.s	/^    ee18:	00843001 	addeq	r3, r4, r1$/;"	l
ee1c	Test/a.s	/^    ee1c:	0083300a 	addeq	r3, r3, sl$/;"	l
ee20	Test/a.s	/^    ee20:	00033002 	andeq	r3, r3, r2$/;"	l
ee24	Test/a.s	/^    ee24:	e3530601 	cmp	r3, #1048576	; 0x100000$/;"	l
ee28	Test/a.s	/^    ee28:	21a0a003 	movcs	sl, r3$/;"	l
ee2c	Test/a.s	/^    ee2c:	33a0a601 	movcc	sl, #1048576	; 0x100000$/;"	l
ee30	Test/a.s	/^    ee30:	e156000a 	cmp	r6, sl$/;"	l
ee34	Test/a.s	/^    ee34:	3a0000cf 	bcc	f178 <_int_malloc+0x1150>$/;"	l
ee38	Test/a.s	/^    ee38:	e5991448 	ldr	r1, [r9, #1096]	; 0x448$/;"	l
ee3c	Test/a.s	/^    ee3c:	e5993030 	ldr	r3, [r9, #48]	; 0x30$/;"	l
ee40	Test/a.s	/^    ee40:	eaffff15 	b	ea9c <_int_malloc+0xa74>$/;"	l
ee44	Test/a.s	/^    ee44:	e5930004 	ldr	r0, [r3, #4]$/;"	l
ee48	Test/a.s	/^    ee48:	e3100002 	tst	r0, #2$/;"	l
ee4c	Test/a.s	/^    ee4c:	1a00005d 	bne	efc8 <_int_malloc+0xfa0>$/;"	l
ee50	Test/a.s	/^    ee50:	e59d0018 	ldr	r0, [sp, #24]$/;"	l
ee54	Test/a.s	/^    ee54:	e2942000 	adds	r2, r4, #0$/;"	l
ee58	Test/a.s	/^    ee58:	13a02001 	movne	r2, #1$/;"	l
ee5c	Test/a.s	/^    ee5c:	e3540000 	cmp	r4, #0$/;"	l
ee60	Test/a.s	/^    ee60:	11500008 	cmpne	r0, r8$/;"	l
ee64	Test/a.s	/^    ee64:	8a00004e 	bhi	efa4 <_int_malloc+0xf7c>$/;"	l
ee68	Test/a.s	/^    ee68:	e3520000 	cmp	r2, #0$/;"	l
ee6c	Test/a.s	/^    ee6c:	159d0018 	ldrne	r0, [sp, #24]$/;"	l
ee70	Test/a.s	/^    ee70:	10602008 	rsbne	r2, r0, r8$/;"	l
ee74	Test/a.s	/^    ee74:	10821001 	addne	r1, r2, r1$/;"	l
ee78	Test/a.s	/^    ee78:	15831448 	strne	r1, [r3, #1096]	; 0x448$/;"	l
ee7c	Test/a.s	/^    ee7c:	e2182007 	ands	r2, r8, #7$/;"	l
ee80	Test/a.s	/^    ee80:	12622008 	rsbne	r2, r2, #8$/;"	l
ee84	Test/a.s	/^    ee84:	10883002 	addne	r3, r8, r2$/;"	l
ee88	Test/a.s	/^    ee88:	e0822004 	add	r2, r2, r4$/;"	l
ee8c	Test/a.s	/^    ee8c:	e082a00a 	add	sl, r2, sl$/;"	l
ee90	Test/a.s	/^    ee90:	e59d0014 	ldr	r0, [sp, #20]$/;"	l
ee94	Test/a.s	/^    ee94:	01a03008 	moveq	r3, r8$/;"	l
ee98	Test/a.s	/^    ee98:	e088800a 	add	r8, r8, sl$/;"	l
ee9c	Test/a.s	/^    ee9c:	e0881000 	add	r1, r8, r0$/;"	l
eea0	Test/a.s	/^    eea0:	e59d001c 	ldr	r0, [sp, #28]$/;"	l
eea4	Test/a.s	/^    eea4:	e0682002 	rsb	r2, r8, r2$/;"	l
eea8	Test/a.s	/^    eea8:	e0011000 	and	r1, r1, r0$/;"	l
eeac	Test/a.s	/^    eeac:	e082a001 	add	sl, r2, r1$/;"	l
eeb0	Test/a.s	/^    eeb0:	e35a0000 	cmp	sl, #0$/;"	l
eeb4	Test/a.s	/^    eeb4:	e1a0800a 	mov	r8, sl$/;"	l
eeb8	Test/a.s	/^    eeb8:	ba000034 	blt	ef90 <_int_malloc+0xf68>$/;"	l
eebc	Test/a.s	/^    eebc:	e5992488 	ldr	r2, [r9, #1160]	; 0x488$/;"	l
eec0	Test/a.s	/^    eec0:	e1a0000a 	mov	r0, sl$/;"	l
eec4	Test/a.s	/^    eec4:	e58d3008 	str	r3, [sp, #8]$/;"	l
eec8	Test/a.s	/^    eec8:	e12fff32 	blx	r2$/;"	l
eecc	Test/a.s	/^    eecc:	e2502000 	subs	r2, r0, #0$/;"	l
eed0	Test/a.s	/^    eed0:	e59f1184 	ldr	r1, [pc, #388]	; f05c <_int_malloc+0x1034>$/;"	l
eed4	Test/a.s	/^    eed4:	e59d3008 	ldr	r3, [sp, #8]$/;"	l
eed8	Test/a.s	/^    eed8:	0a000023 	beq	ef6c <_int_malloc+0xf44>$/;"	l
eedc	Test/a.s	/^    eedc:	e59f1144 	ldr	r1, [pc, #324]	; f028 <_int_malloc+0x1000>$/;"	l
eee0	Test/a.s	/^    eee0:	e5911000 	ldr	r1, [r1]$/;"	l
eee4	Test/a.s	/^    eee4:	e3510000 	cmp	r1, #0$/;"	l
eee8	Test/a.s	/^    eee8:	0a000004 	beq	ef00 <_int_malloc+0xed8>$/;"	l
eeec	Test/a.s	/^    eeec:	e58d200c 	str	r2, [sp, #12]$/;"	l
eef0	Test/a.s	/^    eef0:	e58d3008 	str	r3, [sp, #8]$/;"	l
eef4	Test/a.s	/^    eef4:	e12fff31 	blx	r1$/;"	l
eef8	Test/a.s	/^    eef8:	e59d200c 	ldr	r2, [sp, #12]$/;"	l
eefc	Test/a.s	/^    eefc:	e59d3008 	ldr	r3, [sp, #8]$/;"	l
ef00	Test/a.s	/^    ef00:	e5991448 	ldr	r1, [r9, #1096]	; 0x448$/;"	l
ef04	Test/a.s	/^    ef04:	e0632002 	rsb	r2, r3, r2$/;"	l
ef08	Test/a.s	/^    ef08:	e0822008 	add	r2, r2, r8$/;"	l
ef0c	Test/a.s	/^    ef0c:	e3822001 	orr	r2, r2, #1$/;"	l
ef10	Test/a.s	/^    ef10:	e08a1001 	add	r1, sl, r1$/;"	l
ef14	Test/a.s	/^    ef14:	e3540000 	cmp	r4, #0$/;"	l
ef18	Test/a.s	/^    ef18:	e5893030 	str	r3, [r9, #48]	; 0x30$/;"	l
ef1c	Test/a.s	/^    ef1c:	e59f8138 	ldr	r8, [pc, #312]	; f05c <_int_malloc+0x1034>$/;"	l
ef20	Test/a.s	/^    ef20:	e5832004 	str	r2, [r3, #4]$/;"	l
ef24	Test/a.s	/^    ef24:	e5891448 	str	r1, [r9, #1096]	; 0x448$/;"	l
ef28	Test/a.s	/^    ef28:	0afffedb 	beq	ea9c <_int_malloc+0xa74>$/;"	l
ef2c	Test/a.s	/^    ef2c:	e2444010 	sub	r4, r4, #16$/;"	l
ef30	Test/a.s	/^    ef30:	e3842001 	orr	r2, r4, #1$/;"	l
ef34	Test/a.s	/^    ef34:	e3a00009 	mov	r0, #9$/;"	l
ef38	Test/a.s	/^    ef38:	e354000f 	cmp	r4, #15$/;"	l
ef3c	Test/a.s	/^    ef3c:	e08b4004 	add	r4, fp, r4$/;"	l
ef40	Test/a.s	/^    ef40:	e58b2004 	str	r2, [fp, #4]$/;"	l
ef44	Test/a.s	/^    ef44:	e5840004 	str	r0, [r4, #4]$/;"	l
ef48	Test/a.s	/^    ef48:	e584000c 	str	r0, [r4, #12]$/;"	l
ef4c	Test/a.s	/^    ef4c:	9afffed2 	bls	ea9c <_int_malloc+0xa74>$/;"	l
ef50	Test/a.s	/^    ef50:	e1a0100b 	mov	r1, fp$/;"	l
ef54	Test/a.s	/^    ef54:	e1a00008 	mov	r0, r8$/;"	l
ef58	Test/a.s	/^    ef58:	e3a02001 	mov	r2, #1$/;"	l
ef5c	Test/a.s	/^    ef5c:	ebfff914 	bl	d3b4 <_int_free>$/;"	l
ef60	Test/a.s	/^    ef60:	e5981448 	ldr	r1, [r8, #1096]	; 0x448$/;"	l
ef64	Test/a.s	/^    ef64:	e5983030 	ldr	r3, [r8, #48]	; 0x30$/;"	l
ef68	Test/a.s	/^    ef68:	eafffecb 	b	ea9c <_int_malloc+0xa74>$/;"	l
ef6c	Test/a.s	/^    ef6c:	e5912488 	ldr	r2, [r1, #1160]	; 0x488$/;"	l
ef70	Test/a.s	/^    ef70:	e12fff32 	blx	r2$/;"	l
ef74	Test/a.s	/^    ef74:	e59d3008 	ldr	r3, [sp, #8]$/;"	l
ef78	Test/a.s	/^    ef78:	e1a02000 	mov	r2, r0$/;"	l
ef7c	Test/a.s	/^    ef7c:	e3520000 	cmp	r2, #0$/;"	l
ef80	Test/a.s	/^    ef80:	13a0a000 	movne	sl, #0$/;"	l
ef84	Test/a.s	/^    ef84:	11a0800a 	movne	r8, sl$/;"	l
ef88	Test/a.s	/^    ef88:	1affffdc 	bne	ef00 <_int_malloc+0xed8>$/;"	l
ef8c	Test/a.s	/^    ef8c:	eaffffa9 	b	ee38 <_int_malloc+0xe10>$/;"	l
ef90	Test/a.s	/^    ef90:	e59f0094 	ldr	r0, [pc, #148]	; f02c <_int_malloc+0x1004>$/;"	l
ef94	Test/a.s	/^    ef94:	e59f10e8 	ldr	r1, [pc, #232]	; f084 <_int_malloc+0x105c>$/;"	l
ef98	Test/a.s	/^    ef98:	e59f2090 	ldr	r2, [pc, #144]	; f030 <_int_malloc+0x1008>$/;"	l
ef9c	Test/a.s	/^    ef9c:	e59f30e8 	ldr	r3, [pc, #232]	; f08c <_int_malloc+0x1064>$/;"	l
efa0	Test/a.s	/^    efa0:	ebfff4ed 	bl	c35c <__malloc_assert>$/;"	l
efa4	Test/a.s	/^    efa4:	e1a02008 	mov	r2, r8$/;"	l
efa8	Test/a.s	/^    efa8:	e3a00003 	mov	r0, #3$/;"	l
efac	Test/a.s	/^    efac:	e59f1080 	ldr	r1, [pc, #128]	; f034 <_int_malloc+0x100c>$/;"	l
efb0	Test/a.s	/^    efb0:	e58d3008 	str	r3, [sp, #8]$/;"	l
efb4	Test/a.s	/^    efb4:	ebfff723 	bl	cc48 <malloc_printerr>$/;"	l
efb8	Test/a.s	/^    efb8:	e59d3008 	ldr	r3, [sp, #8]$/;"	l
efbc	Test/a.s	/^    efbc:	e5931448 	ldr	r1, [r3, #1096]	; 0x448$/;"	l
efc0	Test/a.s	/^    efc0:	e5933030 	ldr	r3, [r3, #48]	; 0x30$/;"	l
efc4	Test/a.s	/^    efc4:	eafffeb4 	b	ea9c <_int_malloc+0xa74>$/;"	l
efc8	Test/a.s	/^    efc8:	e2180007 	ands	r0, r8, #7$/;"	l
efcc	Test/a.s	/^    efcc:	1a0000b5 	bne	f2a8 <_int_malloc+0x1280>$/;"	l
efd0	Test/a.s	/^    efd0:	e35c0000 	cmp	ip, #0$/;"	l
efd4	Test/a.s	/^    efd4:	01a0a00c 	moveq	sl, ip$/;"	l
efd8	Test/a.s	/^    efd8:	01a03008 	moveq	r3, r8$/;"	l
efdc	Test/a.s	/^    efdc:	01a0800a 	moveq	r8, sl$/;"	l
efe0	Test/a.s	/^    efe0:	0affffc6 	beq	ef00 <_int_malloc+0xed8>$/;"	l
efe4	Test/a.s	/^    efe4:	e5933488 	ldr	r3, [r3, #1160]	; 0x488$/;"	l
efe8	Test/a.s	/^    efe8:	e12fff33 	blx	r3$/;"	l
efec	Test/a.s	/^    efec:	e1a03008 	mov	r3, r8$/;"	l
eff0	Test/a.s	/^    eff0:	e1a02000 	mov	r2, r0$/;"	l
eff4	Test/a.s	/^    eff4:	eaffffe0 	b	ef7c <_int_malloc+0xf54>$/;"	l
eff8	Test/a.s	/^    eff8:	0008d2f8 	.word	0x0008d2f8$/;"	l
effc	Test/a.s	/^    effc:	000001ff 	.word	0x000001ff$/;"	l
elementType	nodeAttribute.h	/^    ElementTypeDescriptor *elementType;$/;"	m	struct:ArrayProperties
elementType	symbolTable.h	/^    DATA_TYPE elementType;$/;"	m	struct:ArrayProperties
enterIntoHashTrain	symbolTable.c	/^void enterIntoHashTrain(int hashIndex, SymbolTableEntry* entry)$/;"	f
enterSymbol	symbolTable.c	/^SymbolTableEntry* enterSymbol(char* symbolName, SymbolAttribute* attribute)$/;"	f
evaluateExprValue	semanticAnalysis.c	/^void evaluateExprValue(AST_NODE* exprNode)$/;"	f
expr	parser.y	/^expr		: expr add_op term $/;"	l
exprSemanticValue	header.h	/^        EXPRSemanticValue exprSemanticValue;$/;"	m	union:AST_NODE::__anon8
expr_null	parser.y	/^expr_null	:expr $/;"	l
f	Test/s.S	/^f:$/;"	l
f	Test/simple.c	/^void f(){$/;"	f
f	Test/t.S	/^f:$/;"	l
f	Test/t.c	/^void f(){$/;"	f
f000	Test/a.s	/^    f000:	00002710 	.word	0x00002710$/;"	l
f004	Test/a.s	/^    f004:	0007d9cc 	.word	0x0007d9cc$/;"	l
f008	Test/a.s	/^    f008:	00000d8e 	.word	0x00000d8e$/;"	l
f00c	Test/a.s	/^    f00c:	0006d044 	.word	0x0006d044$/;"	l
f010	Test/a.s	/^    f010:	00000e0f 	.word	0x00000e0f$/;"	l
f014	Test/a.s	/^    f014:	0006cf9c 	.word	0x0006cf9c$/;"	l
f018	Test/a.s	/^    f018:	0008c970 	.word	0x0008c970$/;"	l
f01c	Test/a.s	/^    f01c:	0006cf20 	.word	0x0006cf20$/;"	l
f020	Test/a.s	/^    f020:	0006cefc 	.word	0x0006cefc$/;"	l
f024	Test/a.s	/^    f024:	00000dc3 	.word	0x00000dc3$/;"	l
f028	Test/a.s	/^    f028:	0008d34c 	.word	0x0008d34c$/;"	l
f02c	Test/a.s	/^    f02c:	0006d4c4 	.word	0x0006d4c4$/;"	l
f030	Test/a.s	/^    f030:	00000a12 	.word	0x00000a12$/;"	l
f034	Test/a.s	/^    f034:	0006d4a0 	.word	0x0006d4a0$/;"	l
f038	Test/a.s	/^    f038:	0006ca68 	.word	0x0006ca68$/;"	l
f03c	Test/a.s	/^    f03c:	0006d344 	.word	0x0006d344$/;"	l
f040	Test/a.s	/^    f040:	00000944 	.word	0x00000944$/;"	l
f044	Test/a.s	/^    f044:	0006d12c 	.word	0x0006d12c$/;"	l
f048	Test/a.s	/^    f048:	00000941 	.word	0x00000941$/;"	l
f04c	Test/a.s	/^    f04c:	0007cedc 	.word	0x0007cedc$/;"	l
f050	Test/a.s	/^    f050:	0006cf50 	.word	0x0006cf50$/;"	l
f054	Test/a.s	/^    f054:	0006d080 	.word	0x0006d080$/;"	l
f058	Test/a.s	/^    f058:	0006cf74 	.word	0x0006cf74$/;"	l
f05c	Test/a.s	/^    f05c:	0008c4b4 	.word	0x0008c4b4$/;"	l
f060	Test/a.s	/^    f060:	0006d018 	.word	0x0006d018$/;"	l
f064	Test/a.s	/^    f064:	00000e25 	.word	0x00000e25$/;"	l
f068	Test/a.s	/^    f068:	0006cfec 	.word	0x0006cfec$/;"	l
f06c	Test/a.s	/^    f06c:	00000d8a 	.word	0x00000d8a$/;"	l
f070	Test/a.s	/^    f070:	0006cfb8 	.word	0x0006cfb8$/;"	l
f074	Test/a.s	/^    f074:	0006cfd4 	.word	0x0006cfd4$/;"	l
f078	Test/a.s	/^    f078:	0006d050 	.word	0x0006d050$/;"	l
f07c	Test/a.s	/^    f07c:	0006de58 	.word	0x0006de58$/;"	l
f080	Test/a.s	/^    f080:	0006d4d4 	.word	0x0006d4d4$/;"	l
f084	Test/a.s	/^    f084:	0006c930 	.word	0x0006c930$/;"	l
f088	Test/a.s	/^    f088:	00000a2e 	.word	0x00000a2e$/;"	l
f08c	Test/a.s	/^    f08c:	0006de78 	.word	0x0006de78$/;"	l
f090	Test/a.s	/^    f090:	e51f903c 	ldr	r9, [pc, #-60]	; f05c <_int_malloc+0x1034>$/;"	l
f094	Test/a.s	/^    f094:	e51f1064 	ldr	r1, [pc, #-100]	; f038 <_int_malloc+0x1010>$/;"	l
f098	Test/a.s	/^    f098:	e599048c 	ldr	r0, [r9, #1164]	; 0x48c$/;"	l
f09c	Test/a.s	/^    f09c:	e1a02008 	mov	r2, r8$/;"	l
f0a0	Test/a.s	/^    f0a0:	ebfff6e8 	bl	cc48 <malloc_printerr>$/;"	l
f0a4	Test/a.s	/^    f0a4:	eafffdae 	b	e764 <_int_malloc+0x73c>$/;"	l
f0a8	Test/a.s	/^    f0a8:	e51f0074 	ldr	r0, [pc, #-116]	; f03c <_int_malloc+0x1014>$/;"	l
f0ac	Test/a.s	/^    f0ac:	e51f1030 	ldr	r1, [pc, #-48]	; f084 <_int_malloc+0x105c>$/;"	l
f0b0	Test/a.s	/^    f0b0:	e51f2078 	ldr	r2, [pc, #-120]	; f040 <_int_malloc+0x1018>$/;"	l
f0b4	Test/a.s	/^    f0b4:	e51f3030 	ldr	r3, [pc, #-48]	; f08c <_int_malloc+0x1064>$/;"	l
f0b8	Test/a.s	/^    f0b8:	ebfff4a7 	bl	c35c <__malloc_assert>$/;"	l
f0bc	Test/a.s	/^    f0bc:	e51f0080 	ldr	r0, [pc, #-128]	; f044 <_int_malloc+0x101c>$/;"	l
f0c0	Test/a.s	/^    f0c0:	e51f1044 	ldr	r1, [pc, #-68]	; f084 <_int_malloc+0x105c>$/;"	l
f0c4	Test/a.s	/^    f0c4:	e51f2084 	ldr	r2, [pc, #-132]	; f048 <_int_malloc+0x1020>$/;"	l
f0c8	Test/a.s	/^    f0c8:	e51f3044 	ldr	r3, [pc, #-68]	; f08c <_int_malloc+0x1064>$/;"	l
f0cc	Test/a.s	/^    f0cc:	ebfff4a2 	bl	c35c <__malloc_assert>$/;"	l
f0d0	Test/a.s	/^    f0d0:	e3540000 	cmp	r4, #0$/;"	l
f0d4	Test/a.s	/^    f0d4:	0afffe4c 	beq	ea0c <_int_malloc+0x9e4>$/;"	l
f0d8	Test/a.s	/^    f0d8:	eafffe40 	b	e9e0 <_int_malloc+0x9b8>$/;"	l
f0dc	Test/a.s	/^    f0dc:	e3e03000 	mvn	r3, #0$/;"	l
f0e0	Test/a.s	/^    f0e0:	e3a00000 	mov	r0, #0$/;"	l
f0e4	Test/a.s	/^    f0e4:	e58d3000 	str	r3, [sp]$/;"	l
f0e8	Test/a.s	/^    f0e8:	e58d0004 	str	r0, [sp, #4]$/;"	l
f0ec	Test/a.s	/^    f0ec:	e1a0100b 	mov	r1, fp$/;"	l
f0f0	Test/a.s	/^    f0f0:	e3a02003 	mov	r2, #3$/;"	l
f0f4	Test/a.s	/^    f0f4:	e3a03022 	mov	r3, #34	; 0x22$/;"	l
f0f8	Test/a.s	/^    f0f8:	eb001634 	bl	149d0 <__mmap>$/;"	l
f0fc	Test/a.s	/^    f0fc:	e3700001 	cmn	r0, #1$/;"	l
f100	Test/a.s	/^    f100:	0afffe2e 	beq	e9c0 <_int_malloc+0x998>$/;"	l
f104	Test/a.s	/^    f104:	e2808008 	add	r8, r0, #8$/;"	l
f108	Test/a.s	/^    f108:	e3180007 	tst	r8, #7$/;"	l
f10c	Test/a.s	/^    f10c:	1a00003b 	bne	f200 <_int_malloc+0x11d8>$/;"	l
f110	Test/a.s	/^    f110:	e5993468 	ldr	r3, [r9, #1128]	; 0x468$/;"	l
f114	Test/a.s	/^    f114:	e5992470 	ldr	r2, [r9, #1136]	; 0x470$/;"	l
f118	Test/a.s	/^    f118:	e2833001 	add	r3, r3, #1$/;"	l
f11c	Test/a.s	/^    f11c:	e1530002 	cmp	r3, r2$/;"	l
f120	Test/a.s	/^    f120:	e38b2002 	orr	r2, fp, #2$/;"	l
f124	Test/a.s	/^    f124:	e5802004 	str	r2, [r0, #4]$/;"	l
f128	Test/a.s	/^    f128:	e51f20d4 	ldr	r2, [pc, #-212]	; f05c <_int_malloc+0x1034>$/;"	l
f12c	Test/a.s	/^    f12c:	e5893468 	str	r3, [r9, #1128]	; 0x468$/;"	l
f130	Test/a.s	/^    f130:	c5823470 	strgt	r3, [r2, #1136]	; 0x470$/;"	l
f134	Test/a.s	/^    f134:	e5992478 	ldr	r2, [r9, #1144]	; 0x478$/;"	l
f138	Test/a.s	/^    f138:	e599347c 	ldr	r3, [r9, #1148]	; 0x47c$/;"	l
f13c	Test/a.s	/^    f13c:	e08bb002 	add	fp, fp, r2$/;"	l
f140	Test/a.s	/^    f140:	e15b0003 	cmp	fp, r3$/;"	l
f144	Test/a.s	/^    f144:	e51f30f0 	ldr	r3, [pc, #-240]	; f05c <_int_malloc+0x1034>$/;"	l
f148	Test/a.s	/^    f148:	e589b478 	str	fp, [r9, #1144]	; 0x478$/;"	l
f14c	Test/a.s	/^    f14c:	8583b47c 	strhi	fp, [r3, #1148]	; 0x47c$/;"	l
f150	Test/a.s	/^    f150:	eafffe65 	b	eaec <_int_malloc+0xac4>$/;"	l
f154	Test/a.s	/^    f154:	e51f3110 	ldr	r3, [pc, #-272]	; f04c <_int_malloc+0x1024>$/;"	l
f158	Test/a.s	/^    f158:	ebffe8c0 	bl	9460 <__aeabi_read_tp>$/;"	l
f15c	Test/a.s	/^    f15c:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
f160	Test/a.s	/^    f160:	e3a0200c 	mov	r2, #12$/;"	l
f164	Test/a.s	/^    f164:	e7802003 	str	r2, [r0, r3]$/;"	l
f168	Test/a.s	/^    f168:	e3a08000 	mov	r8, #0$/;"	l
f16c	Test/a.s	/^    f16c:	eafffbef 	b	e130 <_int_malloc+0x108>$/;"	l
f170	Test/a.s	/^    f170:	e51f1128 	ldr	r1, [pc, #-296]	; f050 <_int_malloc+0x1028>$/;"	l
f174	Test/a.s	/^    f174:	eafffea8 	b	ec1c <_int_malloc+0xbf4>$/;"	l
f178	Test/a.s	/^    f178:	e3e03000 	mvn	r3, #0$/;"	l
f17c	Test/a.s	/^    f17c:	e3a00000 	mov	r0, #0$/;"	l
f180	Test/a.s	/^    f180:	e58d3000 	str	r3, [sp]$/;"	l
f184	Test/a.s	/^    f184:	e58d0004 	str	r0, [sp, #4]$/;"	l
f188	Test/a.s	/^    f188:	e1a0100a 	mov	r1, sl$/;"	l
f18c	Test/a.s	/^    f18c:	e3a02003 	mov	r2, #3$/;"	l
f190	Test/a.s	/^    f190:	e3a03022 	mov	r3, #34	; 0x22$/;"	l
f194	Test/a.s	/^    f194:	eb00160d 	bl	149d0 <__mmap>$/;"	l
f198	Test/a.s	/^    f198:	e3700001 	cmn	r0, #1$/;"	l
f19c	Test/a.s	/^    f19c:	e1a08000 	mov	r8, r0$/;"	l
f1a0	Test/a.s	/^    f1a0:	0affff24 	beq	ee38 <_int_malloc+0xe10>$/;"	l
f1a4	Test/a.s	/^    f1a4:	e5993004 	ldr	r3, [r9, #4]$/;"	l
f1a8	Test/a.s	/^    f1a8:	e3500000 	cmp	r0, #0$/;"	l
f1ac	Test/a.s	/^    f1ac:	e3833002 	orr	r3, r3, #2$/;"	l
f1b0	Test/a.s	/^    f1b0:	e5893004 	str	r3, [r9, #4]$/;"	l
f1b4	Test/a.s	/^    f1b4:	e080200a 	add	r2, r0, sl$/;"	l
f1b8	Test/a.s	/^    f1b8:	e51f3164 	ldr	r3, [pc, #-356]	; f05c <_int_malloc+0x1034>$/;"	l
f1bc	Test/a.s	/^    f1bc:	0affff7e 	beq	efbc <_int_malloc+0xf94>$/;"	l
f1c0	Test/a.s	/^    f1c0:	e272c001 	rsbs	ip, r2, #1$/;"	l
f1c4	Test/a.s	/^    f1c4:	33a0c000 	movcc	ip, #0$/;"	l
f1c8	Test/a.s	/^    f1c8:	eafffefa 	b	edb8 <_int_malloc+0xd90>$/;"	l
f1cc	Test/a.s	/^    f1cc:	e0880001 	add	r0, r8, r1$/;"	l
f1d0	Test/a.s	/^    f1d0:	e3a02003 	mov	r2, #3$/;"	l
f1d4	Test/a.s	/^    f1d4:	e061100c 	rsb	r1, r1, ip$/;"	l
f1d8	Test/a.s	/^    f1d8:	e58d3008 	str	r3, [sp, #8]$/;"	l
f1dc	Test/a.s	/^    f1dc:	e58dc00c 	str	ip, [sp, #12]$/;"	l
f1e0	Test/a.s	/^    f1e0:	eb001616 	bl	14a40 <__mprotect>$/;"	l
f1e4	Test/a.s	/^    f1e4:	e3500000 	cmp	r0, #0$/;"	l
f1e8	Test/a.s	/^    f1e8:	e59d3008 	ldr	r3, [sp, #8]$/;"	l
f1ec	Test/a.s	/^    f1ec:	e59dc00c 	ldr	ip, [sp, #12]$/;"	l
f1f0	Test/a.s	/^    f1f0:	1afffe56 	bne	eb50 <_int_malloc+0xb28>$/;"	l
f1f4	Test/a.s	/^    f1f4:	e588c00c 	str	ip, [r8, #12]$/;"	l
f1f8	Test/a.s	/^    f1f8:	e5953030 	ldr	r3, [r5, #48]	; 0x30$/;"	l
f1fc	Test/a.s	/^    f1fc:	eafffe19 	b	ea68 <_int_malloc+0xa40>$/;"	l
f2	Test/t.c	/^void  f2(){$/;"	f
f200	Test/a.s	/^    f200:	e51f01b4 	ldr	r0, [pc, #-436]	; f054 <_int_malloc+0x102c>$/;"	l
f204	Test/a.s	/^    f204:	e51f1188 	ldr	r1, [pc, #-392]	; f084 <_int_malloc+0x105c>$/;"	l
f208	Test/a.s	/^    f208:	e3a02e91 	mov	r2, #2320	; 0x910$/;"	l
f20c	Test/a.s	/^    f20c:	e51f3188 	ldr	r3, [pc, #-392]	; f08c <_int_malloc+0x1064>$/;"	l
f210	Test/a.s	/^    f210:	ebfff451 	bl	c35c <__malloc_assert>$/;"	l
f214	Test/a.s	/^    f214:	e51f11c4 	ldr	r1, [pc, #-452]	; f058 <_int_malloc+0x1030>$/;"	l
f218	Test/a.s	/^    f218:	eafffe7f 	b	ec1c <_int_malloc+0xbf4>$/;"	l
f21c	Test/a.s	/^    f21c:	e1580002 	cmp	r8, r2$/;"	l
f220	Test/a.s	/^    f220:	0afffd4c 	beq	e758 <_int_malloc+0x730>$/;"	l
f224	Test/a.s	/^    f224:	e5832010 	str	r2, [r3, #16]$/;"	l
f228	Test/a.s	/^    f228:	e5982010 	ldr	r2, [r8, #16]$/;"	l
f22c	Test/a.s	/^    f22c:	e5831014 	str	r1, [r3, #20]$/;"	l
f230	Test/a.s	/^    f230:	e5823014 	str	r3, [r2, #20]$/;"	l
f234	Test/a.s	/^    f234:	e5982014 	ldr	r2, [r8, #20]$/;"	l
f238	Test/a.s	/^    f238:	e51f91e4 	ldr	r9, [pc, #-484]	; f05c <_int_malloc+0x1034>$/;"	l
f23c	Test/a.s	/^    f23c:	e5823010 	str	r3, [r2, #16]$/;"	l
f240	Test/a.s	/^    f240:	eafffd47 	b	e764 <_int_malloc+0x73c>$/;"	l
f244	Test/a.s	/^    f244:	e51f01ec 	ldr	r0, [pc, #-492]	; f060 <_int_malloc+0x1038>$/;"	l
f248	Test/a.s	/^    f248:	e51f11cc 	ldr	r1, [pc, #-460]	; f084 <_int_malloc+0x105c>$/;"	l
f24c	Test/a.s	/^    f24c:	e51f21f0 	ldr	r2, [pc, #-496]	; f064 <_int_malloc+0x103c>$/;"	l
f250	Test/a.s	/^    f250:	e51f31dc 	ldr	r3, [pc, #-476]	; f07c <_int_malloc+0x1054>$/;"	l
f254	Test/a.s	/^    f254:	ebfff440 	bl	c35c <__malloc_assert>$/;"	l
f258	Test/a.s	/^    f258:	e51f01f8 	ldr	r0, [pc, #-504]	; f068 <_int_malloc+0x1040>$/;"	l
f25c	Test/a.s	/^    f25c:	e51f11e0 	ldr	r1, [pc, #-480]	; f084 <_int_malloc+0x105c>$/;"	l
f260	Test/a.s	/^    f260:	e51f2204 	ldr	r2, [pc, #-516]	; f064 <_int_malloc+0x103c>$/;"	l
f264	Test/a.s	/^    f264:	e51f31f0 	ldr	r3, [pc, #-496]	; f07c <_int_malloc+0x1054>$/;"	l
f268	Test/a.s	/^    f268:	ebfff43b 	bl	c35c <__malloc_assert>$/;"	l
f26c	Test/a.s	/^    f26c:	e51f0200 	ldr	r0, [pc, #-512]	; f074 <_int_malloc+0x104c>$/;"	l
f270	Test/a.s	/^    f270:	e51f11f4 	ldr	r1, [pc, #-500]	; f084 <_int_malloc+0x105c>$/;"	l
f274	Test/a.s	/^    f274:	e51f2210 	ldr	r2, [pc, #-528]	; f06c <_int_malloc+0x1044>$/;"	l
f278	Test/a.s	/^    f278:	e51f3204 	ldr	r3, [pc, #-516]	; f07c <_int_malloc+0x1054>$/;"	l
f27c	Test/a.s	/^    f27c:	ebfff436 	bl	c35c <__malloc_assert>$/;"	l
f280	Test/a.s	/^    f280:	e51f0218 	ldr	r0, [pc, #-536]	; f070 <_int_malloc+0x1048>$/;"	l
f284	Test/a.s	/^    f284:	e51f1208 	ldr	r1, [pc, #-520]	; f084 <_int_malloc+0x105c>$/;"	l
f288	Test/a.s	/^    f288:	e3a02d36 	mov	r2, #3456	; 0xd80$/;"	l
f28c	Test/a.s	/^    f28c:	e51f3218 	ldr	r3, [pc, #-536]	; f07c <_int_malloc+0x1054>$/;"	l
f290	Test/a.s	/^    f290:	ebfff431 	bl	c35c <__malloc_assert>$/;"	l
f294	Test/a.s	/^    f294:	e51f0224 	ldr	r0, [pc, #-548]	; f078 <_int_malloc+0x1050>$/;"	l
f298	Test/a.s	/^    f298:	e51f121c 	ldr	r1, [pc, #-540]	; f084 <_int_malloc+0x105c>$/;"	l
f29c	Test/a.s	/^    f29c:	e3a02ee2 	mov	r2, #3616	; 0xe20$/;"	l
f2a0	Test/a.s	/^    f2a0:	e51f322c 	ldr	r3, [pc, #-556]	; f07c <_int_malloc+0x1054>$/;"	l
f2a4	Test/a.s	/^    f2a4:	ebfff42c 	bl	c35c <__malloc_assert>$/;"	l
f2a8	Test/a.s	/^    f2a8:	e51f0230 	ldr	r0, [pc, #-560]	; f080 <_int_malloc+0x1058>$/;"	l
f2ac	Test/a.s	/^    f2ac:	e51f1230 	ldr	r1, [pc, #-560]	; f084 <_int_malloc+0x105c>$/;"	l
f2b0	Test/a.s	/^    f2b0:	e51f2230 	ldr	r2, [pc, #-560]	; f088 <_int_malloc+0x1060>$/;"	l
f2b4	Test/a.s	/^    f2b4:	e51f3230 	ldr	r3, [pc, #-560]	; f08c <_int_malloc+0x1064>$/;"	l
f2b8	Test/a.s	/^    f2b8:	ebfff427 	bl	c35c <__malloc_assert>$/;"	l
f2bc	Test/a.s	/^    f2bc:	e3700001 	cmn	r0, #1$/;"	l
f2c0	Test/a.s	/^    f2c0:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}$/;"	l
f2c4	Test/a.s	/^    f2c4:	e1a06000 	mov	r6, r0$/;"	l
f2c8	Test/a.s	/^    f2c8:	0a00002b 	beq	f37c <malloc_check+0xc0>$/;"	l
f2cc	Test/a.s	/^    f2cc:	e59f70ec 	ldr	r7, [pc, #236]	; f3c0 <malloc_check+0x104>$/;"	l
f2d0	Test/a.s	/^    f2d0:	e3a01001 	mov	r1, #1$/;"	l
f2d4	Test/a.s	/^    f2d4:	e1a02007 	mov	r2, r7$/;"	l
f2d8	Test/a.s	/^    f2d8:	e3a04000 	mov	r4, #0$/;"	l
f2dc	Test/a.s	/^    f2dc:	e5923000 	ldr	r3, [r2]$/;"	l
f2e0	Test/a.s	/^    f2e0:	e1530004 	cmp	r3, r4$/;"	l
f2e4	Test/a.s	/^    f2e4:	1a000005 	bne	f300 <malloc_check+0x44>$/;"	l
f2e8	Test/a.s	/^    f2e8:	e1a00004 	mov	r0, r4$/;"	l
f2ec	Test/a.s	/^    f2ec:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
f2f0	Test/a.s	/^    f2f0:	e1a0e00f 	mov	lr, pc$/;"	l
f2f4	Test/a.s	/^    f2f4:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
f2f8	Test/a.s	/^    f2f8:	3afffff7 	bcc	f2dc <malloc_check+0x20>$/;"	l
f2fc	Test/a.s	/^    f2fc:	e1a03004 	mov	r3, r4$/;"	l
f300	Test/a.s	/^    f300:	e1530004 	cmp	r3, r4$/;"	l
f304	Test/a.s	/^    f304:	1a00002a 	bne	f3b4 <malloc_check+0xf8>$/;"	l
f308	Test/a.s	/^    f308:	ebfff7b3 	bl	d1dc <top_check>$/;"	l
f30c	Test/a.s	/^    f30c:	e3500000 	cmp	r0, #0$/;"	l
f310	Test/a.s	/^    f310:	b3a08000 	movlt	r8, #0$/;"	l
f314	Test/a.s	/^    f314:	ba000003 	blt	f328 <malloc_check+0x6c>$/;"	l
f318	Test/a.s	/^    f318:	e59f00a0 	ldr	r0, [pc, #160]	; f3c0 <malloc_check+0x104>$/;"	l
f31c	Test/a.s	/^    f31c:	e2861001 	add	r1, r6, #1$/;"	l
f320	Test/a.s	/^    f320:	ebfffb40 	bl	e028 <_int_malloc>$/;"	l
f324	Test/a.s	/^    f324:	e1a08000 	mov	r8, r0$/;"	l
f328	Test/a.s	/^    f328:	e5975000 	ldr	r5, [r7]$/;"	l
f32c	Test/a.s	/^    f32c:	e3a01000 	mov	r1, #0$/;"	l
f330	Test/a.s	/^    f330:	e1a04005 	mov	r4, r5$/;"	l
f334	Test/a.s	/^    f334:	e59f2084 	ldr	r2, [pc, #132]	; f3c0 <malloc_check+0x104>$/;"	l
f338	Test/a.s	/^    f338:	e5923000 	ldr	r3, [r2]$/;"	l
f33c	Test/a.s	/^    f33c:	e1530004 	cmp	r3, r4$/;"	l
f340	Test/a.s	/^    f340:	1a000005 	bne	f35c <malloc_check+0xa0>$/;"	l
f344	Test/a.s	/^    f344:	e1a00004 	mov	r0, r4$/;"	l
f348	Test/a.s	/^    f348:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
f34c	Test/a.s	/^    f34c:	e1a0e00f 	mov	lr, pc$/;"	l
f350	Test/a.s	/^    f350:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
f354	Test/a.s	/^    f354:	3afffff7 	bcc	f338 <malloc_check+0x7c>$/;"	l
f358	Test/a.s	/^    f358:	e1a03004 	mov	r3, r4$/;"	l
f35c	Test/a.s	/^    f35c:	e1550003 	cmp	r5, r3$/;"	l
f360	Test/a.s	/^    f360:	1afffff0 	bne	f328 <malloc_check+0x6c>$/;"	l
f364	Test/a.s	/^    f364:	e3550001 	cmp	r5, #1$/;"	l
f368	Test/a.s	/^    f368:	ca00000a 	bgt	f398 <malloc_check+0xdc>$/;"	l
f36c	Test/a.s	/^    f36c:	e1a00008 	mov	r0, r8$/;"	l
f370	Test/a.s	/^    f370:	e1a01006 	mov	r1, r6$/;"	l
f374	Test/a.s	/^    f374:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}$/;"	l
f378	Test/a.s	/^    f378:	eafff2b2 	b	be48 <mem2mem_check>$/;"	l
f37c	Test/a.s	/^    f37c:	e59f3040 	ldr	r3, [pc, #64]	; f3c4 <malloc_check+0x108>$/;"	l
f380	Test/a.s	/^    f380:	ebffe836 	bl	9460 <__aeabi_read_tp>$/;"	l
f384	Test/a.s	/^    f384:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
f388	Test/a.s	/^    f388:	e3a0200c 	mov	r2, #12$/;"	l
f38c	Test/a.s	/^    f38c:	e7802003 	str	r2, [r0, r3]$/;"	l
f390	Test/a.s	/^    f390:	e3a00000 	mov	r0, #0$/;"	l
f394	Test/a.s	/^    f394:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}$/;"	l
f398	Test/a.s	/^    f398:	e1a00002 	mov	r0, r2$/;"	l
f39c	Test/a.s	/^    f39c:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
f3a0	Test/a.s	/^    f3a0:	e3a02001 	mov	r2, #1$/;"	l
f3a4	Test/a.s	/^    f3a4:	e3a03000 	mov	r3, #0$/;"	l
f3a8	Test/a.s	/^    f3a8:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
f3ac	Test/a.s	/^    f3ac:	ef000000 	svc	0x00000000$/;"	l
f3b0	Test/a.s	/^    f3b0:	eaffffed 	b	f36c <malloc_check+0xb0>$/;"	l
f3b4	Test/a.s	/^    f3b4:	e1a00007 	mov	r0, r7$/;"	l
f3b8	Test/a.s	/^    f3b8:	eb0017f4 	bl	15390 <__lll_lock_wait_private>$/;"	l
f3bc	Test/a.s	/^    f3bc:	eaffffd1 	b	f308 <malloc_check+0x4c>$/;"	l
f3c0	Test/a.s	/^    f3c0:	0008c4b4 	.word	0x0008c4b4$/;"	l
f3c4	Test/a.s	/^    f3c4:	0007ccb4 	.word	0x0007ccb4$/;"	l
f3c8	Test/a.s	/^    f3c8:	e3510008 	cmp	r1, #8$/;"	l
f3cc	Test/a.s	/^    f3cc:	e92d45f8 	push	{r3, r4, r5, r6, r7, r8, sl, lr}$/;"	l
f3d0	Test/a.s	/^    f3d0:	e1a07000 	mov	r7, r0$/;"	l
f3d4	Test/a.s	/^    f3d4:	9a000063 	bls	f568 <_int_memalign+0x1a0>$/;"	l
f3d8	Test/a.s	/^    f3d8:	e351000f 	cmp	r1, #15$/;"	l
f3dc	Test/a.s	/^    f3dc:	93a04010 	movls	r4, #16$/;"	l
f3e0	Test/a.s	/^    f3e0:	9a000008 	bls	f408 <_int_memalign+0x40>$/;"	l
f3e4	Test/a.s	/^    f3e4:	e2413001 	sub	r3, r1, #1$/;"	l
f3e8	Test/a.s	/^    f3e8:	e1130001 	tst	r3, r1$/;"	l
f3ec	Test/a.s	/^    f3ec:	0a000077 	beq	f5d0 <_int_memalign+0x208>$/;"	l
f3f0	Test/a.s	/^    f3f0:	e3510010 	cmp	r1, #16$/;"	l
f3f4	Test/a.s	/^    f3f4:	0a000075 	beq	f5d0 <_int_memalign+0x208>$/;"	l
f3f8	Test/a.s	/^    f3f8:	e3a04010 	mov	r4, #16$/;"	l
f3fc	Test/a.s	/^    f3fc:	e1a04084 	lsl	r4, r4, #1$/;"	l
f400	Test/a.s	/^    f400:	e1510004 	cmp	r1, r4$/;"	l
f404	Test/a.s	/^    f404:	8afffffc 	bhi	f3fc <_int_memalign+0x34>$/;"	l
f408	Test/a.s	/^    f408:	e3720021 	cmn	r2, #33	; 0x21$/;"	l
f40c	Test/a.s	/^    f40c:	8a00005f 	bhi	f590 <_int_memalign+0x1c8>$/;"	l
f410	Test/a.s	/^    f410:	e282200b 	add	r2, r2, #11$/;"	l
f414	Test/a.s	/^    f414:	e352000f 	cmp	r2, #15$/;"	l
f418	Test/a.s	/^    f418:	83c28007 	bichi	r8, r2, #7$/;"	l
f41c	Test/a.s	/^    f41c:	93a08010 	movls	r8, #16$/;"	l
f420	Test/a.s	/^    f420:	e2841010 	add	r1, r4, #16$/;"	l
f424	Test/a.s	/^    f424:	e0811008 	add	r1, r1, r8$/;"	l
f428	Test/a.s	/^    f428:	e1a00007 	mov	r0, r7$/;"	l
f42c	Test/a.s	/^    f42c:	ebfffafd 	bl	e028 <_int_malloc>$/;"	l
f430	Test/a.s	/^    f430:	e2505000 	subs	r5, r0, #0$/;"	l
f434	Test/a.s	/^    f434:	0a00001c 	beq	f4ac <_int_memalign+0xe4>$/;"	l
f438	Test/a.s	/^    f438:	e1a01004 	mov	r1, r4$/;"	l
f43c	Test/a.s	/^    f43c:	fa01680a 	blx	6946c <__aeabi_uidivmod>$/;"	l
f440	Test/a.s	/^    f440:	e3510000 	cmp	r1, #0$/;"	l
f444	Test/a.s	/^    f444:	e2451008 	sub	r1, r5, #8$/;"	l
f448	Test/a.s	/^    f448:	1a000019 	bne	f4b4 <_int_memalign+0xec>$/;"	l
f44c	Test/a.s	/^    f44c:	e1a06001 	mov	r6, r1$/;"	l
f450	Test/a.s	/^    f450:	e5963004 	ldr	r3, [r6, #4]$/;"	l
f454	Test/a.s	/^    f454:	e3130002 	tst	r3, #2$/;"	l
f458	Test/a.s	/^    f458:	1a000013 	bne	f4ac <_int_memalign+0xe4>$/;"	l
f45c	Test/a.s	/^    f45c:	e3c33007 	bic	r3, r3, #7$/;"	l
f460	Test/a.s	/^    f460:	e2882010 	add	r2, r8, #16$/;"	l
f464	Test/a.s	/^    f464:	e1530002 	cmp	r3, r2$/;"	l
f468	Test/a.s	/^    f468:	9a00000f 	bls	f4ac <_int_memalign+0xe4>$/;"	l
f46c	Test/a.s	/^    f46c:	e59f2164 	ldr	r2, [pc, #356]	; f5d8 <_int_memalign+0x210>$/;"	l
f470	Test/a.s	/^    f470:	e0683003 	rsb	r3, r8, r3$/;"	l
f474	Test/a.s	/^    f474:	e1570002 	cmp	r7, r2$/;"	l
f478	Test/a.s	/^    f478:	13a02004 	movne	r2, #4$/;"	l
f47c	Test/a.s	/^    f47c:	03a02000 	moveq	r2, #0$/;"	l
f480	Test/a.s	/^    f480:	e3833001 	orr	r3, r3, #1$/;"	l
f484	Test/a.s	/^    f484:	e1833002 	orr	r3, r3, r2$/;"	l
f488	Test/a.s	/^    f488:	e0861008 	add	r1, r6, r8$/;"	l
f48c	Test/a.s	/^    f48c:	e5813004 	str	r3, [r1, #4]$/;"	l
f490	Test/a.s	/^    f490:	e5963004 	ldr	r3, [r6, #4]$/;"	l
f494	Test/a.s	/^    f494:	e1a00007 	mov	r0, r7$/;"	l
f498	Test/a.s	/^    f498:	e2033007 	and	r3, r3, #7$/;"	l
f49c	Test/a.s	/^    f49c:	e1888003 	orr	r8, r8, r3$/;"	l
f4a0	Test/a.s	/^    f4a0:	e5868004 	str	r8, [r6, #4]$/;"	l
f4a4	Test/a.s	/^    f4a4:	e3a02001 	mov	r2, #1$/;"	l
f4a8	Test/a.s	/^    f4a8:	ebfff7c1 	bl	d3b4 <_int_free>$/;"	l
f4ac	Test/a.s	/^    f4ac:	e1a00005 	mov	r0, r5$/;"	l
f4b0	Test/a.s	/^    f4b0:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}$/;"	l
f4b4	Test/a.s	/^    f4b4:	e2446001 	sub	r6, r4, #1$/;"	l
f4b8	Test/a.s	/^    f4b8:	e2643000 	rsb	r3, r4, #0$/;"	l
f4bc	Test/a.s	/^    f4bc:	e0856006 	add	r6, r5, r6$/;"	l
f4c0	Test/a.s	/^    f4c0:	e0066003 	and	r6, r6, r3$/;"	l
f4c4	Test/a.s	/^    f4c4:	e2466008 	sub	r6, r6, #8$/;"	l
f4c8	Test/a.s	/^    f4c8:	e0613006 	rsb	r3, r1, r6$/;"	l
f4cc	Test/a.s	/^    f4cc:	e353000f 	cmp	r3, #15$/;"	l
f4d0	Test/a.s	/^    f4d0:	e5152004 	ldr	r2, [r5, #-4]$/;"	l
f4d4	Test/a.s	/^    f4d4:	90866004 	addls	r6, r6, r4$/;"	l
f4d8	Test/a.s	/^    f4d8:	90613006 	rsbls	r3, r1, r6$/;"	l
f4dc	Test/a.s	/^    f4dc:	e3c2a007 	bic	sl, r2, #7$/;"	l
f4e0	Test/a.s	/^    f4e0:	e2122002 	ands	r2, r2, #2$/;"	l
f4e4	Test/a.s	/^    f4e4:	e063a00a 	rsb	sl, r3, sl$/;"	l
f4e8	Test/a.s	/^    f4e8:	1a000021 	bne	f574 <_int_memalign+0x1ac>$/;"	l
f4ec	Test/a.s	/^    f4ec:	e59f00e4 	ldr	r0, [pc, #228]	; f5d8 <_int_memalign+0x210>$/;"	l
f4f0	Test/a.s	/^    f4f0:	e1570000 	cmp	r7, r0$/;"	l
f4f4	Test/a.s	/^    f4f4:	0a00002c 	beq	f5ac <_int_memalign+0x1e4>$/;"	l
f4f8	Test/a.s	/^    f4f8:	e38a2005 	orr	r2, sl, #5$/;"	l
f4fc	Test/a.s	/^    f4fc:	e5862004 	str	r2, [r6, #4]$/;"	l
f500	Test/a.s	/^    f500:	e086000a 	add	r0, r6, sl$/;"	l
f504	Test/a.s	/^    f504:	e590c004 	ldr	ip, [r0, #4]$/;"	l
f508	Test/a.s	/^    f508:	e3a02004 	mov	r2, #4$/;"	l
f50c	Test/a.s	/^    f50c:	e38cc001 	orr	ip, ip, #1$/;"	l
f510	Test/a.s	/^    f510:	e580c004 	str	ip, [r0, #4]$/;"	l
f514	Test/a.s	/^    f514:	e5150004 	ldr	r0, [r5, #-4]$/;"	l
f518	Test/a.s	/^    f518:	e2000007 	and	r0, r0, #7$/;"	l
f51c	Test/a.s	/^    f51c:	e1822000 	orr	r2, r2, r0$/;"	l
f520	Test/a.s	/^    f520:	e1823003 	orr	r3, r2, r3$/;"	l
f524	Test/a.s	/^    f524:	e5053004 	str	r3, [r5, #-4]$/;"	l
f528	Test/a.s	/^    f528:	e1a00007 	mov	r0, r7$/;"	l
f52c	Test/a.s	/^    f52c:	e3a02001 	mov	r2, #1$/;"	l
f530	Test/a.s	/^    f530:	ebfff79f 	bl	d3b4 <_int_free>$/;"	l
f534	Test/a.s	/^    f534:	e158000a 	cmp	r8, sl$/;"	l
f538	Test/a.s	/^    f538:	8a000005 	bhi	f554 <_int_memalign+0x18c>$/;"	l
f53c	Test/a.s	/^    f53c:	e2865008 	add	r5, r6, #8$/;"	l
f540	Test/a.s	/^    f540:	e1a01004 	mov	r1, r4$/;"	l
f544	Test/a.s	/^    f544:	e1a00005 	mov	r0, r5$/;"	l
f548	Test/a.s	/^    f548:	fa0167c7 	blx	6946c <__aeabi_uidivmod>$/;"	l
f54c	Test/a.s	/^    f54c:	e3510000 	cmp	r1, #0$/;"	l
f550	Test/a.s	/^    f550:	0affffbe 	beq	f450 <_int_memalign+0x88>$/;"	l
f554	Test/a.s	/^    f554:	e59f0080 	ldr	r0, [pc, #128]	; f5dc <_int_memalign+0x214>$/;"	l
f558	Test/a.s	/^    f558:	e59f1080 	ldr	r1, [pc, #128]	; f5e0 <_int_memalign+0x218>$/;"	l
f55c	Test/a.s	/^    f55c:	e59f2080 	ldr	r2, [pc, #128]	; f5e4 <_int_memalign+0x21c>$/;"	l
f560	Test/a.s	/^    f560:	e59f3080 	ldr	r3, [pc, #128]	; f5e8 <_int_memalign+0x220>$/;"	l
f564	Test/a.s	/^    f564:	ebfff37c 	bl	c35c <__malloc_assert>$/;"	l
f568	Test/a.s	/^    f568:	e1a01002 	mov	r1, r2$/;"	l
f56c	Test/a.s	/^    f56c:	e8bd45f8 	pop	{r3, r4, r5, r6, r7, r8, sl, lr}$/;"	l
f570	Test/a.s	/^    f570:	eafffaac 	b	e028 <_int_malloc>$/;"	l
f574	Test/a.s	/^    f574:	e5152008 	ldr	r2, [r5, #-8]$/;"	l
f578	Test/a.s	/^    f578:	e38aa002 	orr	sl, sl, #2$/;"	l
f57c	Test/a.s	/^    f57c:	e0833002 	add	r3, r3, r2$/;"	l
f580	Test/a.s	/^    f580:	e2865008 	add	r5, r6, #8$/;"	l
f584	Test/a.s	/^    f584:	e8860408 	stm	r6, {r3, sl}$/;"	l
f588	Test/a.s	/^    f588:	e1a00005 	mov	r0, r5$/;"	l
f58c	Test/a.s	/^    f58c:	e8bd85f8 	pop	{r3, r4, r5, r6, r7, r8, sl, pc}$/;"	l
f590	Test/a.s	/^    f590:	e59f3054 	ldr	r3, [pc, #84]	; f5ec <_int_memalign+0x224>$/;"	l
f594	Test/a.s	/^    f594:	ebffe7b1 	bl	9460 <__aeabi_read_tp>$/;"	l
f598	Test/a.s	/^    f598:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
f59c	Test/a.s	/^    f59c:	e3a0200c 	mov	r2, #12$/;"	l
f5a0	Test/a.s	/^    f5a0:	e7802003 	str	r2, [r0, r3]$/;"	l
f5a4	Test/a.s	/^    f5a4:	e3a05000 	mov	r5, #0$/;"	l
f5a8	Test/a.s	/^    f5a8:	eaffffbf 	b	f4ac <_int_memalign+0xe4>$/;"	l
f5ac	Test/a.s	/^    f5ac:	e38a0001 	orr	r0, sl, #1$/;"	l
f5b0	Test/a.s	/^    f5b0:	e5860004 	str	r0, [r6, #4]$/;"	l
f5b4	Test/a.s	/^    f5b4:	e086000a 	add	r0, r6, sl$/;"	l
f5b8	Test/a.s	/^    f5b8:	e590c004 	ldr	ip, [r0, #4]$/;"	l
f5bc	Test/a.s	/^    f5bc:	e38cc001 	orr	ip, ip, #1$/;"	l
f5c0	Test/a.s	/^    f5c0:	e580c004 	str	ip, [r0, #4]$/;"	l
f5c4	Test/a.s	/^    f5c4:	e5150004 	ldr	r0, [r5, #-4]$/;"	l
f5c8	Test/a.s	/^    f5c8:	e2000007 	and	r0, r0, #7$/;"	l
f5cc	Test/a.s	/^    f5cc:	eaffffd2 	b	f51c <_int_memalign+0x154>$/;"	l
f5d0	Test/a.s	/^    f5d0:	e1a04001 	mov	r4, r1$/;"	l
f5d4	Test/a.s	/^    f5d4:	eaffff8b 	b	f408 <_int_memalign+0x40>$/;"	l
f5d8	Test/a.s	/^    f5d8:	0008c4b4 	.word	0x0008c4b4$/;"	l
f5dc	Test/a.s	/^    f5dc:	0006d588 	.word	0x0006d588$/;"	l
f5e0	Test/a.s	/^    f5e0:	0006c930 	.word	0x0006c930$/;"	l
f5e4	Test/a.s	/^    f5e4:	00001108 	.word	0x00001108$/;"	l
f5e8	Test/a.s	/^    f5e8:	0006de48 	.word	0x0006de48$/;"	l
f5ec	Test/a.s	/^    f5ec:	0007caa0 	.word	0x0007caa0$/;"	l
f5f0	Test/a.s	/^    f5f0:	e3500008 	cmp	r0, #8$/;"	l
f5f4	Test/a.s	/^    f5f4:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}$/;"	l
f5f8	Test/a.s	/^    f5f8:	e1a05000 	mov	r5, r0$/;"	l
f5fc	Test/a.s	/^    f5fc:	e1a06001 	mov	r6, r1$/;"	l
f600	Test/a.s	/^    f600:	9a000030 	bls	f6c8 <memalign_check+0xd8>$/;"	l
f604	Test/a.s	/^    f604:	e350000f 	cmp	r0, #15$/;"	l
f608	Test/a.s	/^    f608:	93a05010 	movls	r5, #16$/;"	l
f60c	Test/a.s	/^    f60c:	e3710001 	cmn	r1, #1$/;"	l
f610	Test/a.s	/^    f610:	0a000030 	beq	f6d8 <memalign_check+0xe8>$/;"	l
f614	Test/a.s	/^    f614:	e59f7100 	ldr	r7, [pc, #256]	; f71c <memalign_check+0x12c>$/;"	l
f618	Test/a.s	/^    f618:	e3a01001 	mov	r1, #1$/;"	l
f61c	Test/a.s	/^    f61c:	e1a02007 	mov	r2, r7$/;"	l
f620	Test/a.s	/^    f620:	e3a04000 	mov	r4, #0$/;"	l
f624	Test/a.s	/^    f624:	e5923000 	ldr	r3, [r2]$/;"	l
f628	Test/a.s	/^    f628:	e1530004 	cmp	r3, r4$/;"	l
f62c	Test/a.s	/^    f62c:	1a000005 	bne	f648 <memalign_check+0x58>$/;"	l
f630	Test/a.s	/^    f630:	e1a00004 	mov	r0, r4$/;"	l
f634	Test/a.s	/^    f634:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
f638	Test/a.s	/^    f638:	e1a0e00f 	mov	lr, pc$/;"	l
f63c	Test/a.s	/^    f63c:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
f640	Test/a.s	/^    f640:	3afffff7 	bcc	f624 <memalign_check+0x34>$/;"	l
f644	Test/a.s	/^    f644:	e1a03004 	mov	r3, r4$/;"	l
f648	Test/a.s	/^    f648:	e1530004 	cmp	r3, r4$/;"	l
f64c	Test/a.s	/^    f64c:	1a00002f 	bne	f710 <memalign_check+0x120>$/;"	l
f650	Test/a.s	/^    f650:	ebfff6e1 	bl	d1dc <top_check>$/;"	l
f654	Test/a.s	/^    f654:	e3500000 	cmp	r0, #0$/;"	l
f658	Test/a.s	/^    f658:	b3a08000 	movlt	r8, #0$/;"	l
f65c	Test/a.s	/^    f65c:	ba000004 	blt	f674 <memalign_check+0x84>$/;"	l
f660	Test/a.s	/^    f660:	e1a01005 	mov	r1, r5$/;"	l
f664	Test/a.s	/^    f664:	e59f00b0 	ldr	r0, [pc, #176]	; f71c <memalign_check+0x12c>$/;"	l
f668	Test/a.s	/^    f668:	e2862001 	add	r2, r6, #1$/;"	l
f66c	Test/a.s	/^    f66c:	ebffff55 	bl	f3c8 <_int_memalign>$/;"	l
f670	Test/a.s	/^    f670:	e1a08000 	mov	r8, r0$/;"	l
f674	Test/a.s	/^    f674:	e5975000 	ldr	r5, [r7]$/;"	l
f678	Test/a.s	/^    f678:	e3a01000 	mov	r1, #0$/;"	l
f67c	Test/a.s	/^    f67c:	e1a04005 	mov	r4, r5$/;"	l
f680	Test/a.s	/^    f680:	e59f2094 	ldr	r2, [pc, #148]	; f71c <memalign_check+0x12c>$/;"	l
f684	Test/a.s	/^    f684:	e5923000 	ldr	r3, [r2]$/;"	l
f688	Test/a.s	/^    f688:	e1530004 	cmp	r3, r4$/;"	l
f68c	Test/a.s	/^    f68c:	1a000005 	bne	f6a8 <memalign_check+0xb8>$/;"	l
f690	Test/a.s	/^    f690:	e1a00004 	mov	r0, r4$/;"	l
f694	Test/a.s	/^    f694:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
f698	Test/a.s	/^    f698:	e1a0e00f 	mov	lr, pc$/;"	l
f69c	Test/a.s	/^    f69c:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
f6a0	Test/a.s	/^    f6a0:	3afffff7 	bcc	f684 <memalign_check+0x94>$/;"	l
f6a4	Test/a.s	/^    f6a4:	e1a03004 	mov	r3, r4$/;"	l
f6a8	Test/a.s	/^    f6a8:	e1550003 	cmp	r5, r3$/;"	l
f6ac	Test/a.s	/^    f6ac:	1afffff0 	bne	f674 <memalign_check+0x84>$/;"	l
f6b0	Test/a.s	/^    f6b0:	e3550001 	cmp	r5, #1$/;"	l
f6b4	Test/a.s	/^    f6b4:	ca00000e 	bgt	f6f4 <memalign_check+0x104>$/;"	l
f6b8	Test/a.s	/^    f6b8:	e1a00008 	mov	r0, r8$/;"	l
f6bc	Test/a.s	/^    f6bc:	e1a01006 	mov	r1, r6$/;"	l
f6c0	Test/a.s	/^    f6c0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}$/;"	l
f6c4	Test/a.s	/^    f6c4:	eafff1df 	b	be48 <mem2mem_check>$/;"	l
f6c8	Test/a.s	/^    f6c8:	e1a00001 	mov	r0, r1$/;"	l
f6cc	Test/a.s	/^    f6cc:	e3a01000 	mov	r1, #0$/;"	l
f6d0	Test/a.s	/^    f6d0:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}$/;"	l
f6d4	Test/a.s	/^    f6d4:	eafffef8 	b	f2bc <malloc_check>$/;"	l
f6d8	Test/a.s	/^    f6d8:	e59f3040 	ldr	r3, [pc, #64]	; f720 <memalign_check+0x130>$/;"	l
f6dc	Test/a.s	/^    f6dc:	ebffe75f 	bl	9460 <__aeabi_read_tp>$/;"	l
f6e0	Test/a.s	/^    f6e0:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
f6e4	Test/a.s	/^    f6e4:	e3a0200c 	mov	r2, #12$/;"	l
f6e8	Test/a.s	/^    f6e8:	e7802003 	str	r2, [r0, r3]$/;"	l
f6ec	Test/a.s	/^    f6ec:	e3a00000 	mov	r0, #0$/;"	l
f6f0	Test/a.s	/^    f6f0:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}$/;"	l
f6f4	Test/a.s	/^    f6f4:	e1a00002 	mov	r0, r2$/;"	l
f6f8	Test/a.s	/^    f6f8:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
f6fc	Test/a.s	/^    f6fc:	e3a02001 	mov	r2, #1$/;"	l
f700	Test/a.s	/^    f700:	e3a03000 	mov	r3, #0$/;"	l
f704	Test/a.s	/^    f704:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
f708	Test/a.s	/^    f708:	ef000000 	svc	0x00000000$/;"	l
f70c	Test/a.s	/^    f70c:	eaffffe9 	b	f6b8 <memalign_check+0xc8>$/;"	l
f710	Test/a.s	/^    f710:	e1a00007 	mov	r0, r7$/;"	l
f714	Test/a.s	/^    f714:	eb00171d 	bl	15390 <__lll_lock_wait_private>$/;"	l
f718	Test/a.s	/^    f718:	eaffffcc 	b	f650 <memalign_check+0x60>$/;"	l
f71c	Test/a.s	/^    f71c:	0008c4b4 	.word	0x0008c4b4$/;"	l
f720	Test/a.s	/^    f720:	0007c958 	.word	0x0007c958$/;"	l
f724	Test/a.s	/^    f724:	e92d47f0 	push	{r4, r5, r6, r7, r8, r9, sl, lr}$/;"	l
f728	Test/a.s	/^    f728:	e1a04001 	mov	r4, r1$/;"	l
f72c	Test/a.s	/^    f72c:	e5911004 	ldr	r1, [r1, #4]$/;"	l
f730	Test/a.s	/^    f730:	e1a07000 	mov	r7, r0$/;"	l
f734	Test/a.s	/^    f734:	e3510008 	cmp	r1, #8$/;"	l
f738	Test/a.s	/^    f738:	e1a05002 	mov	r5, r2$/;"	l
f73c	Test/a.s	/^    f73c:	e1a08003 	mov	r8, r3$/;"	l
f740	Test/a.s	/^    f740:	9a0000a2 	bls	f9d0 <_int_realloc+0x2ac>$/;"	l
f744	Test/a.s	/^    f744:	e5902448 	ldr	r2, [r0, #1096]	; 0x448$/;"	l
f748	Test/a.s	/^    f748:	e1520005 	cmp	r2, r5$/;"	l
f74c	Test/a.s	/^    f74c:	9a00009f 	bls	f9d0 <_int_realloc+0x2ac>$/;"	l
f750	Test/a.s	/^    f750:	e3110002 	tst	r1, #2$/;"	l
f754	Test/a.s	/^    f754:	1a00009f 	bne	f9d8 <_int_realloc+0x2b4>$/;"	l
f758	Test/a.s	/^    f758:	e084a005 	add	sl, r4, r5$/;"	l
f75c	Test/a.s	/^    f75c:	e59a3004 	ldr	r3, [sl, #4]$/;"	l
f760	Test/a.s	/^    f760:	e3530008 	cmp	r3, #8$/;"	l
f764	Test/a.s	/^    f764:	e3c30007 	bic	r0, r3, #7$/;"	l
f768	Test/a.s	/^    f768:	9a000091 	bls	f9b4 <_int_realloc+0x290>$/;"	l
f76c	Test/a.s	/^    f76c:	e1520000 	cmp	r2, r0$/;"	l
f770	Test/a.s	/^    f770:	9a00008f 	bls	f9b4 <_int_realloc+0x290>$/;"	l
f774	Test/a.s	/^    f774:	e1550008 	cmp	r5, r8$/;"	l
f778	Test/a.s	/^    f778:	2a000037 	bcs	f85c <_int_realloc+0x138>$/;"	l
f77c	Test/a.s	/^    f77c:	e5972030 	ldr	r2, [r7, #48]	; 0x30$/;"	l
f780	Test/a.s	/^    f780:	e152000a 	cmp	r2, sl$/;"	l
f784	Test/a.s	/^    f784:	0a000044 	beq	f89c <_int_realloc+0x178>$/;"	l
f788	Test/a.s	/^    f788:	e08a2000 	add	r2, sl, r0$/;"	l
f78c	Test/a.s	/^    f78c:	e5922004 	ldr	r2, [r2, #4]$/;"	l
f790	Test/a.s	/^    f790:	e3120001 	tst	r2, #1$/;"	l
f794	Test/a.s	/^    f794:	1a000044 	bne	f8ac <_int_realloc+0x188>$/;"	l
f798	Test/a.s	/^    f798:	e0859000 	add	r9, r5, r0$/;"	l
f79c	Test/a.s	/^    f79c:	e1580009 	cmp	r8, r9$/;"	l
f7a0	Test/a.s	/^    f7a0:	8a000041 	bhi	f8ac <_int_realloc+0x188>$/;"	l
f7a4	Test/a.s	/^    f7a4:	e59a2008 	ldr	r2, [sl, #8]$/;"	l
f7a8	Test/a.s	/^    f7a8:	e59a000c 	ldr	r0, [sl, #12]$/;"	l
f7ac	Test/a.s	/^    f7ac:	e592c00c 	ldr	ip, [r2, #12]$/;"	l
f7b0	Test/a.s	/^    f7b0:	e15a000c 	cmp	sl, ip$/;"	l
f7b4	Test/a.s	/^    f7b4:	1a000096 	bne	fa14 <_int_realloc+0x2f0>$/;"	l
f7b8	Test/a.s	/^    f7b8:	e590c008 	ldr	ip, [r0, #8]$/;"	l
f7bc	Test/a.s	/^    f7bc:	e15a000c 	cmp	sl, ip$/;"	l
f7c0	Test/a.s	/^    f7c0:	1a000093 	bne	fa14 <_int_realloc+0x2f0>$/;"	l
f7c4	Test/a.s	/^    f7c4:	e3530c02 	cmp	r3, #512	; 0x200$/;"	l
f7c8	Test/a.s	/^    f7c8:	e582000c 	str	r0, [r2, #12]$/;"	l
f7cc	Test/a.s	/^    f7cc:	e5802008 	str	r2, [r0, #8]$/;"	l
f7d0	Test/a.s	/^    f7d0:	3a000002 	bcc	f7e0 <_int_realloc+0xbc>$/;"	l
f7d4	Test/a.s	/^    f7d4:	e59a3010 	ldr	r3, [sl, #16]$/;"	l
f7d8	Test/a.s	/^    f7d8:	e3530000 	cmp	r3, #0$/;"	l
f7dc	Test/a.s	/^    f7dc:	1a000093 	bne	fa30 <_int_realloc+0x30c>$/;"	l
f7e0	Test/a.s	/^    f7e0:	e59f62e0 	ldr	r6, [pc, #736]	; fac8 <_int_realloc+0x3a4>$/;"	l
f7e4	Test/a.s	/^    f7e4:	e1a05009 	mov	r5, r9$/;"	l
f7e8	Test/a.s	/^    f7e8:	e0683005 	rsb	r3, r8, r5$/;"	l
f7ec	Test/a.s	/^    f7ec:	e353000f 	cmp	r3, #15$/;"	l
f7f0	Test/a.s	/^    f7f0:	9a00001d 	bls	f86c <_int_realloc+0x148>$/;"	l
f7f4	Test/a.s	/^    f7f4:	e1570006 	cmp	r7, r6$/;"	l
f7f8	Test/a.s	/^    f7f8:	e2012007 	and	r2, r1, #7$/;"	l
f7fc	Test/a.s	/^    f7fc:	e0841008 	add	r1, r4, r8$/;"	l
f800	Test/a.s	/^    f800:	0a000067 	beq	f9a4 <_int_realloc+0x280>$/;"	l
f804	Test/a.s	/^    f804:	e3888004 	orr	r8, r8, #4$/;"	l
f808	Test/a.s	/^    f808:	e1882002 	orr	r2, r8, r2$/;"	l
f80c	Test/a.s	/^    f80c:	e5842004 	str	r2, [r4, #4]$/;"	l
f810	Test/a.s	/^    f810:	e3a00004 	mov	r0, #4$/;"	l
f814	Test/a.s	/^    f814:	e3832001 	orr	r2, r3, #1$/;"	l
f818	Test/a.s	/^    f818:	e1822000 	orr	r2, r2, r0$/;"	l
f81c	Test/a.s	/^    f81c:	e5812004 	str	r2, [r1, #4]$/;"	l
f820	Test/a.s	/^    f820:	e0813003 	add	r3, r1, r3$/;"	l
f824	Test/a.s	/^    f824:	e5932004 	ldr	r2, [r3, #4]$/;"	l
f828	Test/a.s	/^    f828:	e1a00007 	mov	r0, r7$/;"	l
f82c	Test/a.s	/^    f82c:	e3822001 	orr	r2, r2, #1$/;"	l
f830	Test/a.s	/^    f830:	e5832004 	str	r2, [r3, #4]$/;"	l
f834	Test/a.s	/^    f834:	e3a02001 	mov	r2, #1$/;"	l
f838	Test/a.s	/^    f838:	ebfff6dd 	bl	d3b4 <_int_free>$/;"	l
f83c	Test/a.s	/^    f83c:	e2846008 	add	r6, r4, #8$/;"	l
f840	Test/a.s	/^    f840:	e1a00006 	mov	r0, r6$/;"	l
f844	Test/a.s	/^    f844:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}$/;"	l
f848	Test/a.s	/^    f848:	e3c33007 	bic	r3, r3, #7$/;"	l
f84c	Test/a.s	/^    f84c:	e0855003 	add	r5, r5, r3$/;"	l
f850	Test/a.s	/^    f850:	e1580005 	cmp	r8, r5$/;"	l
f854	Test/a.s	/^    f854:	8a000064 	bhi	f9ec <_int_realloc+0x2c8>$/;"	l
f858	Test/a.s	/^    f858:	e5941004 	ldr	r1, [r4, #4]$/;"	l
f85c	Test/a.s	/^    f85c:	e0683005 	rsb	r3, r8, r5$/;"	l
f860	Test/a.s	/^    f860:	e353000f 	cmp	r3, #15$/;"	l
f864	Test/a.s	/^    f864:	e59f625c 	ldr	r6, [pc, #604]	; fac8 <_int_realloc+0x3a4>$/;"	l
f868	Test/a.s	/^    f868:	8affffe1 	bhi	f7f4 <_int_realloc+0xd0>$/;"	l
f86c	Test/a.s	/^    f86c:	e1570006 	cmp	r7, r6$/;"	l
f870	Test/a.s	/^    f870:	e2011007 	and	r1, r1, #7$/;"	l
f874	Test/a.s	/^    f874:	e1811005 	orr	r1, r1, r5$/;"	l
f878	Test/a.s	/^    f878:	13a07004 	movne	r7, #4$/;"	l
f87c	Test/a.s	/^    f87c:	03a07000 	moveq	r7, #0$/;"	l
f880	Test/a.s	/^    f880:	e1816007 	orr	r6, r1, r7$/;"	l
f884	Test/a.s	/^    f884:	e5846004 	str	r6, [r4, #4]$/;"	l
f888	Test/a.s	/^    f888:	e0845005 	add	r5, r4, r5$/;"	l
f88c	Test/a.s	/^    f88c:	e5953004 	ldr	r3, [r5, #4]$/;"	l
f890	Test/a.s	/^    f890:	e3833001 	orr	r3, r3, #1$/;"	l
f894	Test/a.s	/^    f894:	e5853004 	str	r3, [r5, #4]$/;"	l
f898	Test/a.s	/^    f898:	eaffffe7 	b	f83c <_int_realloc+0x118>$/;"	l
f89c	Test/a.s	/^    f89c:	e0850000 	add	r0, r5, r0$/;"	l
f8a0	Test/a.s	/^    f8a0:	e2883010 	add	r3, r8, #16$/;"	l
f8a4	Test/a.s	/^    f8a4:	e1500003 	cmp	r0, r3$/;"	l
f8a8	Test/a.s	/^    f8a8:	2a00002e 	bcs	f968 <_int_realloc+0x244>$/;"	l
f8ac	Test/a.s	/^    f8ac:	e1a00007 	mov	r0, r7$/;"	l
f8b0	Test/a.s	/^    f8b0:	e2481007 	sub	r1, r8, #7$/;"	l
f8b4	Test/a.s	/^    f8b4:	ebfff9db 	bl	e028 <_int_malloc>$/;"	l
f8b8	Test/a.s	/^    f8b8:	e2506000 	subs	r6, r0, #0$/;"	l
f8bc	Test/a.s	/^    f8bc:	0affffdf 	beq	f840 <_int_realloc+0x11c>$/;"	l
f8c0	Test/a.s	/^    f8c0:	e2463008 	sub	r3, r6, #8$/;"	l
f8c4	Test/a.s	/^    f8c4:	e15a0003 	cmp	sl, r3$/;"	l
f8c8	Test/a.s	/^    f8c8:	e5163004 	ldr	r3, [r6, #-4]$/;"	l
f8cc	Test/a.s	/^    f8cc:	0affffdd 	beq	f848 <_int_realloc+0x124>$/;"	l
f8d0	Test/a.s	/^    f8d0:	e2452004 	sub	r2, r5, #4$/;"	l
f8d4	Test/a.s	/^    f8d4:	e1a03122 	lsr	r3, r2, #2$/;"	l
f8d8	Test/a.s	/^    f8d8:	e3530002 	cmp	r3, #2$/;"	l
f8dc	Test/a.s	/^    f8dc:	9a000047 	bls	fa00 <_int_realloc+0x2dc>$/;"	l
f8e0	Test/a.s	/^    f8e0:	e3530009 	cmp	r3, #9$/;"	l
f8e4	Test/a.s	/^    f8e4:	8a00001c 	bhi	f95c <_int_realloc+0x238>$/;"	l
f8e8	Test/a.s	/^    f8e8:	e5942008 	ldr	r2, [r4, #8]$/;"	l
f8ec	Test/a.s	/^    f8ec:	e3530004 	cmp	r3, #4$/;"	l
f8f0	Test/a.s	/^    f8f0:	e5862000 	str	r2, [r6]$/;"	l
f8f4	Test/a.s	/^    f8f4:	e594200c 	ldr	r2, [r4, #12]$/;"	l
f8f8	Test/a.s	/^    f8f8:	e5862004 	str	r2, [r6, #4]$/;"	l
f8fc	Test/a.s	/^    f8fc:	e5942010 	ldr	r2, [r4, #16]$/;"	l
f900	Test/a.s	/^    f900:	e5862008 	str	r2, [r6, #8]$/;"	l
f904	Test/a.s	/^    f904:	9a00000e 	bls	f944 <_int_realloc+0x220>$/;"	l
f908	Test/a.s	/^    f908:	e5942014 	ldr	r2, [r4, #20]$/;"	l
f90c	Test/a.s	/^    f90c:	e3530006 	cmp	r3, #6$/;"	l
f910	Test/a.s	/^    f910:	e586200c 	str	r2, [r6, #12]$/;"	l
f914	Test/a.s	/^    f914:	e5942018 	ldr	r2, [r4, #24]$/;"	l
f918	Test/a.s	/^    f918:	e5862010 	str	r2, [r6, #16]$/;"	l
f91c	Test/a.s	/^    f91c:	9a000008 	bls	f944 <_int_realloc+0x220>$/;"	l
f920	Test/a.s	/^    f920:	e594201c 	ldr	r2, [r4, #28]$/;"	l
f924	Test/a.s	/^    f924:	e3530009 	cmp	r3, #9$/;"	l
f928	Test/a.s	/^    f928:	e5862014 	str	r2, [r6, #20]$/;"	l
f92c	Test/a.s	/^    f92c:	e5943020 	ldr	r3, [r4, #32]$/;"	l
f930	Test/a.s	/^    f930:	e5863018 	str	r3, [r6, #24]$/;"	l
f934	Test/a.s	/^    f934:	05943024 	ldreq	r3, [r4, #36]	; 0x24$/;"	l
f938	Test/a.s	/^    f938:	0586301c 	streq	r3, [r6, #28]$/;"	l
f93c	Test/a.s	/^    f93c:	05943028 	ldreq	r3, [r4, #40]	; 0x28$/;"	l
f940	Test/a.s	/^    f940:	05863020 	streq	r3, [r6, #32]$/;"	l
f944	Test/a.s	/^    f944:	e1a00007 	mov	r0, r7$/;"	l
f948	Test/a.s	/^    f948:	e1a01004 	mov	r1, r4$/;"	l
f94c	Test/a.s	/^    f94c:	e3a02001 	mov	r2, #1$/;"	l
f950	Test/a.s	/^    f950:	ebfff697 	bl	d3b4 <_int_free>$/;"	l
f954	Test/a.s	/^    f954:	e1a00006 	mov	r0, r6$/;"	l
f958	Test/a.s	/^    f958:	e8bd87f0 	pop	{r4, r5, r6, r7, r8, r9, sl, pc}$/;"	l
f95c	Test/a.s	/^    f95c:	e2841008 	add	r1, r4, #8$/;"	l
f960	Test/a.s	/^    f960:	eb000ee6 	bl	13500 <memcpy>$/;"	l
f964	Test/a.s	/^    f964:	eafffff6 	b	f944 <_int_realloc+0x220>$/;"	l
f968	Test/a.s	/^    f968:	e59f3158 	ldr	r3, [pc, #344]	; fac8 <_int_realloc+0x3a4>$/;"	l
f96c	Test/a.s	/^    f96c:	e2011007 	and	r1, r1, #7$/;"	l
f970	Test/a.s	/^    f970:	e1570003 	cmp	r7, r3$/;"	l
f974	Test/a.s	/^    f974:	e1881001 	orr	r1, r8, r1$/;"	l
f978	Test/a.s	/^    f978:	e0680000 	rsb	r0, r8, r0$/;"	l
f97c	Test/a.s	/^    f97c:	13a03004 	movne	r3, #4$/;"	l
f980	Test/a.s	/^    f980:	03a03000 	moveq	r3, #0$/;"	l
f984	Test/a.s	/^    f984:	e0848008 	add	r8, r4, r8$/;"	l
f988	Test/a.s	/^    f988:	e3800001 	orr	r0, r0, #1$/;"	l
f98c	Test/a.s	/^    f98c:	e1813003 	orr	r3, r1, r3$/;"	l
f990	Test/a.s	/^    f990:	e5843004 	str	r3, [r4, #4]$/;"	l
f994	Test/a.s	/^    f994:	e2846008 	add	r6, r4, #8$/;"	l
f998	Test/a.s	/^    f998:	e5878030 	str	r8, [r7, #48]	; 0x30$/;"	l
f99c	Test/a.s	/^    f99c:	e5880004 	str	r0, [r8, #4]$/;"	l
f9a0	Test/a.s	/^    f9a0:	eaffffa6 	b	f840 <_int_realloc+0x11c>$/;"	l
f9a4	Test/a.s	/^    f9a4:	e1822008 	orr	r2, r2, r8$/;"	l
f9a8	Test/a.s	/^    f9a8:	e5842004 	str	r2, [r4, #4]$/;"	l
f9ac	Test/a.s	/^    f9ac:	e3a00000 	mov	r0, #0$/;"	l
f9b0	Test/a.s	/^    f9b0:	eaffff97 	b	f814 <_int_realloc+0xf0>$/;"	l
f9b4	Test/a.s	/^    f9b4:	e59f1110 	ldr	r1, [pc, #272]	; facc <_int_realloc+0x3a8>$/;"	l
f9b8	Test/a.s	/^    f9b8:	e59f3108 	ldr	r3, [pc, #264]	; fac8 <_int_realloc+0x3a4>$/;"	l
f9bc	Test/a.s	/^    f9bc:	e2842008 	add	r2, r4, #8$/;"	l
f9c0	Test/a.s	/^    f9c0:	e593048c 	ldr	r0, [r3, #1164]	; 0x48c$/;"	l
f9c4	Test/a.s	/^    f9c4:	ebfff49f 	bl	cc48 <malloc_printerr>$/;"	l
f9c8	Test/a.s	/^    f9c8:	e3a06000 	mov	r6, #0$/;"	l
f9cc	Test/a.s	/^    f9cc:	eaffff9b 	b	f840 <_int_realloc+0x11c>$/;"	l
f9d0	Test/a.s	/^    f9d0:	e59f10f8 	ldr	r1, [pc, #248]	; fad0 <_int_realloc+0x3ac>$/;"	l
f9d4	Test/a.s	/^    f9d4:	eafffff7 	b	f9b8 <_int_realloc+0x294>$/;"	l
f9d8	Test/a.s	/^    f9d8:	e59f00f4 	ldr	r0, [pc, #244]	; fad4 <_int_realloc+0x3b0>$/;"	l
f9dc	Test/a.s	/^    f9dc:	e59f10f4 	ldr	r1, [pc, #244]	; fad8 <_int_realloc+0x3b4>$/;"	l
f9e0	Test/a.s	/^    f9e0:	e59f20f4 	ldr	r2, [pc, #244]	; fadc <_int_realloc+0x3b8>$/;"	l
f9e4	Test/a.s	/^    f9e4:	e59f30f4 	ldr	r3, [pc, #244]	; fae0 <_int_realloc+0x3bc>$/;"	l
f9e8	Test/a.s	/^    f9e8:	ebfff25b 	bl	c35c <__malloc_assert>$/;"	l
f9ec	Test/a.s	/^    f9ec:	e59f00f0 	ldr	r0, [pc, #240]	; fae4 <_int_realloc+0x3c0>$/;"	l
f9f0	Test/a.s	/^    f9f0:	e59f10e0 	ldr	r1, [pc, #224]	; fad8 <_int_realloc+0x3b4>$/;"	l
f9f4	Test/a.s	/^    f9f4:	e59f20ec 	ldr	r2, [pc, #236]	; fae8 <_int_realloc+0x3c4>$/;"	l
f9f8	Test/a.s	/^    f9f8:	e59f30e0 	ldr	r3, [pc, #224]	; fae0 <_int_realloc+0x3bc>$/;"	l
f9fc	Test/a.s	/^    f9fc:	ebfff256 	bl	c35c <__malloc_assert>$/;"	l
fValue	header.h	/^        float fValue;$/;"	m	union:EXPRSemanticValue::__anon5
fa00	Test/a.s	/^    fa00:	e59f00e4 	ldr	r0, [pc, #228]	; faec <_int_realloc+0x3c8>$/;"	l
fa04	Test/a.s	/^    fa04:	e59f10cc 	ldr	r1, [pc, #204]	; fad8 <_int_realloc+0x3b4>$/;"	l
fa08	Test/a.s	/^    fa08:	e59f20e0 	ldr	r2, [pc, #224]	; faf0 <_int_realloc+0x3cc>$/;"	l
fa0c	Test/a.s	/^    fa0c:	e59f30cc 	ldr	r3, [pc, #204]	; fae0 <_int_realloc+0x3bc>$/;"	l
fa10	Test/a.s	/^    fa10:	ebfff251 	bl	c35c <__malloc_assert>$/;"	l
fa14	Test/a.s	/^    fa14:	e59f60ac 	ldr	r6, [pc, #172]	; fac8 <_int_realloc+0x3a4>$/;"	l
fa18	Test/a.s	/^    fa18:	e59f10d4 	ldr	r1, [pc, #212]	; faf4 <_int_realloc+0x3d0>$/;"	l
fa1c	Test/a.s	/^    fa1c:	e1a0200a 	mov	r2, sl$/;"	l
fa20	Test/a.s	/^    fa20:	e596048c 	ldr	r0, [r6, #1164]	; 0x48c$/;"	l
fa24	Test/a.s	/^    fa24:	ebfff487 	bl	cc48 <malloc_printerr>$/;"	l
fa28	Test/a.s	/^    fa28:	e5941004 	ldr	r1, [r4, #4]$/;"	l
fa2c	Test/a.s	/^    fa2c:	eaffff6c 	b	f7e4 <_int_realloc+0xc0>$/;"	l
fa30	Test/a.s	/^    fa30:	e5930014 	ldr	r0, [r3, #20]$/;"	l
fa34	Test/a.s	/^    fa34:	e150000a 	cmp	r0, sl$/;"	l
fa38	Test/a.s	/^    fa38:	1a00000b 	bne	fa6c <_int_realloc+0x348>$/;"	l
fa3c	Test/a.s	/^    fa3c:	e59a0014 	ldr	r0, [sl, #20]$/;"	l
fa40	Test/a.s	/^    fa40:	e590c010 	ldr	ip, [r0, #16]$/;"	l
fa44	Test/a.s	/^    fa44:	e15a000c 	cmp	sl, ip$/;"	l
fa48	Test/a.s	/^    fa48:	1a000016 	bne	faa8 <_int_realloc+0x384>$/;"	l
fa4c	Test/a.s	/^    fa4c:	e592c010 	ldr	ip, [r2, #16]$/;"	l
fa50	Test/a.s	/^    fa50:	e35c0000 	cmp	ip, #0$/;"	l
fa54	Test/a.s	/^    fa54:	0a000009 	beq	fa80 <_int_realloc+0x35c>$/;"	l
fa58	Test/a.s	/^    fa58:	e5830014 	str	r0, [r3, #20]$/;"	l
fa5c	Test/a.s	/^    fa5c:	e59a2014 	ldr	r2, [sl, #20]$/;"	l
fa60	Test/a.s	/^    fa60:	e59f6060 	ldr	r6, [pc, #96]	; fac8 <_int_realloc+0x3a4>$/;"	l
fa64	Test/a.s	/^    fa64:	e5823010 	str	r3, [r2, #16]$/;"	l
fa68	Test/a.s	/^    fa68:	eaffff5d 	b	f7e4 <_int_realloc+0xc0>$/;"	l
fa6c	Test/a.s	/^    fa6c:	e59f0084 	ldr	r0, [pc, #132]	; faf8 <_int_realloc+0x3d4>$/;"	l
fa70	Test/a.s	/^    fa70:	e59f1060 	ldr	r1, [pc, #96]	; fad8 <_int_realloc+0x3b4>$/;"	l
fa74	Test/a.s	/^    fa74:	e59f2080 	ldr	r2, [pc, #128]	; fafc <_int_realloc+0x3d8>$/;"	l
fa78	Test/a.s	/^    fa78:	e59f3060 	ldr	r3, [pc, #96]	; fae0 <_int_realloc+0x3bc>$/;"	l
fa7c	Test/a.s	/^    fa7c:	ebfff236 	bl	c35c <__malloc_assert>$/;"	l
fa80	Test/a.s	/^    fa80:	e153000a 	cmp	r3, sl$/;"	l
fa84	Test/a.s	/^    fa84:	0a00000c 	beq	fabc <_int_realloc+0x398>$/;"	l
fa88	Test/a.s	/^    fa88:	e5823010 	str	r3, [r2, #16]$/;"	l
fa8c	Test/a.s	/^    fa8c:	e59a3010 	ldr	r3, [sl, #16]$/;"	l
fa90	Test/a.s	/^    fa90:	e5820014 	str	r0, [r2, #20]$/;"	l
fa94	Test/a.s	/^    fa94:	e5832014 	str	r2, [r3, #20]$/;"	l
fa98	Test/a.s	/^    fa98:	e59a3014 	ldr	r3, [sl, #20]$/;"	l
fa9c	Test/a.s	/^    fa9c:	e59f6024 	ldr	r6, [pc, #36]	; fac8 <_int_realloc+0x3a4>$/;"	l
faa0	Test/a.s	/^    faa0:	e5832010 	str	r2, [r3, #16]$/;"	l
faa4	Test/a.s	/^    faa4:	eaffff4e 	b	f7e4 <_int_realloc+0xc0>$/;"	l
faa8	Test/a.s	/^    faa8:	e59f0050 	ldr	r0, [pc, #80]	; fb00 <_int_realloc+0x3dc>$/;"	l
faac	Test/a.s	/^    faac:	e59f1024 	ldr	r1, [pc, #36]	; fad8 <_int_realloc+0x3b4>$/;"	l
fab0	Test/a.s	/^    fab0:	e59f2044 	ldr	r2, [pc, #68]	; fafc <_int_realloc+0x3d8>$/;"	l
fab4	Test/a.s	/^    fab4:	e59f3024 	ldr	r3, [pc, #36]	; fae0 <_int_realloc+0x3bc>$/;"	l
fab8	Test/a.s	/^    fab8:	ebfff227 	bl	c35c <__malloc_assert>$/;"	l
fabc	Test/a.s	/^    fabc:	e5822014 	str	r2, [r2, #20]$/;"	l
fac0	Test/a.s	/^    fac0:	e5822010 	str	r2, [r2, #16]$/;"	l
fac4	Test/a.s	/^    fac4:	eaffff45 	b	f7e0 <_int_realloc+0xbc>$/;"	l
fac8	Test/a.s	/^    fac8:	0008c4b4 	.word	0x0008c4b4$/;"	l
facc	Test/a.s	/^    facc:	0006d608 	.word	0x0006d608$/;"	l
fact	Test/recursive.c	/^int fact()$/;"	f
factor	parser.y	/^factor		: MK_LPAREN relop_expr MK_RPAREN$/;"	l
fad0	Test/a.s	/^    fad0:	0006d5ec 	.word	0x0006d5ec$/;"	l
fad4	Test/a.s	/^    fad4:	0006d628 	.word	0x0006d628$/;"	l
fad8	Test/a.s	/^    fad8:	0006c930 	.word	0x0006c930$/;"	l
fadc	Test/a.s	/^    fadc:	0000103d 	.word	0x0000103d$/;"	l
fae0	Test/a.s	/^    fae0:	0006debc 	.word	0x0006debc$/;"	l
fae4	Test/a.s	/^    fae4:	0006d6a0 	.word	0x0006d6a0$/;"	l
fae8	Test/a.s	/^    fae8:	0000109e 	.word	0x0000109e$/;"	l
faec	Test/a.s	/^    faec:	0006d690 	.word	0x0006d690$/;"	l
faf0	Test/a.s	/^    faf0:	0000107e 	.word	0x0000107e$/;"	l
faf4	Test/a.s	/^    faf4:	0006ca68 	.word	0x0006ca68$/;"	l
faf8	Test/a.s	/^    faf8:	0006d640 	.word	0x0006d640$/;"	l
fafc	Test/a.s	/^    fafc:	00001060 	.word	0x00001060$/;"	l
fb00	Test/a.s	/^    fb00:	0006d668 	.word	0x0006d668$/;"	l
fb04	Test/a.s	/^    fb04:	e3500000 	cmp	r0, #0$/;"	l
fb08	Test/a.s	/^    fb08:	e92d4010 	push	{r4, lr}$/;"	l
fb0c	Test/a.s	/^    fb0c:	08bd8010 	popeq	{r4, pc}$/;"	l
fb10	Test/a.s	/^    fb10:	e5103004 	ldr	r3, [r0, #-4]$/;"	l
fb14	Test/a.s	/^    fb14:	e2401008 	sub	r1, r0, #8$/;"	l
fb18	Test/a.s	/^    fb18:	e3130002 	tst	r3, #2$/;"	l
fb1c	Test/a.s	/^    fb1c:	1a00000e 	bne	fb5c <free_atfork+0x58>$/;"	l
fb20	Test/a.s	/^    fb20:	e3130004 	tst	r3, #4$/;"	l
fb24	Test/a.s	/^    fb24:	11a03a21 	lsrne	r3, r1, #20$/;"	l
fb28	Test/a.s	/^    fb28:	11a03a03 	lslne	r3, r3, #20$/;"	l
fb2c	Test/a.s	/^    fb2c:	15934000 	ldrne	r4, [r3]$/;"	l
fb30	Test/a.s	/^    fb30:	e59f3030 	ldr	r3, [pc, #48]	; fb68 <free_atfork+0x64>$/;"	l
fb34	Test/a.s	/^    fb34:	059f4030 	ldreq	r4, [pc, #48]	; fb6c <free_atfork+0x68>$/;"	l
fb38	Test/a.s	/^    fb38:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
fb3c	Test/a.s	/^    fb3c:	ebffe647 	bl	9460 <__aeabi_read_tp>$/;"	l
fb40	Test/a.s	/^    fb40:	e7902003 	ldr	r2, [r0, r3]$/;"	l
fb44	Test/a.s	/^    fb44:	e1a00004 	mov	r0, r4$/;"	l
fb48	Test/a.s	/^    fb48:	e3720001 	cmn	r2, #1$/;"	l
fb4c	Test/a.s	/^    fb4c:	13a02000 	movne	r2, #0$/;"	l
fb50	Test/a.s	/^    fb50:	03a02001 	moveq	r2, #1$/;"	l
fb54	Test/a.s	/^    fb54:	e8bd4010 	pop	{r4, lr}$/;"	l
fb58	Test/a.s	/^    fb58:	eafff615 	b	d3b4 <_int_free>$/;"	l
fb5c	Test/a.s	/^    fb5c:	e1a00001 	mov	r0, r1$/;"	l
fb60	Test/a.s	/^    fb60:	e8bd4010 	pop	{r4, lr}$/;"	l
fb64	Test/a.s	/^    fb64:	eafff5e9 	b	d310 <munmap_chunk>$/;"	l
fb68	Test/a.s	/^    fb68:	0007c4cc 	.word	0x0007c4cc$/;"	l
fb6c	Test/a.s	/^    fb6c:	0008c4b4 	.word	0x0008c4b4$/;"	l
fb70	Test/a.s	/^    fb70:	e92d41f0 	push	{r4, r5, r6, r7, r8, lr}$/;"	l
fb74	Test/a.s	/^    fb74:	e2508000 	subs	r8, r0, #0$/;"	l
fb78	Test/a.s	/^    fb78:	08bd81f0 	popeq	{r4, r5, r6, r7, r8, pc}$/;"	l
fb7c	Test/a.s	/^    fb7c:	e59f51b0 	ldr	r5, [pc, #432]	; fd34 <free_check+0x1c4>$/;"	l
fb80	Test/a.s	/^    fb80:	e3a01001 	mov	r1, #1$/;"	l
fb84	Test/a.s	/^    fb84:	e1a02005 	mov	r2, r5$/;"	l
fb88	Test/a.s	/^    fb88:	e3a04000 	mov	r4, #0$/;"	l
fb8c	Test/a.s	/^    fb8c:	e5923000 	ldr	r3, [r2]$/;"	l
fb90	Test/a.s	/^    fb90:	e1530004 	cmp	r3, r4$/;"	l
fb94	Test/a.s	/^    fb94:	1a000005 	bne	fbb0 <free_check+0x40>$/;"	l
fb98	Test/a.s	/^    fb98:	e1a00004 	mov	r0, r4$/;"	l
fb9c	Test/a.s	/^    fb9c:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
fba0	Test/a.s	/^    fba0:	e1a0e00f 	mov	lr, pc$/;"	l
fba4	Test/a.s	/^    fba4:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
fba8	Test/a.s	/^    fba8:	3afffff7 	bcc	fb8c <free_check+0x1c>$/;"	l
fbac	Test/a.s	/^    fbac:	e1a03004 	mov	r3, r4$/;"	l
fbb0	Test/a.s	/^    fbb0:	e1530004 	cmp	r3, r4$/;"	l
fbb4	Test/a.s	/^    fbb4:	1a00004d 	bne	fcf0 <free_check+0x180>$/;"	l
fbb8	Test/a.s	/^    fbb8:	e1a00008 	mov	r0, r8$/;"	l
fbbc	Test/a.s	/^    fbbc:	e3a01000 	mov	r1, #0$/;"	l
fbc0	Test/a.s	/^    fbc0:	ebfff0bf 	bl	bec4 <mem2chunk_check>$/;"	l
fbc4	Test/a.s	/^    fbc4:	e2506000 	subs	r6, r0, #0$/;"	l
fbc8	Test/a.s	/^    fbc8:	0a000032 	beq	fc98 <free_check+0x128>$/;"	l
fbcc	Test/a.s	/^    fbcc:	e5963004 	ldr	r3, [r6, #4]$/;"	l
fbd0	Test/a.s	/^    fbd0:	e3130002 	tst	r3, #2$/;"	l
fbd4	Test/a.s	/^    fbd4:	0a000013 	beq	fc28 <free_check+0xb8>$/;"	l
fbd8	Test/a.s	/^    fbd8:	e5957000 	ldr	r7, [r5]$/;"	l
fbdc	Test/a.s	/^    fbdc:	e3a01000 	mov	r1, #0$/;"	l
fbe0	Test/a.s	/^    fbe0:	e1a04007 	mov	r4, r7$/;"	l
fbe4	Test/a.s	/^    fbe4:	e59f2148 	ldr	r2, [pc, #328]	; fd34 <free_check+0x1c4>$/;"	l
fbe8	Test/a.s	/^    fbe8:	e5923000 	ldr	r3, [r2]$/;"	l
fbec	Test/a.s	/^    fbec:	e1530004 	cmp	r3, r4$/;"	l
fbf0	Test/a.s	/^    fbf0:	1a000005 	bne	fc0c <free_check+0x9c>$/;"	l
fbf4	Test/a.s	/^    fbf4:	e1a00004 	mov	r0, r4$/;"	l
fbf8	Test/a.s	/^    fbf8:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
fbfc	Test/a.s	/^    fbfc:	e1a0e00f 	mov	lr, pc$/;"	l
fc00	Test/a.s	/^    fc00:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
fc04	Test/a.s	/^    fc04:	3afffff7 	bcc	fbe8 <free_check+0x78>$/;"	l
fc08	Test/a.s	/^    fc08:	e1a03004 	mov	r3, r4$/;"	l
fc0c	Test/a.s	/^    fc0c:	e1570003 	cmp	r7, r3$/;"	l
fc10	Test/a.s	/^    fc10:	1afffff0 	bne	fbd8 <free_check+0x68>$/;"	l
fc14	Test/a.s	/^    fc14:	e3570001 	cmp	r7, #1$/;"	l
fc18	Test/a.s	/^    fc18:	ca000037 	bgt	fcfc <free_check+0x18c>$/;"	l
fc1c	Test/a.s	/^    fc1c:	e1a00006 	mov	r0, r6$/;"	l
fc20	Test/a.s	/^    fc20:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}$/;"	l
fc24	Test/a.s	/^    fc24:	eafff5b9 	b	d310 <munmap_chunk>$/;"	l
fc28	Test/a.s	/^    fc28:	e1a01006 	mov	r1, r6$/;"	l
fc2c	Test/a.s	/^    fc2c:	e59f0100 	ldr	r0, [pc, #256]	; fd34 <free_check+0x1c4>$/;"	l
fc30	Test/a.s	/^    fc30:	e3a02001 	mov	r2, #1$/;"	l
fc34	Test/a.s	/^    fc34:	ebfff5de 	bl	d3b4 <_int_free>$/;"	l
fc38	Test/a.s	/^    fc38:	e5956000 	ldr	r6, [r5]$/;"	l
fc3c	Test/a.s	/^    fc3c:	e3a01000 	mov	r1, #0$/;"	l
fc40	Test/a.s	/^    fc40:	e1a04006 	mov	r4, r6$/;"	l
fc44	Test/a.s	/^    fc44:	e59f20e8 	ldr	r2, [pc, #232]	; fd34 <free_check+0x1c4>$/;"	l
fc48	Test/a.s	/^    fc48:	e5923000 	ldr	r3, [r2]$/;"	l
fc4c	Test/a.s	/^    fc4c:	e1530004 	cmp	r3, r4$/;"	l
fc50	Test/a.s	/^    fc50:	1a000005 	bne	fc6c <free_check+0xfc>$/;"	l
fc54	Test/a.s	/^    fc54:	e1a00004 	mov	r0, r4$/;"	l
fc58	Test/a.s	/^    fc58:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
fc5c	Test/a.s	/^    fc5c:	e1a0e00f 	mov	lr, pc$/;"	l
fc60	Test/a.s	/^    fc60:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
fc64	Test/a.s	/^    fc64:	3afffff7 	bcc	fc48 <free_check+0xd8>$/;"	l
fc68	Test/a.s	/^    fc68:	e1a03004 	mov	r3, r4$/;"	l
fc6c	Test/a.s	/^    fc6c:	e1560003 	cmp	r6, r3$/;"	l
fc70	Test/a.s	/^    fc70:	1afffff0 	bne	fc38 <free_check+0xc8>$/;"	l
fc74	Test/a.s	/^    fc74:	e3560001 	cmp	r6, #1$/;"	l
fc78	Test/a.s	/^    fc78:	d8bd81f0 	pople	{r4, r5, r6, r7, r8, pc}$/;"	l
fc7c	Test/a.s	/^    fc7c:	e1a00002 	mov	r0, r2$/;"	l
fc80	Test/a.s	/^    fc80:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
fc84	Test/a.s	/^    fc84:	e3a02001 	mov	r2, #1$/;"	l
fc88	Test/a.s	/^    fc88:	e3a03000 	mov	r3, #0$/;"	l
fc8c	Test/a.s	/^    fc8c:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
fc90	Test/a.s	/^    fc90:	ef000000 	svc	0x00000000$/;"	l
fc94	Test/a.s	/^    fc94:	e8bd81f0 	pop	{r4, r5, r6, r7, r8, pc}$/;"	l
fc98	Test/a.s	/^    fc98:	e5956000 	ldr	r6, [r5]$/;"	l
fc9c	Test/a.s	/^    fc9c:	e3a01000 	mov	r1, #0$/;"	l
fca0	Test/a.s	/^    fca0:	e1a04006 	mov	r4, r6$/;"	l
fca4	Test/a.s	/^    fca4:	e59f2088 	ldr	r2, [pc, #136]	; fd34 <free_check+0x1c4>$/;"	l
fca8	Test/a.s	/^    fca8:	e5923000 	ldr	r3, [r2]$/;"	l
fcac	Test/a.s	/^    fcac:	e1530004 	cmp	r3, r4$/;"	l
fcb0	Test/a.s	/^    fcb0:	1a000005 	bne	fccc <free_check+0x15c>$/;"	l
fcb4	Test/a.s	/^    fcb4:	e1a00004 	mov	r0, r4$/;"	l
fcb8	Test/a.s	/^    fcb8:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
fcbc	Test/a.s	/^    fcbc:	e1a0e00f 	mov	lr, pc$/;"	l
fcc0	Test/a.s	/^    fcc0:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
fcc4	Test/a.s	/^    fcc4:	3afffff7 	bcc	fca8 <free_check+0x138>$/;"	l
fcc8	Test/a.s	/^    fcc8:	e1a03004 	mov	r3, r4$/;"	l
fccc	Test/a.s	/^    fccc:	e1560003 	cmp	r6, r3$/;"	l
fcd0	Test/a.s	/^    fcd0:	1afffff0 	bne	fc98 <free_check+0x128>$/;"	l
fcd4	Test/a.s	/^    fcd4:	e3560001 	cmp	r6, #1$/;"	l
fcd8	Test/a.s	/^    fcd8:	ca00000e 	bgt	fd18 <free_check+0x1a8>$/;"	l
fcdc	Test/a.s	/^    fcdc:	e595048c 	ldr	r0, [r5, #1164]	; 0x48c$/;"	l
fce0	Test/a.s	/^    fce0:	e59f1050 	ldr	r1, [pc, #80]	; fd38 <free_check+0x1c8>$/;"	l
fce4	Test/a.s	/^    fce4:	e1a02008 	mov	r2, r8$/;"	l
fce8	Test/a.s	/^    fce8:	e8bd41f0 	pop	{r4, r5, r6, r7, r8, lr}$/;"	l
fcec	Test/a.s	/^    fcec:	eafff3d5 	b	cc48 <malloc_printerr>$/;"	l
fcf0	Test/a.s	/^    fcf0:	e1a00005 	mov	r0, r5$/;"	l
fcf4	Test/a.s	/^    fcf4:	eb0015a5 	bl	15390 <__lll_lock_wait_private>$/;"	l
fcf8	Test/a.s	/^    fcf8:	eaffffae 	b	fbb8 <free_check+0x48>$/;"	l
fcfc	Test/a.s	/^    fcfc:	e1a00002 	mov	r0, r2$/;"	l
fd00	Test/a.s	/^    fd00:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
fd04	Test/a.s	/^    fd04:	e3a02001 	mov	r2, #1$/;"	l
fd08	Test/a.s	/^    fd08:	e3a03000 	mov	r3, #0$/;"	l
fd0c	Test/a.s	/^    fd0c:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
fd10	Test/a.s	/^    fd10:	ef000000 	svc	0x00000000$/;"	l
fd14	Test/a.s	/^    fd14:	eaffffc0 	b	fc1c <free_check+0xac>$/;"	l
fd18	Test/a.s	/^    fd18:	e1a00002 	mov	r0, r2$/;"	l
fd1c	Test/a.s	/^    fd1c:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
fd20	Test/a.s	/^    fd20:	e3a02001 	mov	r2, #1$/;"	l
fd24	Test/a.s	/^    fd24:	e3a03000 	mov	r3, #0$/;"	l
fd28	Test/a.s	/^    fd28:	e3a070f0 	mov	r7, #240	; 0xf0$/;"	l
fd2c	Test/a.s	/^    fd2c:	ef000000 	svc	0x00000000$/;"	l
fd30	Test/a.s	/^    fd30:	eaffffe9 	b	fcdc <free_check+0x16c>$/;"	l
fd34	Test/a.s	/^    fd34:	0008c4b4 	.word	0x0008c4b4$/;"	l
fd38	Test/a.s	/^    fd38:	0006cc48 	.word	0x0006cc48$/;"	l
fd3c	Test/a.s	/^    fd3c:	e92d4ff0 	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}$/;"	l
fd40	Test/a.s	/^    fd40:	e3710001 	cmn	r1, #1$/;"	l
fd44	Test/a.s	/^    fd44:	e24dd014 	sub	sp, sp, #20$/;"	l
fd48	Test/a.s	/^    fd48:	e1a05001 	mov	r5, r1$/;"	l
fd4c	Test/a.s	/^    fd4c:	e1a06000 	mov	r6, r0$/;"	l
fd50	Test/a.s	/^    fd50:	0a000092 	beq	ffa0 <realloc_check+0x264>$/;"	l
fd54	Test/a.s	/^    fd54:	e3500000 	cmp	r0, #0$/;"	l
fd58	Test/a.s	/^    fd58:	0a00008c 	beq	ff90 <realloc_check+0x254>$/;"	l
fd5c	Test/a.s	/^    fd5c:	e3510000 	cmp	r1, #0$/;"	l
fd60	Test/a.s	/^    fd60:	0a000095 	beq	ffbc <realloc_check+0x280>$/;"	l
fd64	Test/a.s	/^    fd64:	e59fa2cc 	ldr	sl, [pc, #716]	; 10038 <realloc_check+0x2fc>$/;"	l
fd68	Test/a.s	/^    fd68:	e3a01001 	mov	r1, #1$/;"	l
fd6c	Test/a.s	/^    fd6c:	e1a0200a 	mov	r2, sl$/;"	l
fd70	Test/a.s	/^    fd70:	e3a04000 	mov	r4, #0$/;"	l
fd74	Test/a.s	/^    fd74:	e5923000 	ldr	r3, [r2]$/;"	l
fd78	Test/a.s	/^    fd78:	e1530004 	cmp	r3, r4$/;"	l
fd7c	Test/a.s	/^    fd7c:	1a000005 	bne	fd98 <realloc_check+0x5c>$/;"	l
fd80	Test/a.s	/^    fd80:	e1a00004 	mov	r0, r4$/;"	l
fd84	Test/a.s	/^    fd84:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
fd88	Test/a.s	/^    fd88:	e1a0e00f 	mov	lr, pc$/;"	l
fd8c	Test/a.s	/^    fd8c:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
fd90	Test/a.s	/^    fd90:	3afffff7 	bcc	fd74 <realloc_check+0x38>$/;"	l
fd94	Test/a.s	/^    fd94:	e1a03004 	mov	r3, r4$/;"	l
fd98	Test/a.s	/^    fd98:	e1530004 	cmp	r3, r4$/;"	l
fd9c	Test/a.s	/^    fd9c:	1a000091 	bne	ffe8 <realloc_check+0x2ac>$/;"	l
fda0	Test/a.s	/^    fda0:	e1a00006 	mov	r0, r6$/;"	l
fda4	Test/a.s	/^    fda4:	e28d100c 	add	r1, sp, #12$/;"	l
fda8	Test/a.s	/^    fda8:	ebfff045 	bl	bec4 <mem2chunk_check>$/;"	l
fdac	Test/a.s	/^    fdac:	e1a08000 	mov	r8, r0$/;"	l
fdb0	Test/a.s	/^    fdb0:	e59a7000 	ldr	r7, [sl]$/;"	l
fdb4	Test/a.s	/^    fdb4:	e3a01000 	mov	r1, #0$/;"	l
fdb8	Test/a.s	/^    fdb8:	e1a04007 	mov	r4, r7$/;"	l
fdbc	Test/a.s	/^    fdbc:	e59f2274 	ldr	r2, [pc, #628]	; 10038 <realloc_check+0x2fc>$/;"	l
fdc0	Test/a.s	/^    fdc0:	e5923000 	ldr	r3, [r2]$/;"	l
fdc4	Test/a.s	/^    fdc4:	e1530004 	cmp	r3, r4$/;"	l
fdc8	Test/a.s	/^    fdc8:	1a000005 	bne	fde4 <realloc_check+0xa8>$/;"	l
fdcc	Test/a.s	/^    fdcc:	e1a00004 	mov	r0, r4$/;"	l
fdd0	Test/a.s	/^    fdd0:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
fdd4	Test/a.s	/^    fdd4:	e1a0e00f 	mov	lr, pc$/;"	l
fdd8	Test/a.s	/^    fdd8:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
fddc	Test/a.s	/^    fddc:	3afffff7 	bcc	fdc0 <realloc_check+0x84>$/;"	l
fde0	Test/a.s	/^    fde0:	e1a03004 	mov	r3, r4$/;"	l
fde4	Test/a.s	/^    fde4:	e1570003 	cmp	r7, r3$/;"	l
fde8	Test/a.s	/^    fde8:	1afffff0 	bne	fdb0 <realloc_check+0x74>$/;"	l
fdec	Test/a.s	/^    fdec:	e3570001 	cmp	r7, #1$/;"	l
fdf0	Test/a.s	/^    fdf0:	ca00007f 	bgt	fff4 <realloc_check+0x2b8>$/;"	l
fdf4	Test/a.s	/^    fdf4:	e3580000 	cmp	r8, #0$/;"	l
fdf8	Test/a.s	/^    fdf8:	0a000072 	beq	ffc8 <realloc_check+0x28c>$/;"	l
fdfc	Test/a.s	/^    fdfc:	e598b004 	ldr	fp, [r8, #4]$/;"	l
fe00	Test/a.s	/^    fe00:	e2859001 	add	r9, r5, #1$/;"	l
fe04	Test/a.s	/^    fe04:	e3cbb007 	bic	fp, fp, #7$/;"	l
fe08	Test/a.s	/^    fe08:	e3790021 	cmn	r9, #33	; 0x21$/;"	l
fe0c	Test/a.s	/^    fe0c:	e58db004 	str	fp, [sp, #4]$/;"	l
fe10	Test/a.s	/^    fe10:	8a000057 	bhi	ff74 <realloc_check+0x238>$/;"	l
fe14	Test/a.s	/^    fe14:	e285700c 	add	r7, r5, #12$/;"	l
fe18	Test/a.s	/^    fe18:	e357000f 	cmp	r7, #15$/;"	l
fe1c	Test/a.s	/^    fe1c:	83c7b007 	bichi	fp, r7, #7$/;"	l
fe20	Test/a.s	/^    fe20:	93a0b010 	movls	fp, #16$/;"	l
fe24	Test/a.s	/^    fe24:	e3a01001 	mov	r1, #1$/;"	l
fe28	Test/a.s	/^    fe28:	e59f2208 	ldr	r2, [pc, #520]	; 10038 <realloc_check+0x2fc>$/;"	l
fe2c	Test/a.s	/^    fe2c:	e3a04000 	mov	r4, #0$/;"	l
fe30	Test/a.s	/^    fe30:	e5923000 	ldr	r3, [r2]$/;"	l
fe34	Test/a.s	/^    fe34:	e1530004 	cmp	r3, r4$/;"	l
fe38	Test/a.s	/^    fe38:	1a000005 	bne	fe54 <realloc_check+0x118>$/;"	l
fe3c	Test/a.s	/^    fe3c:	e1a00004 	mov	r0, r4$/;"	l
fe40	Test/a.s	/^    fe40:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
fe44	Test/a.s	/^    fe44:	e1a0e00f 	mov	lr, pc$/;"	l
fe48	Test/a.s	/^    fe48:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
fe4c	Test/a.s	/^    fe4c:	3afffff7 	bcc	fe30 <realloc_check+0xf4>$/;"	l
fe50	Test/a.s	/^    fe50:	e1a03004 	mov	r3, r4$/;"	l
fe54	Test/a.s	/^    fe54:	e1530004 	cmp	r3, r4$/;"	l
fe58	Test/a.s	/^    fe58:	1a00006c 	bne	10010 <realloc_check+0x2d4>$/;"	l
fe5c	Test/a.s	/^    fe5c:	e5983004 	ldr	r3, [r8, #4]$/;"	l
fe60	Test/a.s	/^    fe60:	e3130002 	tst	r3, #2$/;"	l
fe64	Test/a.s	/^    fe64:	1a000022 	bne	fef4 <realloc_check+0x1b8>$/;"	l
fe68	Test/a.s	/^    fe68:	ebfff4db 	bl	d1dc <top_check>$/;"	l
fe6c	Test/a.s	/^    fe6c:	e3500000 	cmp	r0, #0$/;"	l
fe70	Test/a.s	/^    fe70:	ba000039 	blt	ff5c <realloc_check+0x220>$/;"	l
fe74	Test/a.s	/^    fe74:	e357000f 	cmp	r7, #15$/;"	l
fe78	Test/a.s	/^    fe78:	83c73007 	bichi	r3, r7, #7$/;"	l
fe7c	Test/a.s	/^    fe7c:	93a03010 	movls	r3, #16$/;"	l
fe80	Test/a.s	/^    fe80:	e1a01008 	mov	r1, r8$/;"	l
fe84	Test/a.s	/^    fe84:	e59d2004 	ldr	r2, [sp, #4]$/;"	l
fe88	Test/a.s	/^    fe88:	e59f01a8 	ldr	r0, [pc, #424]	; 10038 <realloc_check+0x2fc>$/;"	l
fe8c	Test/a.s	/^    fe8c:	ebfffe24 	bl	f724 <_int_realloc>$/;"	l
fe90	Test/a.s	/^    fe90:	e1a06000 	mov	r6, r0$/;"	l
fe94	Test/a.s	/^    fe94:	e3560000 	cmp	r6, #0$/;"	l
fe98	Test/a.s	/^    fe98:	0a00002f 	beq	ff5c <realloc_check+0x220>$/;"	l
fe9c	Test/a.s	/^    fe9c:	e59a7000 	ldr	r7, [sl]$/;"	l
fea0	Test/a.s	/^    fea0:	e3a01000 	mov	r1, #0$/;"	l
fea4	Test/a.s	/^    fea4:	e1a04007 	mov	r4, r7$/;"	l
fea8	Test/a.s	/^    fea8:	e59f2188 	ldr	r2, [pc, #392]	; 10038 <realloc_check+0x2fc>$/;"	l
feac	Test/a.s	/^    feac:	e5923000 	ldr	r3, [r2]$/;"	l
feb0	Test/a.s	/^    feb0:	e1530004 	cmp	r3, r4$/;"	l
feb4	Test/a.s	/^    feb4:	1a000005 	bne	fed0 <realloc_check+0x194>$/;"	l
feb8	Test/a.s	/^    feb8:	e1a00004 	mov	r0, r4$/;"	l
febc	Test/a.s	/^    febc:	e3e03a0f 	mvn	r3, #61440	; 0xf000$/;"	l
fec0	Test/a.s	/^    fec0:	e1a0e00f 	mov	lr, pc$/;"	l
fec4	Test/a.s	/^    fec4:	e243f03f 	sub	pc, r3, #63	; 0x3f$/;"	l
fec8	Test/a.s	/^    fec8:	3afffff7 	bcc	feac <realloc_check+0x170>$/;"	l
fecc	Test/a.s	/^    fecc:	e1a03004 	mov	r3, r4$/;"	l
fed0	Test/a.s	/^    fed0:	e1570003 	cmp	r7, r3$/;"	l
fed4	Test/a.s	/^    fed4:	1afffff0 	bne	fe9c <realloc_check+0x160>$/;"	l
fed8	Test/a.s	/^    fed8:	e3570001 	cmp	r7, #1$/;"	l
fedc	Test/a.s	/^    fedc:	ca00004e 	bgt	1001c <realloc_check+0x2e0>$/;"	l
fee0	Test/a.s	/^    fee0:	e1a00006 	mov	r0, r6$/;"	l
fee4	Test/a.s	/^    fee4:	e1a01005 	mov	r1, r5$/;"	l
fee8	Test/a.s	/^    fee8:	ebffefd6 	bl	be48 <mem2mem_check>$/;"	l
feec	Test/a.s	/^    feec:	e28dd014 	add	sp, sp, #20$/;"	l
fef0	Test/a.s	/^    fef0:	e8bd8ff0 	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}$/;"	l
fef4	Test/a.s	/^    fef4:	e1a00008 	mov	r0, r8$/;"	l
fef8	Test/a.s	/^    fef8:	e1a0100b 	mov	r1, fp$/;"	l
fefc	Test/a.s	/^    fefc:	ebfff2b3 	bl	c9d0 <mremap_chunk>$/;"	l
ff00	Test/a.s	/^    ff00:	e3500000 	cmp	r0, #0$/;"	l
ff04	Test/a.s	/^    ff04:	12806008 	addne	r6, r0, #8$/;"	l
ff08	Test/a.s	/^    ff08:	1affffe1 	bne	fe94 <realloc_check+0x158>$/;"	l
ff0c	Test/a.s	/^    ff0c:	e59d2004 	ldr	r2, [sp, #4]$/;"	l
ff10	Test/a.s	/^    ff10:	e2423004 	sub	r3, r2, #4$/;"	l
ff14	Test/a.s	/^    ff14:	e15b0003 	cmp	fp, r3$/;"	l
ff18	Test/a.s	/^    ff18:	9affffdf 	bls	fe9c <realloc_check+0x160>$/;"	l
ff1c	Test/a.s	/^    ff1c:	ebfff4ae 	bl	d1dc <top_check>$/;"	l
ff20	Test/a.s	/^    ff20:	e3500000 	cmp	r0, #0$/;"	l
ff24	Test/a.s	/^    ff24:	ba00000c 	blt	ff5c <realloc_check+0x220>$/;"	l
ff28	Test/a.s	/^    ff28:	e1a01009 	mov	r1, r9$/;"	l
ff2c	Test/a.s	/^    ff2c:	e59f0104 	ldr	r0, [pc, #260]	; 10038 <realloc_check+0x2fc>$/;"	l
ff30	Test/a.s	/^    ff30:	ebfff83c 	bl	e028 <_int_malloc>$/;"	l
ff34	Test/a.s	/^    ff34:	e2504000 	subs	r4, r0, #0$/;"	l
ff38	Test/a.s	/^    ff38:	0a000007 	beq	ff5c <realloc_check+0x220>$/;"	l
ff3c	Test/a.s	/^    ff3c:	e59d3004 	ldr	r3, [sp, #4]$/;"	l
ff40	Test/a.s	/^    ff40:	e1a01006 	mov	r1, r6$/;"	l
ff44	Test/a.s	/^    ff44:	e2432008 	sub	r2, r3, #8$/;"	l
ff48	Test/a.s	/^    ff48:	eb000d6c 	bl	13500 <memcpy>$/;"	l
ff4c	Test/a.s	/^    ff4c:	e1a00008 	mov	r0, r8$/;"	l
ff50	Test/a.s	/^    ff50:	ebfff4ee 	bl	d310 <munmap_chunk>$/;"	l
ff54	Test/a.s	/^    ff54:	e1a06004 	mov	r6, r4$/;"	l
ff58	Test/a.s	/^    ff58:	eaffffcf 	b	fe9c <realloc_check+0x160>$/;"	l
ff5c	Test/a.s	/^    ff5c:	e59d300c 	ldr	r3, [sp, #12]$/;"	l
ff60	Test/a.s	/^    ff60:	e3a06000 	mov	r6, #0$/;"	l
ff64	Test/a.s	/^    ff64:	e5d32000 	ldrb	r2, [r3]$/;"	l
ff68	Test/a.s	/^    ff68:	e1e02002 	mvn	r2, r2$/;"	l
ff6c	Test/a.s	/^    ff6c:	e5c32000 	strb	r2, [r3]$/;"	l
ff70	Test/a.s	/^    ff70:	eaffffc9 	b	fe9c <realloc_check+0x160>$/;"	l
ff74	Test/a.s	/^    ff74:	e59f30c0 	ldr	r3, [pc, #192]	; 1003c <realloc_check+0x300>$/;"	l
ff78	Test/a.s	/^    ff78:	ebffe538 	bl	9460 <__aeabi_read_tp>$/;"	l
ff7c	Test/a.s	/^    ff7c:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
ff80	Test/a.s	/^    ff80:	e3a0200c 	mov	r2, #12$/;"	l
ff84	Test/a.s	/^    ff84:	e7802003 	str	r2, [r0, r3]$/;"	l
ff88	Test/a.s	/^    ff88:	e3a00000 	mov	r0, #0$/;"	l
ff8c	Test/a.s	/^    ff8c:	eaffffd6 	b	feec <realloc_check+0x1b0>$/;"	l
ff90	Test/a.s	/^    ff90:	e1a00001 	mov	r0, r1$/;"	l
ff94	Test/a.s	/^    ff94:	e1a01006 	mov	r1, r6$/;"	l
ff98	Test/a.s	/^    ff98:	ebfffcc7 	bl	f2bc <malloc_check>$/;"	l
ff9c	Test/a.s	/^    ff9c:	eaffffd2 	b	feec <realloc_check+0x1b0>$/;"	l
ffa0	Test/a.s	/^    ffa0:	e59f3098 	ldr	r3, [pc, #152]	; 10040 <realloc_check+0x304>$/;"	l
ffa4	Test/a.s	/^    ffa4:	ebffe52d 	bl	9460 <__aeabi_read_tp>$/;"	l
ffa8	Test/a.s	/^    ffa8:	e79f3003 	ldr	r3, [pc, r3]$/;"	l
ffac	Test/a.s	/^    ffac:	e3a0200c 	mov	r2, #12$/;"	l
ffb0	Test/a.s	/^    ffb0:	e7802003 	str	r2, [r0, r3]$/;"	l
ffb4	Test/a.s	/^    ffb4:	e3a00000 	mov	r0, #0$/;"	l
ffb8	Test/a.s	/^    ffb8:	eaffffcb 	b	feec <realloc_check+0x1b0>$/;"	l
ffbc	Test/a.s	/^    ffbc:	ebfffeeb 	bl	fb70 <free_check>$/;"	l
ffc0	Test/a.s	/^    ffc0:	e1a00005 	mov	r0, r5$/;"	l
ffc4	Test/a.s	/^    ffc4:	eaffffc8 	b	feec <realloc_check+0x1b0>$/;"	l
ffc8	Test/a.s	/^    ffc8:	e59a048c 	ldr	r0, [sl, #1164]	; 0x48c$/;"	l
ffcc	Test/a.s	/^    ffcc:	e1a02006 	mov	r2, r6$/;"	l
ffd0	Test/a.s	/^    ffd0:	e59f106c 	ldr	r1, [pc, #108]	; 10044 <realloc_check+0x308>$/;"	l
ffd4	Test/a.s	/^    ffd4:	ebfff31b 	bl	cc48 <malloc_printerr>$/;"	l
ffd8	Test/a.s	/^    ffd8:	e1a00005 	mov	r0, r5$/;"	l
ffdc	Test/a.s	/^    ffdc:	e1a01008 	mov	r1, r8$/;"	l
ffe0	Test/a.s	/^    ffe0:	ebfffcb5 	bl	f2bc <malloc_check>$/;"	l
ffe4	Test/a.s	/^    ffe4:	eaffffc0 	b	feec <realloc_check+0x1b0>$/;"	l
ffe8	Test/a.s	/^    ffe8:	e1a0000a 	mov	r0, sl$/;"	l
ffec	Test/a.s	/^    ffec:	eb0014e7 	bl	15390 <__lll_lock_wait_private>$/;"	l
fff0	Test/a.s	/^    fff0:	eaffff6a 	b	fda0 <realloc_check+0x64>$/;"	l
fff4	Test/a.s	/^    fff4:	e1a00002 	mov	r0, r2$/;"	l
fff8	Test/a.s	/^    fff8:	e3a01081 	mov	r1, #129	; 0x81$/;"	l
fffc	Test/a.s	/^    fffc:	e3a02001 	mov	r2, #1$/;"	l
flex_int16_t	lex.yy.c	/^typedef int16_t flex_int16_t;$/;"	t	file:
flex_int16_t	lex.yy.c	/^typedef short int flex_int16_t;$/;"	t	file:
flex_int32_t	lex.yy.c	/^typedef int flex_int32_t;$/;"	t	file:
flex_int32_t	lex.yy.c	/^typedef int32_t flex_int32_t;$/;"	t	file:
flex_int8_t	lex.yy.c	/^typedef int8_t flex_int8_t;$/;"	t	file:
flex_int8_t	lex.yy.c	/^typedef signed char flex_int8_t;$/;"	t	file:
flex_uint16_t	lex.yy.c	/^typedef uint16_t flex_uint16_t;$/;"	t	file:
flex_uint16_t	lex.yy.c	/^typedef unsigned short int flex_uint16_t;$/;"	t	file:
flex_uint32_t	lex.yy.c	/^typedef uint32_t flex_uint32_t;$/;"	t	file:
flex_uint32_t	lex.yy.c	/^typedef unsigned int flex_uint32_t;$/;"	t	file:
flex_uint8_t	lex.yy.c	/^typedef uint8_t flex_uint8_t;$/;"	t	file:
flex_uint8_t	lex.yy.c	/^typedef unsigned char flex_uint8_t; $/;"	t	file:
floatRegisterName	myRegister.c	/^char* floatRegisterName[] = {$/;"	v
floatWorkRegisterName	myRegister.c	/^char* floatWorkRegisterName[] = {"s22", "s23"};$/;"	v
freeRegister	myRegister.c	/^void freeRegister(ProcessorType processorType, int registerIndex)$/;"	f
functionSignature	symbolTable.h	/^        FunctionSignature* functionSignature;$/;"	m	union:SymbolAttribute::__anon4
function_decl	parser.y	/^function_decl	: function_head MK_LPAREN opt_param_list MK_RPAREN MK_LBRACE block MK_RBRACE$/;"	l
function_head	parser.y	/^function_head   : type ID$/;"	l
fval	header.h	/^		double  fval;$/;"	m	union:CON_Type::__anon7
g1	Test/pattern/assign.c	/^int g1;$/;"	v
g10	Test/pattern/assign.c	/^FLOATA g10;$/;"	v
g2	Test/pattern/assign.c	/^float g2;$/;"	v
g3	Test/pattern/assign.c	/^INT g3;$/;"	v
g4	Test/pattern/assign.c	/^FLOAT g4;$/;"	v
g5	Test/pattern/assign.c	/^int g5[2];$/;"	v
g6	Test/pattern/assign.c	/^float g6[2];$/;"	v
g7	Test/pattern/assign.c	/^INT g7[2];$/;"	v
g8	Test/pattern/assign.c	/^FLOAT g8[2];$/;"	v
g9	Test/pattern/assign.c	/^INTA g9;$/;"	v
g_anyErrorOccur	semanticAnalysis.c	/^int g_anyErrorOccur = 0;$/;"	v
g_codeGenOutputFp	codeGeneration.c	/^FILE* g_codeGenOutputFp = NULL;$/;"	v
g_currentFunctionName	codeGeneration.c	/^char* g_currentFunctionName = NULL;$/;"	v
g_deepestBlockVariableOffset	offsetInAR.c	/^int g_deepestBlockVariableOffset = 0;$/;"	v
g_floatRegisterTable	myRegister.c	/^FloatRegisterTable g_floatRegisterTable;$/;"	v
g_intRegisterTable	myRegister.c	/^IntRegisterTable g_intRegisterTable;$/;"	v
g_offsetInARAux	offsetInAR.c	/^int g_offsetInARAux = 0;$/;"	v
g_pseudoRegisterBeginOffset	myRegister.c	/^int g_pseudoRegisterBeginOffset = -4;$/;"	v
g_pseudoRegisterTable	myRegister.c	/^PseudoRegisterTable g_pseudoRegisterTable;$/;"	v
g_sourceFile	printSourceFile.c	/^char g_sourceFile[MAX_CODE_LINE_COUNT][MAX_LINE_LENGTH];$/;"	v
getBiggerType	semanticAnalysis.c	/^DATA_TYPE getBiggerType(DATA_TYPE dataType1, DATA_TYPE dataType2)$/;"	f
getExprOrConstValue	semanticAnalysis.c	/^void getExprOrConstValue(AST_NODE* exprOrConstNode, int* iValue, float* fValue)$/;"	f
getLabelNumber	codeGeneration.c	/^int getLabelNumber()$/;"	f
getMyIntVector	myIntVector.c	/^MyIntVector* getMyIntVector(int initialCapacity)$/;"	f
getPseudoRegisterCorrespondingOffset	myRegister.c	/^int getPseudoRegisterCorrespondingOffset(int pseudoRegisterIndex)$/;"	f
getRegister	myRegister.c	/^int getRegister(ProcessorType processorType)$/;"	f
getVariableSize	symbolTable.c	/^int getVariableSize(TypeDescriptor *typeDescriptor)$/;"	f
global_decl	parser.y	/^global_decl	: decl_list function_decl$/;"	l
global_decl_list	parser.y	/^global_decl_list: global_decl_list global_decl $/;"	l
hashTable	symbolTable.h	/^    SymbolTableEntry* hashTable[HASH_TABLE_SIZE];$/;"	m	struct:SymbolTable
iValue	header.h	/^        int iValue;$/;"	m	union:EXPRSemanticValue::__anon5
id_list	parser.y	/^id_list		: ID $/;"	l
identifierName	header.h	/^    char *identifierName;$/;"	m	struct:IdentifierSemanticValue
identifierSemanticValue	header.h	/^        IdentifierSemanticValue identifierSemanticValue;$/;"	m	union:AST_NODE::__anon8
initSystem	parser.tab.c	/^void initSystem()$/;"	f
init_id	parser.y	/^init_id		: ID $/;"	l
init_id_list	parser.y	/^init_id_list	: init_id $/;"	l
initializeRegisterTable	myRegister.c	/^void initializeRegisterTable()$/;"	f
initializeSymbolTable	symbolTable.c	/^void initializeSymbolTable()$/;"	f
intRegisterName	myRegister.c	/^char* intRegisterName[] = {$/;"	v
intWorkRegisterName	myRegister.c	/^char* intWorkRegisterName[] = {"r10", "r11"};$/;"	v
intval	header.h	/^		int     intval;$/;"	m	union:CON_Type::__anon7
isAllocated	myRegister.h	/^    int isAllocated[FLOAT_REGISTER_COUNT];$/;"	m	struct:FloatRegisterTable
isAllocated	myRegister.h	/^    int isAllocated[INT_REGISTER_COUNT];$/;"	m	struct:IntRegisterTable
isAllocatedVector	myRegister.h	/^    MyIntVector* isAllocatedVector;$/;"	m	struct:PseudoRegisterTable
isConstEval	header.h	/^    int isConstEval;$/;"	m	struct:EXPRSemanticValue
isGlobalVariable	symbolTable.c	/^int isGlobalVariable(SymbolTableEntry* symbolTableEntry)$/;"	f
j	Test/factotio_mips.s	/^j _end_fact$/;"	l
j	Test/factotio_mips.s	/^j _end_main$/;"	l
j	Test/factotio_mips.s	/^j _ifExitLabel_1$/;"	l
j	Test/factotio_mips.s	/^j _ifExitLabel_4$/;"	l
jal	Test/factotio_mips.s	/^jal _start_fact$/;"	l
jr	Test/factotio_mips.s	/^jr $ra$/;"	l
k	Test/pattern/func.c	/^int k;$/;"	v
kind	header.h	/^    DECL_KIND kind;$/;"	m	struct:DECLSemanticValue
kind	header.h	/^    EXPR_KIND kind;$/;"	m	struct:EXPRSemanticValue
kind	header.h	/^    IDENTIFIER_KIND kind;$/;"	m	struct:IdentifierSemanticValue
kind	header.h	/^    STMT_KIND kind;$/;"	m	struct:STMTSemanticValue
kind	symbolTable.h	/^    TypeDescriptorKind kind;$/;"	m	struct:TypeDescriptor
la	Test/factotio_mips.s	/^la $16, _CONSTANT_3$/;"	l
la	Test/factotio_mips.s	/^la $16, _CONSTANT_7$/;"	l
la	Test/factotio_mips.s	/^la $16, _CONSTANT_8$/;"	l
la	Test/factotio_mips.s	/^la $24, _g_n$/;"	l
la	Test/factotio_mips.s	/^la $24, _g_result$/;"	l
ldr	Test/Susceed/s1.s	/^ldr r0,=_CONSTANT_0$/;"	l
ldr	Test/Susceed/s1.s	/^ldr r0,[r0,#0]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr fp, [fp,#0]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr lr, =_frameSize_MAIN$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr lr, =_frameSize_f$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr lr, [fp, #4]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr lr, [lr, #0]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r10, =_g_c$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r10, [sp, #28]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r11, [sp, #32]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r4, =_CONSTANT_0$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r4, =_CONSTANT_1$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r4, [fp, #-4]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r4, [r10,#0]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r4, [r4, #0]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r4, [sp, #4]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r5, =_CONSTANT_2$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r5, =_CONSTANT_3$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r5, =_g_c$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r5, [fp, #-8]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r5, [r5, #0]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r5, [sp, #8]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r6, [sp, #12]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r7, [sp, #16]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r8, [sp, #20]$/;"	l
ldr	Test/can_linking_can_work/output.s	/^ldr r9, [sp, #24]$/;"	l
ldr	Test/io_pro_eiplog.S	/^ldr fp, [fp,#0]$/;"	l
ldr	Test/io_pro_eiplog.S	/^ldr lr, [fp, #4]$/;"	l
ldr	Test/io_pro_eiplog.S	/^ldr r10, [sp, #28]$/;"	l
ldr	Test/io_pro_eiplog.S	/^ldr r11, [sp, #32]$/;"	l
ldr	Test/io_pro_eiplog.S	/^ldr r4, [sp, #4]$/;"	l
ldr	Test/io_pro_eiplog.S	/^ldr r5, [sp, #8]$/;"	l
ldr	Test/io_pro_eiplog.S	/^ldr r6, [sp, #12]$/;"	l
ldr	Test/io_pro_eiplog.S	/^ldr r7, [sp, #16]$/;"	l
ldr	Test/io_pro_eiplog.S	/^ldr r8, [sp, #20]$/;"	l
ldr	Test/io_pro_eiplog.S	/^ldr r9, [sp, #24]$/;"	l
ldr	Test/output.s	/^ldr fp, [fp,#0]$/;"	l
ldr	Test/output.s	/^ldr lr, =_frameSize_MAIN$/;"	l
ldr	Test/output.s	/^ldr lr, [fp, #4]$/;"	l
ldr	Test/output.s	/^ldr lr, [lr, #0]$/;"	l
ldr	Test/output.s	/^ldr r10, =_CONSTANT_14$/;"	l
ldr	Test/output.s	/^ldr r10, =_CONSTANT_15$/;"	l
ldr	Test/output.s	/^ldr r10, [sp, #28]$/;"	l
ldr	Test/output.s	/^ldr r11, [sp, #32]$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_0$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_1$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_10$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_12$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_13$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_17$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_18$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_20$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_21$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_23$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_24$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_26$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_28$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_29$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_3$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_32$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_33$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_37$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_38$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_4$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_6$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_7$/;"	l
ldr	Test/output.s	/^ldr r4, =_CONSTANT_9$/;"	l
ldr	Test/output.s	/^ldr r4, [fp, #-4]$/;"	l
ldr	Test/output.s	/^ldr r4, [r4, #0]$/;"	l
ldr	Test/output.s	/^ldr r4, [sp, #4]$/;"	l
ldr	Test/output.s	/^ldr r5, =_CONSTANT_31$/;"	l
ldr	Test/output.s	/^ldr r5, =_CONSTANT_34$/;"	l
ldr	Test/output.s	/^ldr r5, =_CONSTANT_36$/;"	l
ldr	Test/output.s	/^ldr r5, [fp, #-8]$/;"	l
ldr	Test/output.s	/^ldr r5, [r5, #0]$/;"	l
ldr	Test/output.s	/^ldr r5, [sp, #8]$/;"	l
ldr	Test/output.s	/^ldr r6, [sp, #12]$/;"	l
ldr	Test/output.s	/^ldr r7, [sp, #16]$/;"	l
ldr	Test/output.s	/^ldr r8, [sp, #20]$/;"	l
ldr	Test/output.s	/^ldr r9, [sp, #24]$/;"	l
leftmostSibling	header.h	/^	struct AST_NODE *leftmostSibling;$/;"	m	struct:AST_NODE	typeref:struct:AST_NODE::AST_NODE
lexeme	parser.tab.c	/^	char *lexeme;$/;"	m	union:YYSTYPE	file:
lexeme	parser.tab.h	/^	char *lexeme;$/;"	m	union:YYSTYPE
li	Test/factotio_mips.s	/^li $v0, 1$/;"	l
li	Test/factotio_mips.s	/^li $v0, 10$/;"	l
li	Test/factotio_mips.s	/^li $v0, 4$/;"	l
li	Test/factotio_mips.s	/^li $v0, 5$/;"	l
linenumber	header.h	/^	int linenumber;$/;"	m	struct:AST_NODE
linenumber	parser.tab.c	/^int linenumber = 1;$/;"	v
lw	Test/factotio_mips.s	/^lw $16, 0($24)$/;"	l
lw	Test/factotio_mips.s	/^lw $16, 4($sp)$/;"	l
lw	Test/factotio_mips.s	/^lw $16, _CONSTANT_6$/;"	l
lw	Test/factotio_mips.s	/^lw $16, _CONSTANT_9$/;"	l
lw	Test/factotio_mips.s	/^lw $17, 8($sp)$/;"	l
lw	Test/factotio_mips.s	/^lw $17, _CONSTANT_0$/;"	l
lw	Test/factotio_mips.s	/^lw $17, _CONSTANT_2$/;"	l
lw	Test/factotio_mips.s	/^lw $17, _CONSTANT_5$/;"	l
lw	Test/factotio_mips.s	/^lw $18, 12($sp)$/;"	l
lw	Test/factotio_mips.s	/^lw $19, 16($sp)$/;"	l
lw	Test/factotio_mips.s	/^lw $2, _frameSize_fact$/;"	l
lw	Test/factotio_mips.s	/^lw $2, _frameSize_main$/;"	l
lw	Test/factotio_mips.s	/^lw $20, 20($sp)$/;"	l
lw	Test/factotio_mips.s	/^lw $21, 24($sp)$/;"	l
lw	Test/factotio_mips.s	/^lw $24, 28($sp)$/;"	l
lw	Test/factotio_mips.s	/^lw $25, 32($sp)$/;"	l
lw	Test/factotio_mips.s	/^lw $fp, 0($fp)$/;"	l
lw	Test/factotio_mips.s	/^lw $ra, 4($fp)$/;"	l
main	Test/call_read.S	/^main:$/;"	l
main	Test/call_read.c	/^int main(){$/;"	f
main	Test/can_linking_can_work/main.S	/^main:$/;"	l
main	Test/can_linking_can_work/main.c	/^int main(){$/;"	f
main	Test/can_linking_can_work/main_arm_only.S	/^main:$/;"	l
main	Test/can_linking_can_work/main_float_int_write_ok.S	/^main:$/;"	l
main	Test/factotio_mips.s	/^main:$/;"	l
main	Test/final/main.c	/^int main(){$/;"	f
main	Test/main.S	/^main:$/;"	l
main	Test/main.c	/^int main(){$/;"	f
main	Test/pattern/assign.c	/^int main() {$/;"	f
main	parser.tab.c	/^main (argc, argv)$/;"	f
makeChild	parser.tab.c	/^static inline AST_NODE* makeChild(AST_NODE *parent, AST_NODE *child)$/;"	f	file:
makeDeclNode	parser.tab.c	/^static inline AST_NODE* makeDeclNode(DECL_KIND declKind)$/;"	f	file:
makeExprNode	parser.tab.c	/^static inline AST_NODE* makeExprNode(EXPR_KIND exprKind, int operationEnumValue)$/;"	f	file:
makeFamily	parser.tab.c	/^static AST_NODE* makeFamily(AST_NODE *parent, int childrenCount, ...)$/;"	f	file:
makeIDNode	parser.tab.c	/^static inline AST_NODE* makeIDNode(char *lexeme, IDENTIFIER_KIND idKind)$/;"	f	file:
makeSibling	parser.tab.c	/^static inline AST_NODE* makeSibling(AST_NODE *a, AST_NODE *b)$/;"	f	file:
makeStmtNode	parser.tab.c	/^static inline AST_NODE* makeStmtNode(STMT_KIND stmtKind)$/;"	f	file:
mcexpr	parser.y	/^mcexpr		: mcexpr OP_TIMES cfactor $/;"	l
mov	Test/Susceed/s1.s	/^mov r0, r0$/;"	l
mov	Test/can_linking_can_work/output.s	/^mov r0, r4$/;"	l
mov	Test/can_linking_can_work/output.s	/^mov sp, fp$/;"	l
mov	Test/io_pro_eiplog.S	/^mov lr, #84$/;"	l
mov	Test/io_pro_eiplog.S	/^mov sp, fp$/;"	l
mov	Test/output.s	/^mov r0, r4$/;"	l
mov	Test/output.s	/^mov r4, #0$/;"	l
mov	Test/output.s	/^mov r5, #0$/;"	l
mov	Test/output.s	/^mov sp, fp$/;"	l
move	Test/factotio_mips.s	/^move $16, $v0$/;"	l
move	Test/factotio_mips.s	/^move $17, $v0$/;"	l
move	Test/factotio_mips.s	/^move $a0, $16$/;"	l
move	Test/factotio_mips.s	/^move $v0, $16$/;"	l
moveq	Test/output.s	/^moveq r4, #1$/;"	l
movgt	Test/output.s	/^movgt r4, #1$/;"	l
movlt	Test/output.s	/^movlt r4, #1$/;"	l
movne	Test/output.s	/^movne r4, #1$/;"	l
movne	Test/output.s	/^movne r5, #1$/;"	l
mul	Test/can_linking_can_work/output.s	/^mul r4, r4, r5$/;"	l
mul	Test/factotio_mips.s	/^mul $16, $16, $17$/;"	l
mul_op	parser.y	/^mul_op		: OP_TIMES$/;"	l
myPopBack	myIntVector.c	/^void myPopBack(MyIntVector* myIntVector)$/;"	f
myPushBack	myIntVector.c	/^void myPushBack(MyIntVector* myIntVector, int val)$/;"	f
n	Test/recursive.c	/^int n;$/;"	v
name	symbolTable.h	/^    char* name;$/;"	m	struct:SymbolTableEntry
nestingLevel	symbolTable.h	/^    int nestingLevel;$/;"	m	struct:SymbolTableEntry
newSymbolTableEntry	symbolTable.c	/^SymbolTableEntry* newSymbolTableEntry(int nestingLevel)$/;"	f
next	nodeAttribute.h	/^    struct ParameterList* next;$/;"	m	struct:ParameterList	typeref:struct:ParameterList::ParameterList
next	symbolTable.h	/^    struct Parameter* next;$/;"	m	struct:Parameter	typeref:struct:Parameter::Parameter
nextInHashChain	symbolTable.h	/^    struct SymbolTableEntry* nextInHashChain;$/;"	m	struct:SymbolTableEntry	typeref:struct:SymbolTableEntry::SymbolTableEntry
nextInSameLevel	symbolTable.h	/^    struct SymbolTableEntry* nextInSameLevel;$/;"	m	struct:SymbolTableEntry	typeref:struct:SymbolTableEntry::SymbolTableEntry
node	parser.tab.c	/^	AST_NODE  *node;$/;"	m	union:YYSTYPE	file:
node	parser.tab.h	/^	AST_NODE  *node;$/;"	m	union:YYSTYPE
nodeType	header.h	/^	AST_TYPE nodeType;$/;"	m	struct:AST_NODE
nonempty_assign_expr_list	parser.y	/^nonempty_assign_expr_list        : nonempty_assign_expr_list MK_COMMA assign_expr $/;"	l
nonempty_relop_expr_list	parser.y	/^nonempty_relop_expr_list	: nonempty_relop_expr_list MK_COMMA relop_expr$/;"	l
offsetInAR	symbolTable.h	/^    int offsetInAR;$/;"	m	struct:SymbolAttribute
op	header.h	/^    } op;$/;"	m	struct:EXPRSemanticValue	typeref:union:EXPRSemanticValue::__anon6
openScope	symbolTable.c	/^void openScope()$/;"	f
opt_param_list	parser.y	/^opt_param_list  : param_list$/;"	l
orr	Test/output.s	/^orr r4, r4, r5$/;"	l
param	parser.y	/^param		: type ID $/;"	l
param_list	parser.y	/^param_list	: param_list MK_COMMA  param $/;"	l
parameter	nodeAttribute.h	/^    Parameter parameter;$/;"	m	struct:ParameterList
parameterList	nodeAttribute.h	/^    ParameterList* parameterList;$/;"	m	struct:FunctionSignature
parameterList	symbolTable.h	/^    Parameter* parameterList;$/;"	m	struct:FunctionSignature
parameterName	symbolTable.h	/^    char* parameterName;$/;"	m	struct:Parameter
parametersCount	nodeAttribute.h	/^    int parametersCount;$/;"	m	struct:FunctionSignature
parametersCount	symbolTable.h	/^    int parametersCount;$/;"	m	struct:FunctionSignature
parent	header.h	/^	struct AST_NODE *parent;$/;"	m	struct:AST_NODE	typeref:struct:AST_NODE::AST_NODE
prevInHashChain	symbolTable.h	/^    struct SymbolTableEntry* prevInHashChain;$/;"	m	struct:SymbolTableEntry	typeref:struct:SymbolTableEntry::SymbolTableEntry
printCommentError	printSourceFile.c	/^int printCommentError = 0;$/;"	v
printErrorMsg	semanticAnalysis.c	/^void printErrorMsg(AST_NODE* node, ErrorMsgKind errorMsgKind)$/;"	f
printErrorMsgSpecial	semanticAnalysis.c	/^void printErrorMsgSpecial(AST_NODE* node1, char* name2, ErrorMsgKind errorMsgKind)$/;"	f
printGV	functions.c	/^void printGV(AST_NODE *root, char* fileName)$/;"	f
printGVNode	functions.c	/^int printGVNode(FILE *fp, AST_NODE* node, int count)$/;"	f
printLabelString	functions.c	/^char *printLabelString(FILE *fp, AST_NODE *astNode)$/;"	f
printRestoreRegister	myRegister.c	/^void printRestoreRegister(FILE* codeGenOutputFp)$/;"	f
printSourceFile	printSourceFile.c	/^void printSourceFile(FILE* outputFp, int lineNumber)$/;"	f
printStoreRegister	myRegister.c	/^void printStoreRegister(FILE* codeGenOutputFp)$/;"	f
processBlockNode	semanticAnalysis.c	/^void processBlockNode(AST_NODE* blockNode)$/;"	f
processConstValueNode	semanticAnalysis.c	/^void processConstValueNode(AST_NODE* constValueNode)$/;"	f
processDeclDimList	semanticAnalysis.c	/^void processDeclDimList(AST_NODE* idNode, TypeDescriptor* typeDescriptor, int ignoreFirstDimSize)$/;"	f
processDeclarationNode	semanticAnalysis.c	/^void processDeclarationNode(AST_NODE* declarationNode)$/;"	f
processExprNode	semanticAnalysis.c	/^void processExprNode(AST_NODE* exprNode)$/;"	f
processExprRelatedNode	semanticAnalysis.c	/^void processExprRelatedNode(AST_NODE* exprRelatedNode)$/;"	f
processGeneralNode	semanticAnalysis.c	/^void processGeneralNode(AST_NODE *node)$/;"	f
processProgramNode	semanticAnalysis.c	/^void processProgramNode(AST_NODE *programNode)$/;"	f
processStmtNode	semanticAnalysis.c	/^void processStmtNode(AST_NODE* stmtNode)$/;"	f
processTypeNode	semanticAnalysis.c	/^void processTypeNode(AST_NODE* idNodeAsType)$/;"	f
processVariableLValue	semanticAnalysis.c	/^void processVariableLValue(AST_NODE* idNode)$/;"	f
processVariableRValue	semanticAnalysis.c	/^void processVariableRValue(AST_NODE* idNode)$/;"	f
prog	parser.tab.c	/^AST_NODE *prog;$/;"	v
program	parser.y	/^program		: global_decl_list { $$=Allocate(PROGRAM_NODE);  makeChild($$,$1); prog=$$;}$/;"	l
properties	nodeAttribute.h	/^    } properties;$/;"	m	struct:DataTypeDescriptor	typeref:union:DataTypeDescriptor::__anon2
properties	symbolTable.h	/^    } properties;$/;"	m	struct:TypeDescriptor	typeref:union:TypeDescriptor::__anon3
readSourceFile	printSourceFile.c	/^void readSourceFile(char* fileName)$/;"	f
read_float	Test/call_read.S	/^read_float:$/;"	l
read_float	Test/call_read.c	/^float read_float(){$/;"	f
read_float	Test/can_linking_can_work/main_float_int_write_ok.S	/^read_float:$/;"	l
read_float	Test/final/main.c	/^float read_float(){$/;"	f
read_float	Test/main.S	/^read_float:$/;"	l
read_float	Test/main.c	/^float read_float(){$/;"	f
read_int	Test/call_read.S	/^read_int:$/;"	l
read_int	Test/call_read.c	/^int read_int(){$/;"	f
read_int	Test/can_linking_can_work/main_float_int_write_ok.S	/^read_int:$/;"	l
read_int	Test/final/main.c	/^int read_int(){$/;"	f
read_int	Test/main.S	/^read_int:$/;"	l
read_int	Test/main.c	/^int read_int(){$/;"	f
registerIndex	header.h	/^        int registerIndex;$/;"	m	struct:AST_NODE
rel_op	parser.y	/^rel_op		: OP_EQ$/;"	l
relop_expr	parser.y	/^relop_expr	: relop_term $/;"	l
relop_expr_list	parser.y	/^relop_expr_list	: nonempty_relop_expr_list $/;"	l
relop_factor	parser.y	/^relop_factor	: expr$/;"	l
relop_term	parser.y	/^relop_term	: relop_factor $/;"	l
removeFromHashTrain	symbolTable.c	/^void removeFromHashTrain(int hashIndex, SymbolTableEntry* entry)$/;"	f
removeSymbol	symbolTable.c	/^void removeSymbol(char* symbolName)$/;"	f
resetOffsetCalculation	offsetInAR.c	/^void resetOffsetCalculation()$/;"	f
resetRegisterTable	myRegister.c	/^void resetRegisterTable(int maxLocalVariableOffset)$/;"	f
result	Test/recursive.c	/^int result;$/;"	v
retrieveSymbol	symbolTable.c	/^SymbolTableEntry* retrieveSymbol(char* symbolName)$/;"	f
returnType	nodeAttribute.h	/^    DataTypeDescriptor *returnType;$/;"	m	struct:FunctionSignature
returnType	symbolTable.h	/^    DATA_TYPE returnType;$/;"	m	struct:FunctionSignature
rightSibling	header.h	/^	struct AST_NODE *rightSibling;$/;"	m	struct:AST_NODE	typeref:struct:AST_NODE::AST_NODE
sameNameInOuterLevel	symbolTable.h	/^    struct SymbolTableEntry* sameNameInOuterLevel;$/;"	m	struct:SymbolTableEntry	typeref:struct:SymbolTableEntry::SymbolTableEntry
sc	header.h	/^		char    *sc; }$/;"	m	union:CON_Type::__anon7
scopeDisplay	symbolTable.h	/^    SymbolTableEntry** scopeDisplay;$/;"	m	struct:SymbolTable
scopeDisplayElementCount	symbolTable.h	/^    int scopeDisplayElementCount;$/;"	m	struct:SymbolTable
semanticAnalysis	semanticAnalysis.c	/^void semanticAnalysis(AST_NODE *root)$/;"	f
semantic_value	header.h	/^	} semantic_value;$/;"	m	struct:AST_NODE	typeref:union:AST_NODE::__anon8
seq	Test/factotio_mips.s	/^seq $16, $16, $17$/;"	l
setOffsetAndUpdateGlobalOffset	offsetInAR.c	/^void setOffsetAndUpdateGlobalOffset(SymbolAttribute* attribute)$/;"	f
sgt	Test/factotio_mips.s	/^sgt $16, $16, $17$/;"	l
short	parser.tab.c	294;"	d	file:
size	myIntVector.h	/^    int size;$/;"	m	struct:MyIntVector
sizeInEachDimension	nodeAttribute.h	/^    int sizeInEachDimension[MAX_ARRAY_DIMENSION];$/;"	m	struct:ArrayProperties
sizeInEachDimension	symbolTable.h	/^    int sizeInEachDimension[MAX_ARRAY_DIMENSION];$/;"	m	struct:ArrayProperties
stmt	parser.y	/^stmt		: MK_LBRACE block MK_RBRACE $/;"	l
stmtSemanticValue	header.h	/^        STMTSemanticValue stmtSemanticValue;$/;"	m	union:AST_NODE::__anon8
stmt_list	parser.y	/^stmt_list	: stmt_list stmt $/;"	l
str	Test/can_linking_can_work/output.s	/^str fp, [sp, #-4]$/;"	l
str	Test/can_linking_can_work/output.s	/^str lr, [sp, #0]$/;"	l
str	Test/can_linking_can_work/output.s	/^str r10, [sp, #28]$/;"	l
str	Test/can_linking_can_work/output.s	/^str r11, [sp, #32]$/;"	l
str	Test/can_linking_can_work/output.s	/^str r4, [fp, #-4]$/;"	l
str	Test/can_linking_can_work/output.s	/^str r4, [fp, #-8]$/;"	l
str	Test/can_linking_can_work/output.s	/^str r4, [r5, #0]$/;"	l
str	Test/can_linking_can_work/output.s	/^str r4, [sp, #4]$/;"	l
str	Test/can_linking_can_work/output.s	/^str r5, [sp, #8]$/;"	l
str	Test/can_linking_can_work/output.s	/^str r6, [sp, #12]$/;"	l
str	Test/can_linking_can_work/output.s	/^str r7, [sp, #16]$/;"	l
str	Test/can_linking_can_work/output.s	/^str r8, [sp, #20]$/;"	l
str	Test/can_linking_can_work/output.s	/^str r9, [sp, #24]$/;"	l
str	Test/io_pro_eiplog.S	/^str fp, [sp, #-4]$/;"	l
str	Test/io_pro_eiplog.S	/^str lr, [sp, #0]$/;"	l
str	Test/io_pro_eiplog.S	/^str r10, [sp, #28]$/;"	l
str	Test/io_pro_eiplog.S	/^str r11, [sp, #32]$/;"	l
str	Test/io_pro_eiplog.S	/^str r4, [sp, #4]$/;"	l
str	Test/io_pro_eiplog.S	/^str r5, [sp, #8]$/;"	l
str	Test/io_pro_eiplog.S	/^str r6, [sp, #12]$/;"	l
str	Test/io_pro_eiplog.S	/^str r7, [sp, #16]$/;"	l
str	Test/io_pro_eiplog.S	/^str r8, [sp, #20]$/;"	l
str	Test/io_pro_eiplog.S	/^str r9, [sp, #24]$/;"	l
str	Test/output.s	/^str fp, [sp, #-4]$/;"	l
str	Test/output.s	/^str lr, [sp, #0]$/;"	l
str	Test/output.s	/^str r10, [sp, #28]$/;"	l
str	Test/output.s	/^str r11, [sp, #32]$/;"	l
str	Test/output.s	/^str r4, [fp, #-4]$/;"	l
str	Test/output.s	/^str r4, [fp, #-8]$/;"	l
str	Test/output.s	/^str r4, [sp, #4]$/;"	l
str	Test/output.s	/^str r5, [sp, #8]$/;"	l
str	Test/output.s	/^str r6, [sp, #12]$/;"	l
str	Test/output.s	/^str r7, [sp, #16]$/;"	l
str	Test/output.s	/^str r8, [sp, #20]$/;"	l
str	Test/output.s	/^str r9, [sp, #24]$/;"	l
sub	Test/can_linking_can_work/output.s	/^sub r4, r4, r5$/;"	l
sub	Test/can_linking_can_work/output.s	/^sub sp, sp, lr$/;"	l
sub	Test/factotio_mips.s	/^sub $16, $16, $17$/;"	l
sub	Test/factotio_mips.s	/^sub $sp, $sp, $2$/;"	l
sub	Test/io_pro_eiplog.S	/^sub sp, sp, lr$/;"	l
sub	Test/output.s	/^sub sp, sp, lr$/;"	l
sw	Test/factotio_mips.s	/^sw $16, 4($sp)$/;"	l
sw	Test/factotio_mips.s	/^sw $16, _g_n$/;"	l
sw	Test/factotio_mips.s	/^sw $16, _g_result$/;"	l
sw	Test/factotio_mips.s	/^sw $17, 8($sp)$/;"	l
sw	Test/factotio_mips.s	/^sw $18, 12($sp)$/;"	l
sw	Test/factotio_mips.s	/^sw $19, 16($sp)$/;"	l
sw	Test/factotio_mips.s	/^sw $20, 20($sp)$/;"	l
sw	Test/factotio_mips.s	/^sw $21, 24($sp)$/;"	l
sw	Test/factotio_mips.s	/^sw $24, 28($sp)$/;"	l
sw	Test/factotio_mips.s	/^sw $25, 32($sp)$/;"	l
sw	Test/factotio_mips.s	/^sw $fp, -4($sp)$/;"	l
sw	Test/factotio_mips.s	/^sw $ra, 0($sp)$/;"	l
symbolTable	symbolTable.c	/^SymbolTable symbolTable;$/;"	v
symbolTableEnd	symbolTable.c	/^void symbolTableEnd()$/;"	f
symbolTableEntry	header.h	/^    struct SymbolTableEntry *symbolTableEntry;$/;"	m	struct:IdentifierSemanticValue	typeref:struct:IdentifierSemanticValue::SymbolTableEntry
syscall	Test/factotio_mips.s	/^syscall$/;"	l
term	parser.y	/^term		: term mul_op factor$/;"	l
test	parser.y	/^test		: assign_expr$/;"	l
try	Test/pattern/func.c	/^void try() {$/;"	f
type	nodeAttribute.h	/^    DATA_TYPE type;$/;"	m	struct:DataTypeDescriptor
type	nodeAttribute.h	/^    DataTypeDescriptor* type;$/;"	m	struct:Parameter
type	parser.y	/^type		: INT $/;"	l
type	symbolTable.h	/^    TypeDescriptor* type;$/;"	m	struct:Parameter
typeDescriptor	symbolTable.h	/^        TypeDescriptor* typeDescriptor;$/;"	m	union:SymbolAttribute::__anon4
typeName	header.h	/^    char *typeName;$/;"	m	struct:TypeSpecSemanticValue
type_decl	parser.y	/^type_decl 	: TYPEDEF type id_list MK_SEMICOLON  $/;"	l
unaryOp	header.h	/^        UNARY_OPERATOR unaryOp;$/;"	m	union:EXPRSemanticValue::__anon6
unput	lex.yy.c	188;"	d	file:
var_decl	parser.y	/^var_decl	: type init_id_list MK_SEMICOLON $/;"	l
var_ref	parser.y	/^var_ref		: ID $/;"	l
vmrs	Test/output.s	/^vmrs  APSR_nzcv, FPSCR$/;"	l
write_float	Test/call_read.S	/^write_float:$/;"	l
write_float	Test/call_read.c	/^void write_float(float a){$/;"	f
write_float	Test/can_linking_can_work/main_float_int_write_ok.S	/^write_float:$/;"	l
write_float	Test/final/main.c	/^void write_float(float a){$/;"	f
write_float	Test/main.S	/^write_float:$/;"	l
write_float	Test/main.c	/^void write_float(float a){$/;"	f
write_int	Test/call_read.S	/^write_int:$/;"	l
write_int	Test/call_read.c	/^void write_int(int a){$/;"	f
write_int	Test/can_linking_can_work/main_float_int_write_ok.S	/^write_int:$/;"	l
write_int	Test/final/main.c	/^void write_int(int a){$/;"	f
write_int	Test/main.S	/^write_int:$/;"	l
write_int	Test/main.c	/^void write_int(int a){$/;"	f
write_str	Test/call_read.S	/^write_str:$/;"	l
write_str	Test/call_read.c	/^void write_str(char* a){$/;"	f
write_str	Test/can_linking_can_work/main_float_int_write_ok.S	/^write_str:$/;"	l
write_str	Test/final/main.c	/^void write_str(char* a){$/;"	f
write_str	Test/main.S	/^write_str:$/;"	l
write_str	Test/main.c	/^void write_str(char* a){$/;"	f
yy_accept	lex.yy.c	/^static yyconst flex_int16_t yy_accept[90] =$/;"	v	file:
yy_at_bol	lex.yy.c	/^	int yy_at_bol;$/;"	m	struct:yy_buffer_state	file:
yy_base	lex.yy.c	/^static yyconst flex_int16_t yy_base[93] =$/;"	v	file:
yy_bs_column	lex.yy.c	/^    int yy_bs_column; \/**< The column count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_bs_lineno	lex.yy.c	/^    int yy_bs_lineno; \/**< The line count. *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_pos	lex.yy.c	/^	char *yy_buf_pos;		\/* current position in input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_buf_size	lex.yy.c	/^	yy_size_t yy_buf_size;$/;"	m	struct:yy_buffer_state	file:
yy_buffer_stack	lex.yy.c	/^static YY_BUFFER_STATE * yy_buffer_stack = 0; \/**< Stack as an array. *\/$/;"	v	file:
yy_buffer_stack_max	lex.yy.c	/^static size_t yy_buffer_stack_max = 0; \/**< capacity of stack. *\/$/;"	v	file:
yy_buffer_stack_top	lex.yy.c	/^static size_t yy_buffer_stack_top = 0; \/**< index of top of stack. *\/$/;"	v	file:
yy_buffer_state	lex.yy.c	/^struct yy_buffer_state$/;"	s	file:
yy_buffer_status	lex.yy.c	/^	int yy_buffer_status;$/;"	m	struct:yy_buffer_state	file:
yy_c_buf_p	lex.yy.c	/^static char *yy_c_buf_p = (char *) 0;$/;"	v	file:
yy_ch_buf	lex.yy.c	/^	char *yy_ch_buf;		\/* input buffer *\/$/;"	m	struct:yy_buffer_state	file:
yy_chk	lex.yy.c	/^static yyconst flex_int16_t yy_chk[167] =$/;"	v	file:
yy_create_buffer	lex.yy.c	/^    YY_BUFFER_STATE yy_create_buffer  (FILE * file, int  size )$/;"	f
yy_def	lex.yy.c	/^static yyconst flex_int16_t yy_def[93] =$/;"	v	file:
yy_delete_buffer	lex.yy.c	/^    void yy_delete_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_did_buffer_switch_on_eof	lex.yy.c	/^static int yy_did_buffer_switch_on_eof;$/;"	v	file:
yy_ec	lex.yy.c	/^static yyconst flex_int32_t yy_ec[256] =$/;"	v	file:
yy_fatal_error	lex.yy.c	/^static void yy_fatal_error (yyconst char* msg )$/;"	f	file:
yy_fill_buffer	lex.yy.c	/^	int yy_fill_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_flex_debug	lex.yy.c	/^int yy_flex_debug = 0;$/;"	v
yy_flex_strlen	lex.yy.c	/^static int yy_flex_strlen (yyconst char * s )$/;"	f	file:
yy_flex_strncpy	lex.yy.c	/^static void yy_flex_strncpy (char* s1, yyconst char * s2, int n )$/;"	f	file:
yy_flush_buffer	lex.yy.c	/^    void yy_flush_buffer (YY_BUFFER_STATE  b )$/;"	f
yy_get_next_buffer	lex.yy.c	/^static int yy_get_next_buffer (void)$/;"	f	file:
yy_get_previous_state	lex.yy.c	/^    static yy_state_type yy_get_previous_state (void)$/;"	f	file:
yy_hold_char	lex.yy.c	/^static char yy_hold_char;$/;"	v	file:
yy_init	lex.yy.c	/^static int yy_init = 0;		\/* whether we need to initialize *\/$/;"	v	file:
yy_init_buffer	lex.yy.c	/^    static void yy_init_buffer  (YY_BUFFER_STATE  b, FILE * file )$/;"	f	file:
yy_init_globals	lex.yy.c	/^static int yy_init_globals (void)$/;"	f	file:
yy_input_file	lex.yy.c	/^	FILE *yy_input_file;$/;"	m	struct:yy_buffer_state	file:
yy_is_interactive	lex.yy.c	/^	int yy_is_interactive;$/;"	m	struct:yy_buffer_state	file:
yy_is_our_buffer	lex.yy.c	/^	int yy_is_our_buffer;$/;"	m	struct:yy_buffer_state	file:
yy_last_accepting_cpos	lex.yy.c	/^static char *yy_last_accepting_cpos;$/;"	v	file:
yy_last_accepting_state	lex.yy.c	/^static yy_state_type yy_last_accepting_state;$/;"	v	file:
yy_load_buffer_state	lex.yy.c	/^static void yy_load_buffer_state  (void)$/;"	f	file:
yy_meta	lex.yy.c	/^static yyconst flex_int32_t yy_meta[45] =$/;"	v	file:
yy_n_chars	lex.yy.c	/^	int yy_n_chars;$/;"	m	struct:yy_buffer_state	file:
yy_n_chars	lex.yy.c	/^static int yy_n_chars;		\/* number of characters read into yy_ch_buf *\/$/;"	v	file:
yy_new_buffer	lex.yy.c	317;"	d	file:
yy_nxt	lex.yy.c	/^	flex_int32_t yy_nxt;$/;"	m	struct:yy_trans_info	file:
yy_nxt	lex.yy.c	/^static yyconst flex_int16_t yy_nxt[167] =$/;"	v	file:
yy_reduce_print	parser.tab.c	/^yy_reduce_print (YYSTYPE *yyvsp, int yyrule)$/;"	f	file:
yy_scan_buffer	lex.yy.c	/^YY_BUFFER_STATE yy_scan_buffer  (char * base, yy_size_t  size )$/;"	f
yy_scan_bytes	lex.yy.c	/^YY_BUFFER_STATE yy_scan_bytes  (yyconst char * yybytes, int  _yybytes_len )$/;"	f
yy_scan_string	lex.yy.c	/^YY_BUFFER_STATE yy_scan_string (yyconst char * yystr )$/;"	f
yy_set_bol	lex.yy.c	329;"	d	file:
yy_set_interactive	lex.yy.c	319;"	d	file:
yy_size_t	lex.yy.c	/^typedef size_t yy_size_t;$/;"	t	file:
yy_stack_print	parser.tab.c	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_start	lex.yy.c	/^static int yy_start = 0;	\/* start state number *\/$/;"	v	file:
yy_state_type	lex.yy.c	/^typedef int yy_state_type;$/;"	t	file:
yy_switch_to_buffer	lex.yy.c	/^    void yy_switch_to_buffer  (YY_BUFFER_STATE  new_buffer )$/;"	f
yy_symbol_print	parser.tab.c	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_symbol_value_print	parser.tab.c	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep)$/;"	f	file:
yy_trans_info	lex.yy.c	/^struct yy_trans_info$/;"	s	file:
yy_try_NUL_trans	lex.yy.c	/^    static yy_state_type yy_try_NUL_trans  (yy_state_type yy_current_state )$/;"	f	file:
yy_verify	lex.yy.c	/^	flex_int32_t yy_verify;$/;"	m	struct:yy_trans_info	file:
yyalloc	lex.yy.c	/^void *yyalloc (yy_size_t  size )$/;"	f
yyalloc	parser.tab.c	/^union yyalloc$/;"	u	file:
yychar	parser.tab.c	/^int yychar;$/;"	v
yycheck	parser.tab.c	/^static const yytype_int16 yycheck[] =$/;"	v	file:
yyclearin	parser.tab.c	892;"	d	file:
yyconst	lex.yy.c	106;"	d	file:
yyconst	lex.yy.c	108;"	d	file:
yydebug	parser.tab.c	/^int yydebug;$/;"	v
yydefact	parser.tab.c	/^static const yytype_uint8 yydefact[] =$/;"	v	file:
yydefgoto	parser.tab.c	/^static const yytype_int16 yydefgoto[] =$/;"	v	file:
yydestruct	parser.tab.c	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep)$/;"	f	file:
yyensure_buffer_stack	lex.yy.c	/^static void yyensure_buffer_stack (void)$/;"	f	file:
yyerrok	parser.tab.c	891;"	d	file:
yyerror	parser.tab.c	/^int yyerror (mesg)$/;"	f
yyfree	lex.yy.c	/^void yyfree (void * ptr )$/;"	f
yyget_debug	lex.yy.c	/^int yyget_debug  (void)$/;"	f
yyget_in	lex.yy.c	/^FILE *yyget_in  (void)$/;"	f
yyget_leng	lex.yy.c	/^int yyget_leng  (void)$/;"	f
yyget_lineno	lex.yy.c	/^int yyget_lineno  (void)$/;"	f
yyget_out	lex.yy.c	/^FILE *yyget_out  (void)$/;"	f
yyget_text	lex.yy.c	/^char *yyget_text  (void)$/;"	f
yyin	lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yyinput	lex.yy.c	/^    static int yyinput (void)$/;"	f	file:
yyleng	lex.yy.c	/^int yyleng;$/;"	v
yyless	lex.yy.c	175;"	d	file:
yyless	lex.yy.c	1845;"	d	file:
yyless	lex.yy.c	1846;"	d	file:
yylex_destroy	lex.yy.c	/^int yylex_destroy  (void)$/;"	f
yylineno	lex.yy.c	/^int yylineno = 1;$/;"	v
yymore	lex.yy.c	518;"	d	file:
yynerrs	parser.tab.c	/^int yynerrs;$/;"	v
yyout	lex.yy.c	/^FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;$/;"	v
yypact	parser.tab.c	/^static const yytype_int16 yypact[] =$/;"	v	file:
yypact_value_is_default	parser.tab.c	829;"	d	file:
yyparse	parser.tab.c	/^yyparse (void *YYPARSE_PARAM)$/;"	f
yypgoto	parser.tab.c	/^static const yytype_int16 yypgoto[] =$/;"	v	file:
yypop_buffer_state	lex.yy.c	/^void yypop_buffer_state (void)$/;"	f
yyprhs	parser.tab.c	/^static const yytype_uint16 yyprhs[] =$/;"	v	file:
yypush_buffer_state	lex.yy.c	/^void yypush_buffer_state (YY_BUFFER_STATE new_buffer )$/;"	f
yyr1	parser.tab.c	/^static const yytype_uint8 yyr1[] =$/;"	v	file:
yyr2	parser.tab.c	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrealloc	lex.yy.c	/^void *yyrealloc  (void * ptr, yy_size_t  size )$/;"	f
yyrestart	lex.yy.c	/^    void yyrestart  (FILE * input_file )$/;"	f
yyrhs	parser.tab.c	/^static const yytype_int8 yyrhs[] =$/;"	v	file:
yyrline	parser.tab.c	/^static const yytype_uint16 yyrline[] =$/;"	v	file:
yyset_debug	lex.yy.c	/^void yyset_debug (int  bdebug )$/;"	f
yyset_in	lex.yy.c	/^void yyset_in (FILE *  in_str )$/;"	f
yyset_lineno	lex.yy.c	/^void yyset_lineno (int  line_number )$/;"	f
yyset_out	lex.yy.c	/^void yyset_out (FILE *  out_str )$/;"	f
yyss_alloc	parser.tab.c	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yystos	parser.tab.c	/^static const yytype_uint8 yystos[] =$/;"	v	file:
yystpcpy	parser.tab.c	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	parser.tab.c	1159;"	d	file:
yystrlen	parser.tab.c	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	parser.tab.c	1136;"	d	file:
yystype	parser.tab.c	266;"	d	file:
yystype	parser.tab.h	103;"	d
yysyntax_error	parser.tab.c	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yytable	parser.tab.c	/^static const yytype_int16 yytable[] =$/;"	v	file:
yytable_value_is_error	parser.tab.c	832;"	d	file:
yyterminate	lex.yy.c	663;"	d	file:
yytext	lex.yy.c	/^char *yytext;$/;"	v
yytext_ptr	lex.yy.c	354;"	d	file:
yytname	parser.tab.c	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	parser.tab.c	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	parser.tab.c	/^   enum yytokentype {$/;"	g	file:
yytokentype	parser.tab.h	/^   enum yytokentype {$/;"	g
yytoknum	parser.tab.c	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	parser.tab.c	/^static const yytype_uint8 yytranslate[] =$/;"	v	file:
yytype_int16	parser.tab.c	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	parser.tab.c	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	parser.tab.c	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	parser.tab.c	/^typedef short int yytype_int8;$/;"	t	file:
yytype_int8	parser.tab.c	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	parser.tab.c	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	parser.tab.c	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	parser.tab.c	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	parser.tab.c	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyunput	lex.yy.c	/^    static void yyunput (int c, register char * yy_bp )$/;"	f	file:
yyvs_alloc	parser.tab.c	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
zeroRegisterName	myRegister.c	/^char* zeroRegisterName = "$0";$/;"	v
